basePath: /v1
definitions:
  APICallError:
    properties:
      errorMessage:
        $ref: '#/definitions/APICallErrorMessage'
      httpStatus:
        format: int32
        type: integer
  APICallErrorMessage:
    properties:
      code:
        description: エラーコード
        type: string
      message:
        description: エラーメッセージ。リクエスト時にX-Soracom-Langヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。
        type: string
    required:
    - code
    - message
  APIKeyResponse:
    properties:
      apiKey:
        type: string
  ActionConfig:
    properties:
      properties:
        $ref: '#/definitions/ActionConfigProperty'
      type:
        enum:
        - ChangeSpeedClassAction
        - InvokeAWSLambdaAction
        - ExecuteWebRequestAction
        - SendMailAction
        - SendMailToOperatorAction
        type: string
    required:
    - properties
    - type
  ActionConfigProperty:
    properties:
      accessKey:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      body:
        description: ExecuteWebRequestAction の時のみ有効(任意)
        type: string
      contentType:
        description: ExecuteWebRequestAction の時のみ有効
        type: string
      endpoint:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      executionDateTimeConst:
        enum:
        - IMMEDIATELY
        - BEGINNING_OF_NEXT_MONTH
        - BEGINNING_OF_NEXT_DAY
        - AFTER_ONE_DAY
        - NEVER
        type: string
      functionName:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      headers:
        description: ExecuteWebRequestAction の時のみ有効(任意)
        type: object
      httpMethod:
        description: ExecuteWebRequestAction の時のみ有効
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        type: string
      message:
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
        type: string
      parameter1:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter2:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter3:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter4:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter5:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      secretAccessKey:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      speedClass:
        description: ChangeSpeedClassAction の時のみ有効
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
      title:
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
        type: string
      to:
        description: SendMailAction の時のみ有効
        type: string
      url:
        description: 接続先URLとパラメーター ExecuteWebRequestAction の時のみ有効
        type: string
    required:
    - executionDateTimeConst
  AirStatsResponse:
    properties:
      dataTrafficStatsMap:
        additionalProperties:
          $ref: '#/definitions/DataTrafficStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
  AttachRoleRequest:
    properties:
      roleId:
        type: string
  AttributeUpdate:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  AuthKeyResponse:
    properties:
      authKeyId:
        type: string
      createDateTime:
        format: int64
        type: integer
      lastUsedDateTime:
        format: int64
        type: integer
  AuthRequest:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
      email:
        type: string
      mfaOTPCode:
        type: string
      operatorId:
        type: string
      password:
        type: string
      tokenTimeoutSeconds:
        default: 86400
        format: int64
        maximum: 172800
        type: integer
      userName:
        type: string
  AuthResponse:
    properties:
      apiKey:
        type: string
      operatorId:
        type: string
      token:
        type: string
      userName:
        type: string
  BeamStatsResponse:
    properties:
      beamStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomBeamStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
  Config:
    properties:
      properties:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
  CouponResponse:
    properties:
      amount:
        description: Amount
        format: double
        type: number
      balance:
        description: Balance
        format: double
        type: number
      billItemName:
        description: Item
        type: string
      couponCode:
        description: Coupon code
        type: string
      expiryYearMonth:
        description: Expiry month
        example: yyyyMM
        type: string
  CreateAndUpdateCredentialsModel:
    properties:
      credentials:
        type: object
      description:
        type: string
      type:
        enum:
        - aws-credentials
        - azure-credentials
        - psk
        - x509
        type: string
  CreateEstimatedOrderRequest:
    properties:
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/OrderItemModel'
        type: array
      shippingAddressId:
        description: 商品発送先ID
        type: string
  CreateEventHandlerRequest:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
        - inactive
        - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
        $ref: '#/definitions/TagSet'
    required:
    - actionConfigList
    - ruleConfig
    - status
  CreateGroupRequest:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
  CreateOrUpdateRoleRequest:
    properties:
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  CreatePortMappingRequest:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        type: boolean
    required:
    - destination
  CreateRoleResponse:
    properties:
      roleId:
        type: string
  CreateUserPasswordRequest:
    properties:
      password:
        type: string
  CreateUserRequest:
    properties:
      description:
        type: string
  CreateVirtualPrivateGatewayRequest:
    properties:
      deviceSubnetCidrRange:
        default: 10.128.0.0/9
        type: string
      primaryServiceName:
        default: Canal
        enum:
        - Canal
        - Gate
        type: string
      useInternetGateway:
        type: boolean
    required:
    - primaryServiceName
  CreateVpcPeeringConnectionRequest:
    properties:
      destinationCidrBlock:
        type: string
      peerOwnerId:
        type: string
      peerRegion:
        type: string
      peerVpcId:
        type: string
  CredentialsModel:
    properties:
      createDateTime:
        format: int64
        type: integer
      credentials:
        type: object
      credentialsId:
        type: string
      description:
        type: string
      lastUsedDateTime:
        format: int64
        type: integer
      type:
        enum:
        - aws-credentials
        - azure-credentials
        - psk
        - x509
        type: string
      updateDateTime:
        format: int64
        type: integer
  CreditCard:
    properties:
      cvc:
        type: string
      expireMonth:
        format: int32
        type: integer
      expireYear:
        format: int32
        type: integer
      name:
        type: string
      number:
        type: string
  DailyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      date:
        description: 年月日
        example: yyyyMMdd
        type: string
  DailyBillResponse:
    properties:
      billList:
        description: 日ごとの利用料リスト
        items:
          $ref: '#/definitions/DailyBill'
        type: array
  DataEntry:
    properties:
      content:
        type: string
      contentType:
        type: string
      time:
        format: int64
        type: integer
  DataSourceResourceMetadata:
    properties:
      attributeNames:
        items:
          type: string
        type: array
      lastModifiedTime:
        format: int64
        type: integer
      resourceId:
        type: string
      resourceType:
        type: string
  DataTrafficStats:
    properties:
      downloadByteSizeTotal:
        format: int64
        type: integer
      downloadPacketSizeTotal:
        format: int64
        type: integer
      uploadByteSizeTotal:
        format: int64
        type: integer
      uploadPacketSizeTotal:
        format: int64
        type: integer
  Device:
    properties:
      device_id:
        type: string
      endpoint:
        type: string
      firmwareVersion:
        type: string
      groupId:
        type: string
      ipAddress:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastRegistrationUpdate:
        format: date-time
        type: string
      manufacturer:
        type: string
      modelNumber:
        type: string
      objects:
        type: object
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      registrationId:
        type: string
      registrationLifeTime:
        format: int64
        type: integer
      serialNumber:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  DeviceObjectModel:
    properties:
      createdTime:
        format: date-time
        type: string
      format:
        enum:
        - xml
        - json
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      objectId:
        type: string
      objectName:
        type: string
      operatorId:
        type: string
      scope:
        type: string
    type: object
  EnableMFAOTPResponse:
    properties:
      totpUri:
        type: string
  Error:
    properties:
      code:
        format: int32
        type: integer
      fields:
        type: string
      message:
        type: string
  EstimatedOrderItemModel:
    properties:
      product:
        $ref: '#/definitions/ProductModel'
        description: 商品
      productAmount:
        description: 商品金額
        format: double
        type: number
      quantity:
        description: 購入数
        format: int32
        type: integer
  EstimatedOrderModel:
    properties:
      email:
        description: メールアドレス
        type: string
      orderId:
        description: 発注ID
        type: string
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
        description: 発送先
      shippingAddressId:
        description: 商品発送先ID
        type: string
      shippingCost:
        description: 配送料
        format: double
        type: number
      taxAmount:
        description: 消費税
        format: double
        type: number
      totalAmount:
        description: 合計金額
        format: double
        type: number
  EventHandlerModel:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      handlerId:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
        - inactive
        - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
        $ref: '#/definitions/TagSet'
    required:
    - actionConfigList
    - handlerId
    - ruleConfig
    - status
    - name
  ExpiryTime:
    properties:
      expiryAction:
        enum:
        - doNothing
        - deleteSession
        - deactivate
        - suspend
        - terminate
        type: string
      expiryTime:
        format: int64
        type: integer
    required:
    - expiryTime
  ExportRequest:
    properties:
      from:
        format: int64
        type: integer
      period:
        enum:
        - month
        - day
        - minutes
        type: string
      to:
        format: int64
        type: integer
  FileEntry:
    properties:
      contentLength:
        description: Content length of the file
        format: int64
        type: integer
      contentType:
        description: Content type of the file
        type: string
      createdTime:
        description: Created time of the file
        format: int64
        type: integer
      etag:
        description: Etag of the file
        type: string
      filename:
        description: File name
        type: string
      isDirectory:
        description: Whether the entry is directory or not
        type: boolean
      lastModifiedTime:
        description: Last modified time of the file
        format: int64
        type: integer
  FileExportResponse:
    properties:
      exportedFileId:
        description: ファイル出力ID(リクエストにexport_mode=asyncを指定した場合）
        type: string
      exportedFilePath:
        description: 出力済みファイル取得パス(リクエストにexport_mode=asyncを付与した場合）
        type: string
      url:
        description: ファイルダウンロードURL(export_mode指定なし、もしくはexport_mode=syncの場合
        type: string
  FunnelConfiguration:
    properties:
      credentialsId:
        type: string
      destination:
        $ref: '#/definitions/FunnelDestination'
      enabled:
        default: false
        type: boolean
    type: object
  FunnelDestination:
    properties:
      provider:
        type: string
      resourceUrl:
        type: string
      service:
        type: string
    type: object
  Gadget:
    properties:
      attributes:
        type: object
      groupId:
        type: string
      id:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        type: object
      operatorId:
        type: string
      product_id:
        type: string
      serial_number:
        type: string
      status:
        enum:
        - active
        - terminated
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  GadgetRegistrationRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  GatePeer:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
      ownedByCustomer:
        type: boolean
  GenerateOperatorsAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
  GenerateTokenRequest:
    properties:
      tokenTimeoutSeconds:
        default: 86400
        description: |
          新しい API トークンの有効期限の長さ（秒単位）。
          指定しなければデフォルトは 86400 [秒]（24時間）。
          最大値は 172800 [秒]（48時間）。
        maximum: 172800
        type: integer
  GenerateTokenResponse:
    properties:
      token:
        type: string
    required:
    - token
  GenerateUserAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
  GetBillingHistoryResponse:
    properties:
      billList:
        description: 月ごとの利用料リスト
        items:
          $ref: '#/definitions/MonthlyBill'
        type: array
  GetDefaultPermissionsResponse:
    properties:
      defaultPermissions:
        type: string
  GetExportedFileResponse:
    properties:
      status:
        description: ファイル出力ステータス
        enum:
        - processing
        - exported
        - failed
        type: string
      url:
        description: ファイルダウンロードURL
        type: string
  GetLatestBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      lastEvaluatedTime:
        description: 利用額計算を実施した時間
        example: yyyyMMddHHmmss
        type: string
  GetOperatorResponse:
    properties:
      createDate:
        type: string
      description:
        type: string
      email:
        type: string
      operatorId:
        type: string
      rootOperatorId:
        type: string
      updateDate:
        type: string
    required:
    - createDate
    - description
    - email
    - operatorId
    - rootOperatorId
    - updateDate
  GetOrderResponse:
    properties:
      email:
        description: メールアドレス
        type: string
      orderDateTime:
        description: 発注日時
        example: yyyyMMddHHmmss
        type: string
      orderId:
        description: 発注ID
        type: string
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      orderStatus:
        description: 発注ステータス
        enum:
        - ordering
        - ordered
        - kitting
        - shipped
        - received
        - cancelling
        - cancelled
        - failed
        type: string
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
        description: 発送先
      shippingAddressId:
        description: 商品発送先ID
        type: string
      shippingCost:
        description: 配送料
        format: double
        type: number
      shippingLabelNumber:
        description: 宅配便送り状番号
        type: string
      taxAmount:
        description: 消費税
        format: double
        type: number
      totalAmount:
        description: 合計金額
        format: double
        type: number
  GetPaymentMethodResult:
    properties:
      errorCode:
        description: Error code (only if payment information is invalid)
        enum:
        - success
        - processing
        - invalid_request
        - invalid_number
        - incorrect_number
        - invalid_name
        - invalid_expiry_month
        - invalid_expiry_year
        - invalid_expiry
        - incorrect_expiry
        - invalid_cvc
        - incorrect_cvc
        - card_declined
        - missing
        - processing_error
        type: string
      errorMessage:
        description: Error message (only if payment information is invalid)
        type: string
      properties:
        description: Payment information
        type: string
      providerType:
        description: Provider type
        enum:
        - WebPay
        type: string
      updateDate:
        description: Update date
        example: yyyyMMddHHmmss
        type: string
  GetPaymentTransactionResult:
    properties:
      amount:
        $ref: '#/definitions/PaymentAmount'
        description: Amount
      description:
        $ref: '#/definitions/PaymentDescription'
        description: Description
      message:
        description: Message
        type: string
      messageCode:
        description: Message code
        enum:
        - success
        - processing
        - invalid_request
        - invalid_number
        - incorrect_number
        - invalid_name
        - invalid_expiry_month
        - invalid_expiry_year
        - invalid_expiry
        - incorrect_expiry
        - invalid_cvc
        - incorrect_cvc
        - card_declined
        - missing
        - processing_error
        type: string
      status:
        description: Status
        enum:
        - success
        - error
        type: string
  GetShippingAddressResponse:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      department:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      shippingAddressId:
        description: 配送先ID
        type: string
      shippingArea:
        description: 配送先エリア
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
    - addressLine1
    - city
    - phoneNumber
    - shippingAddressId
    - shippingArea
    - state
    - zipCode
  GetUserPasswordResponse:
    properties:
      hasPassword:
        type: boolean
  GetUserPermissionResponse:
    properties:
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  GetVolumeDiscountResponse:
    properties:
      contractDateTime:
        description: Contract date time
        example: yyyyMMddHHmmss
        type: string
      contractId:
        description: ID
        type: string
      contractTermMonth:
        description: Discount term
        format: int32
        type: integer
      endDate:
        description: End date
        example: yyyyMMdd
        type: string
      initialCost:
        description: Initial cost
        format: double
        type: number
      quantity:
        description: Number of SIMs
        format: int32
        type: integer
      startDate:
        description: Start date
        example: yyyyMMdd
        type: string
      status:
        description: Status
        enum:
        - active
        - expired
        type: string
      unitPrice:
        description: Unit price
        format: double
        type: number
      volumeDiscountPaymentType:
        description: Payment type
        enum:
        - PREPAYMENT
        - MONTHLY
        type: string
      volumeDiscountType:
        description: Type
        enum:
        - SORACOM_AIR_BASIC_CHARGE
        - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
  Group:
    properties:
      configuration:
        $ref: '#/definitions/Map'
      createdTime:
        format: int64
        type: integer
      groupId:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
  GroupConfigurationUpdateRequest:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
  HarvestExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
  ImeiLock:
    properties:
      imei:
        type: string
  IpAddressMapEntry:
    properties:
      ipAddress:
        type: string
      key:
        type: string
      type:
        enum:
        - static
        - dynamic
        - customerGatePeer
        - gatePeer
        type: string
  IssueEmailChangeTokenRequest:
    properties:
      email:
        type: string
    required:
    - email
  IssuePasswordResetTokenRequest:
    properties:
      email:
        type: string
    required:
    - email
  IssueSubscriberTransferTokenRequest:
    properties:
      transferDestinationOperatorEmail:
        description: 移管先オペレーターEmail
        type: string
      transferDestinationOperatorId:
        description: 移管先オペレーターID
        type: string
      transferImsi:
        description: 移管するIMSIリスト
        items:
          type: string
        type: array
    required:
    - transferDestinationOperatorEmail
    - transferDestinationOperatorId
    - transferImsi
  IssueSubscriberTransferTokenResponse:
    properties:
      token:
        description: トークン
        type: string
    required:
    - token
  JunctionInspectionConfiguration:
    properties:
      enabled:
        default: false
        type: boolean
      report:
        $ref: '#/definitions/FunnelConfiguration'
    type: object
  JunctionMirroringConfiguration:
    properties:
      peers:
        additionalProperties:
          $ref: '#/definitions/JunctionMirroringPeer'
        type: object
    type: object
  JunctionMirroringPeer:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      ipAddress:
        type: string
      protocol:
        enum:
        - gre
        type: string
    type: object
  JunctionRedirectionConfiguration:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      gateway:
        type: string
    type: object
  LagoonDashboardPermissionsUpdatingRequest:
    properties:
      permissions:
        items:
          properties:
            permission:
              type: string
            userId:
              format: int64
              type: integer
        type: array
    type: object
  LagoonLicensePackStatusResponse:
    properties:
      licensePackName:
        type: string
      quantity:
        format: int32
        type: integer
    type: object
  LagoonLicensePacksUpdatingRequest:
    properties:
      licensePackQuantities:
        items:
          properties:
            desiredQuantity:
              format: int32
              type: integer
            licensePackName:
              type: string
        type: array
    type: object
  LagoonPlanChangingRequest:
    properties:
      plan:
        enum:
        - maker
        - pro
        - free
        type: string
    type: object
  LagoonRegistrationRequest:
    properties:
      plan:
        enum:
        - maker
        type: string
      userPassword:
        description: This password is used by the initial user's login.
        type: string
    type: object
  LagoonRegistrationResponse:
    properties:
      lagoonUserEmail:
        description: This email address is used on login with the initial user.
        type: string
    type: object
  LagoonUser:
    properties:
      email:
        description: This value used on login.
        type: string
      id:
        type: number
      lastSeenAt:
        description: The last login datetime.
        type: string
      lastSeenAtAge:
        description: The last login datetime as age.
        type: string
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
    type: object
  LagoonUserCreationRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
      userEmail:
        type: string
      userPassword:
        type: string
    type: object
  LagoonUserCreationResponse:
    properties:
      id:
        description: Lagoon user ID assigned to the created user.
        type: integer
    type: object
  LagoonUserEmailUpdatingRequest:
    properties:
      userEmail:
        type: string
    type: object
  LagoonUserPasswordUpdatingRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
      userEmail:
        type: string
    type: object
  LagoonUserPermissionUpdatingRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
    type: object
  LastSeen:
    properties:
      rssi:
        format: int32
        type: integer
      snr:
        format: int32
        type: integer
      time:
        format: date-time
        type: string
    type: object
  ListCouponResponse:
    properties:
      couponList:
        description: Coupons
        items:
          $ref: '#/definitions/CouponResponse'
        type: array
  ListOrderResponse:
    properties:
      orderList:
        description: 発注リスト
        items:
          $ref: '#/definitions/GetOrderResponse'
        type: array
  ListOrderedSubscriberResponse:
    properties:
      orderedSubscriberList:
        description: 発注したSIMのリスト
        items:
          $ref: '#/definitions/OrderedSubscriber'
        type: array
  ListPaymentStatementResponse:
    properties:
      paymentStatementsList:
        description: Payment statements
        items:
          $ref: '#/definitions/PaymentStatementResponse'
        type: array
  ListProductResponse:
    properties:
      productList:
        items:
          $ref: '#/definitions/ProductModel'
        type: array
      shippingCostList:
        items:
          $ref: '#/definitions/ShippingCostModel'
        type: array
  ListRolesResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
  ListShippingAddressResponse:
    properties:
      shippingAddresses:
        items:
          $ref: '#/definitions/GetShippingAddressResponse'
        type: array
  ListSubOperatorsResponse:
    properties:
      operatorId:
        type: string
  ListVolumeDiscountResponse:
    properties:
      volumeDiscountList:
        description: Contracted long term discounts
        items:
          $ref: '#/definitions/GetVolumeDiscountResponse'
        type: array
  LogEntry:
    properties:
      body:
        type: object
      resourceId:
        type: string
      resourceType:
        enum:
        - Subscriber
        - EventHandler
        - VirtualPrivateGateway
        type: string
      service:
        enum:
        - Air
        - Beam
        - Canal
        - Direct
        - Door
        - Endorse
        - Funnel
        - Gate
        type: string
      time:
        format: int64
        type: integer
  LoraData:
    properties:
      data:
        type: string
      fPort:
        default: 2
        type: integer
  LoraDevice:
    properties:
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
        - active
        - ready
        - terminated
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraGateway:
    properties:
      address:
        type: string
      createdTime:
        format: date-time
        type: string
      gatewayId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      owned:
        default: false
        type: boolean
      status:
        enum:
        - active
        - terminated
        - ready
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraNetworkSet:
    properties:
      allowedOperators:
        items:
          type: string
        type: array
        uniqueItems: true
      createdTime:
        format: date-time
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      operatorId:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  MFAAuthenticationRequest:
    properties:
      mfaOTPCode:
        type: string
  MFAIssueRevokingTokenRequest:
    properties:
      email:
        type: string
      password:
        type: string
  MFARevokingTokenVerifyRequest:
    properties:
      backupCode:
        type: string
      email:
        type: string
      password:
        type: string
      token:
        type: string
  MFAStatusOfUseResponse:
    properties:
      status:
        type: string
  Map:
    additionalProperties:
      type: string
    type: object
  Map«string,DataTrafficStats»:
    additionalProperties:
      $ref: '#/definitions/DataTrafficStats'
    type: object
  Map«string,string»:
    additionalProperties:
      type: string
    type: object
  MonthlyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      paymentStatus:
        description: 直近の課金ステータス
        enum:
        - lessThanMinimumCharge
        - paying
        - paid
        - refunding
        - refunded
        - fail
        type: string
      paymentTransactionId:
        description: 課金詳細取得用のID
        type: string
      yearMonth:
        description: 年月
        example: yyyyMM
        type: string
  NapterAuditLogDirection:
    properties:
      destinationIPAddress:
        type: string
      destinationPort:
        format: int64
        type: integer
      sourceIPAddress:
        type: string
      sourcePort:
        format: int64
        type: integer
  NapterAuditLogEntry:
    properties:
      connectionId:
        type: string
      createdAt:
        format: int64
        type: integer
      direction:
        $ref: '#/definitions/NapterAuditLogDirection'
      imsi:
        type: string
      isTLS:
        type: boolean
      operatorId:
        type: string
      type:
        enum:
        - ACCESS
        - DENIED
        - CONNECTED
        - CLOSED
        - REFUSED
        type: string
  NapterAuditLogsExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
  ObjectInstance:
    properties:
      id:
        format: int32
        type: integer
      observed:
        default: false
        type: boolean
      resources:
        additionalProperties:
          $ref: '#/definitions/ResourceInstance'
        type: object
    type: object
  OpenGateRequest:
    properties:
      privacySeparatorEnabled:
        default: false
        type: boolean
      vxlanId:
        default: 10
        format: int32
        type: integer
  OperatorMFAVerifyingResponse:
    properties:
      backupCodes:
        items:
          type: string
        type: array
  OrderItemModel:
    properties:
      productCode:
        description: 商品コード
        type: string
      quantity:
        description: 購入数
        format: int32
        type: integer
  OrderedSubscriber:
    properties:
      imsi:
        description: IMSI
        type: string
      msisdn:
        description: MSISDN
        type: string
      serialNumber:
        description: serialNumber
        type: string
  PaymentAmount:
    properties:
      taxAmount:
        format: double
        type: number
      totalAmount:
        format: double
        type: number
  PaymentDescription:
    properties:
      description:
        type: string
      itemList:
        items:
          type: string
        type: array
  PaymentStatementResponse:
    properties:
      amount:
        description: Amount
        format: double
        type: number
      paymentDateTime:
        description: Payment date time
        format: int64
        type: integer
      paymentInstrument:
        description: Payment instrument
        type: string
      paymentMethod:
        description: Payment method
        type: string
      paymentStatementId:
        description: Payment statement ID
        type: string
      paymentStatementInfo:
        description: Payment statement information
        type: string
  PortMapping:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        type: number
      endpoint:
        type: string
      hostname:
        type: string
      ipAddress:
        type: string
      port:
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        type: boolean
  PortMappingDestination:
    properties:
      imsi:
        type: string
      port:
        type: number
    required:
    - imsi
    - port
  PortMappingSource:
    properties:
      ipRanges:
        items:
          type: string
        type: array
  ProductModel:
    properties:
      count:
        description: 商品販売個数
        format: double
        type: number
      maxQuantity:
        description: 最大購入数量
        format: int32
        type: integer
      price:
        description: 商品販売個数ごとの価格
        format: double
        type: number
      productCode:
        description: 商品コード
        type: string
      productInfoURL:
        description: 商品説明ページURL
        type: string
      productName:
        description: 商品名
        type: string
      productType:
        description: 商品種別
        enum:
        - sim
        - network_module
        type: string
      properties:
        additionalProperties:
          type: string
        description: 商品プロパティ
        type: object
  PutIpAddressMapEntryRequest:
    properties:
      ipAddress:
        type: string
      key:
        type: string
    required:
    - key
    - ipAddress
  RegisterGatePeerRequest:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
    required:
    - outerIpAddress
  RegisterLoraDeviceRequest:
    properties:
      groupId:
        type: string
      registrationSecret:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  RegisterOperatorsRequest:
    properties:
      email:
        type: string
      password:
        description: パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z)
          を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
        type: string
    required:
    - email
    - password
  RegisterPayerInformationModel:
    properties:
      companyName:
        description: Company name
        type: string
      department:
        description: Department
        type: string
      fullName:
        description: Full name
        type: string
  RegisterSubscribersRequest:
    properties:
      groupId:
        type: string
      registrationSecret:
        type: string
      tags:
        items:
          $ref: '#/definitions/TagUpdateRequest'
        type: array
    required:
    - registrationSecret
  ResourceInstance:
    properties:
      description:
        type: string
      id:
        format: int32
        type: integer
      mandatory:
        default: false
        type: boolean
      multiple:
        default: false
        type: boolean
      name:
        type: string
      observed:
        default: false
        type: boolean
      operations:
        enum:
        - NONE
        - R
        - W
        - RW
        - E
        - RE
        - WE
        - RWE
        type: string
      rangeEnumeration:
        type: string
      type:
        enum:
        - STRING
        - INTEGER
        - FLOAT
        - BOOLEAN
        - OPAQUE
        - TIME
        - OBJLNK
        type: string
      units:
        type: string
      value:
        type: object
      values:
        type: object
    type: object
  RoleResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
  RoutingFilterEntry:
    properties:
      action:
        description: Whether to allow or deny the outbound packets with a destination
          in the specified range
        enum:
        - allow
        - deny
        type: string
      ipRange:
        description: IPv4 address range in CIDR format, e.g. a.b.c.d/x
        type: string
    required:
    - action
    - ipRange
  RuleConfig:
    properties:
      properties:
        $ref: '#/definitions/RuleConfigProperty'
      type:
        enum:
        - DailyTrafficRule
        - MonthlyTrafficRule
        - CumulativeTrafficRule
        - DailyTotalTrafficRule
        - MonthlyTotalTrafficRule
        - SubscriberStatusAttributeRule
        - SubscriberSpeedClassAttributeRule
        - SubscriberExpiredRule
        type: string
    required:
    - properties
    - type
  RuleConfigProperty:
    properties:
      inactiveTimeoutDateConst:
        enum:
        - IMMEDIATELY
        - BEGINNING_OF_NEXT_MONTH
        - BEGINNING_OF_NEXT_DAY
        - AFTER_ONE_DAY
        - NEVER
        type: string
      limitTotalTrafficMegaByte:
        type: integer
      targetSpeedClass:
        description: SubscriberSpeedClassAttributeRule の時のみ有効
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
      targetStatus:
        description: SubscriberStatusAttributeRule の時のみ有効
        enum:
        - ready
        - active
        - inactive
        - suspended
        - terminated
        type: string
    required:
    - limitTotalTrafficMegaByte
  SessionEvent:
    properties:
      apn:
        type: string
      dns0:
        type: string
      dns1:
        type: string
      event:
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        type: string
      imsi:
        type: string
      operatorId:
        type: string
      time:
        format: int64
        type: integer
      ueIpAddress:
        type: string
      vpgId:
        type: string
  SessionStatus:
    properties:
      dnsServers:
        items:
          type: string
        type: array
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        type: string
      lastUpdatedAt:
        format: int64
        type: integer
      online:
        type: boolean
      ueIpAddress:
        type: string
      vpgId:
        type: string
  SetDeviceObjectModelScopeRequest:
    properties:
      scope:
        type: string
    type: object
  SetGroupRequest:
    properties:
      groupId:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
  SetImeiLockRequest:
    properties:
      imei:
        type: string
  SetNetworkSetRequest:
    properties:
      networkSetId:
        type: string
    type: object
  SetUserPermissionRequest:
    properties:
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  ShippingAddressModel:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      department:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
    - city
    - state
    - zipCode
  ShippingCostModel:
    description: 発送料
    properties:
      shippingArea:
        description: 発送先エリア
        enum:
        - hokkaido
        - kita_tohoku
        - minami_tohoku
        - kanto
        - shinetsu
        - chubu
        - hokuriku
        - kansai
        - chugoku
        - shikoku
        - kyushu
        - okinawa
        type: string
      shippingAreaName:
        description: 発送先エリア名称
        type: string
      shippingCost:
        description: 送料
        format: double
        type: number
      size:
        description: 発送サイズ
        format: int32
        type: integer
  SigfoxData:
    properties:
      data:
        type: string
  SigfoxDevice:
    properties:
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
        - active
        - ready
        - terminated
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  SigfoxRegistrationRequest:
    properties:
      registrationSecret:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  SmsForwardingReport:
    properties:
      messageId:
        type: string
    type: object
  SmsForwardingRequest:
    properties:
      encodingType:
        default: 2
        description: Encoding type of the message body. `1` indicates the body is
          `DCS_7BIT` that only supports single byte characters. `2` is `DCS_UCS2`
          that supports multi-byte text. When omitted, it is treated as `2` (`DCS_UCS2`).
        type: integer
      payload:
        type: string
    type: object
  SoracomBeamStats:
    properties:
      count:
        format: int64
        type: integer
  Subscriber:
    properties:
      apn:
        type: string
      createdAt:
        format: int64
        type: integer
      expiredAt:
        format: int64
        type: integer
      expiryAction:
        type: string
      groupId:
        type: string
      iccid:
        type: string
      imeiLock:
        $ref: '#/definitions/ImeiLock'
      imsi:
        type: string
      ipAddress:
        type: string
      lastModifiedAt:
        format: int64
        type: integer
      moduleType:
        type: string
      msisdn:
        type: string
      operatorId:
        type: string
      plan:
        type: integer
      serialNumber:
        type: string
      sessionStatus:
        $ref: '#/definitions/SessionStatus'
      speedClass:
        type: string
      status:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
      terminationEnabled:
        type: boolean
  SupportTokenResponse:
    properties:
      token:
        type: string
    required:
    - token
  TagSet:
    additionalProperties:
      type: string
    example:
      tagName1: tagValue1
      tagName2: tagValue2...
    type: object
  TagUpdateRequest:
    properties:
      tagName:
        type: string
      tagValue:
        type: string
    required:
    - tagName
    - tagValue
    type: object
  TrafficVolumeRanking:
    properties:
      imsi:
        type: string
      trafficVolume:
        format: int64
        type: integer
    type: object
  UpdateDefaultPermissionsRequest:
    properties:
      permissions:
        description: JSON string of permissions
        type: string
    required:
    - permissions
  UpdateEventHandlerRequest:
    $ref: '#/definitions/CreateEventHandlerRequest'
  UpdatePasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
    - currentPassword
    - newPassword
  UpdatePermissionRequest:
    properties:
      operatorId:
        type: string
    type: object
  UpdateSpeedClassRequest:
    properties:
      speedClass:
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
    required:
    - speedClass
  UpdateUserRequest:
    properties:
      description:
        type: string
  UserDetailResponse:
    properties:
      authKeyList:
        items:
          $ref: '#/definitions/AuthKeyResponse'
        type: array
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      hasPassword:
        type: boolean
      permission:
        type: string
      roleList:
        items:
          $ref: '#/definitions/ListRolesResponse'
        type: array
      updateDateTime:
        format: int64
        type: integer
      userName:
        type: string
  VerifyEmailChangeTokenRequest:
    properties:
      token:
        type: string
    required:
    - token
  VerifyOperatorsRequest:
    properties:
      token:
        type: string
    required:
    - token
  VerifyPasswordResetTokenRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
  VerifySubscriberTransferTokenRequest:
    properties:
      token:
        description: トークン
        type: string
    required:
    - token
  VerifySubscriberTransferTokenResponse:
    properties:
      transferredImsi:
        description: 移管されたIMSIリスト
        items:
          type: string
        type: array
    required:
    - transferredImsi
  VirtualPrivateGateway:
    properties:
      createdTime:
        format: int64
        type: integer
      id:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
      primaryServiceName:
        enum:
        - Canal
        - Direct
        - Door
        - Gate
        type: string
      status:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
      type:
        enum:
        - 12
        - 13
        type: integer
      useInternetGateway:
        type: boolean
      virtualInterfaces:
        $ref: '#/definitions/Map'
      vpcPeeringConnections:
        $ref: '#/definitions/Map'
  VpcPeeringConnection:
    properties:
      destinationCidrBlock:
        type: string
      id:
        type: string
      peerOwnerId:
        type: string
      peerVpcId:
        type: string
host: api.soracom.io
info:
  description: SORACOM API v1
  title: SORACOM API
  version: VERSION_PLACEHOLDER
paths:
  /audit_logs/napter:
    get:
      description: Retrieve audit logs for Napter.
      operationId: getNapterAuditLogs
      parameters:
      - description: Type of the target resource to query Napter audit log entries.
        enum:
        - Subscriber
        in: query
        name: resource_type
        required: false
        type: string
      - description: Identity of the target resource to query log entries.
        in: query
        name: resource_id
        required: false
        type: string
      - description: Start time for the log search range (unixtime millis).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the log search range (unixtime millis).
        in: query
        name: to
        required: false
        type: integer
      - description: Maximum number of log entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: A list of Napter audit log entries.
          schema:
            items:
              $ref: '#/definitions/NapterAuditLogEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Retrieve audit logs for Napter
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      consumes:
      - application/json
      description: Performs authentication to access to the SORACOM API. To perform
        authentication by a root account, specify `email` and `password`. To perform
        authentication by an AuthKey, specify `authKeyId` and `authKey`. To perform
        authentication by a SAM user, specify `operatorId`, `userName` and `password`.
        An API Key and an API Token will be included in the response if successful.
        Specify the API Key and the API Token to requests afterwards
      operationId: auth
      parameters:
      - description: Authentication request.
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful.
          schema:
            $ref: '#/definitions/AuthResponse'
        "401":
          description: Authentication failed.
      summary: Performs authentication to access to the SORACOM API.
      tags:
      - Auth
      x-soracom-cli:
      - auth
  /auth/password_reset_token/issue:
    post:
      consumes:
      - application/json
      description: Generates a password reset token and send it to the operator's
        mail address. After receiving the password reset token, call /v1/auth/password_reset_token/verify
        API with the token to update operator's password.
      operationId: issuePasswordResetToken
      parameters:
      - description: email address
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/IssuePasswordResetTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid email address.
      summary: Issues a password reset token for the operator.
      tags:
      - Auth
      x-soracom-cli:
      - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      consumes:
      - application/json
      description: Updates the operator's password if the password reset token is
        verified.
      operationId: verifyPasswordResetToken
      parameters:
      - description: token, password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/VerifyPasswordResetTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid token.
        "404":
          description: Token expired.
      summary: Verifies the password reset token and updates password.
      tags:
      - Auth
      x-soracom-cli:
      - auth verify-password-reset-token
  /bills:
    get:
      consumes:
      - application/json
      description: Returns past billing history (after applied discounts such as free
        tiers, etc., inclusive of tax). This API only returns the billing amounts
        that have been finalized at the end of the month.
      operationId: getBillingHistory
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetBillingHistoryResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get billing history.
      tags:
      - Billing
      x-soracom-cli:
      - bills list
  /bills/{yyyyMM}:
    get:
      consumes:
      - application/json
      description: Returns the billing history for the specified month (after applied
        discounts such as free tiers, etc., inclusive of tax). The amounts retrieved
        using this API correspond to the values before the invoice was finalized.
      operationId: getBilling
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/MonthlyBill'
      security:
      - api_key: []
      - api_token: []
      summary: Get bill.
      tags:
      - Billing
      x-soracom-cli:
      - bills get
  /bills/{yyyyMM}/daily:
    get:
      consumes:
      - application/json
      description: Returns detailed information of billing amounts per day for the
        specified month. This API only returns the billing amounts that have been
        finalized.
      operationId: getBillingPerDay
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/DailyBillResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get bill per day.
      tags:
      - Billing
      x-soracom-cli:
      - bills get-daily
  /bills/{yyyyMM}/export:
    post:
      consumes:
      - application/json
      description: Returns detailed information for the billing amounts for the specified
        month. This detailed information includes billing amounts per day, subscriber,
        and billing item.
      operationId: exportBilling
      parameters:
      - description: yyyyMM
        in: path
        name: yyyyMM
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Output billing CSV file to S3.
      tags:
      - Billing
      x-soracom-cli:
      - bills export
  /bills/latest:
    get:
      consumes:
      - application/json
      description: Returns the latest billing amounts after applied discounts such
        as free tiers, etc. The amounts retrieved using this API correspond to the
        values before the invoice was finalized.
      operationId: getLatestBilling
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetLatestBill'
      security:
      - api_key: []
      - api_token: []
      summary: Get latest bill.
      tags:
      - Billing
      x-soracom-cli:
      - bills get-latest
  /bills/latest/export:
    post:
      consumes:
      - application/json
      description: Returns detailed information of the billing amounts for the latest
        month. This detailed information includes billing amounts per day, subscriber,
        and billing item. The amounts retrieved using this API correspond to the values
        before the invoice was finalized.
      operationId: exportLatestBilling
      parameters:
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export latest billing CSV file to S3.
      tags:
      - Billing
      x-soracom-cli:
      - bills export-latest
  /coupons:
    get:
      consumes:
      - application/json
      description: Returns a list of currently registered coupons.
      operationId: listCoupons
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListCouponResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List coupons.
      tags:
      - Payment
      x-soracom-cli:
      - coupons list
  /coupons/{coupon_code}/register:
    post:
      consumes:
      - application/json
      description: Registers a coupon.
      operationId: registerCoupon
      parameters:
      - description: Coupon code
        in: path
        name: coupon_code
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CouponResponse'
        "400":
          description: The coupon code is invalid or the coupon code registration
            limit has been reached.
      security:
      - api_key: []
      - api_token: []
      summary: Register Coupon.
      tags:
      - Payment
      x-soracom-cli:
      - coupons register
  /credentials:
    get:
      consumes:
      - application/json
      description: Returns a list of credentials.
      operationId: listCredentials
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CredentialsModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List of credentials.
      tags:
      - Credential
      x-soracom-cli:
      - credentials list
  /credentials/{credentials_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a credential.
      operationId: deleteCredential
      parameters:
      - description: Credentials ID
        in: path
        name: credentials_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
      security:
      - api_key: []
      - api_token: []
      summary: Delete a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials delete
    post:
      consumes:
      - application/json;charset=UTF-8
      description: Creates a new credential.
      operationId: createCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        type: string
      - description: credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      produces:
      - '*/*'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/CredentialsModel'
      security:
      - api_key: []
      - api_token: []
      summary: Create a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials create
    put:
      consumes:
      - application/json;charset=UTF-8
      description: Updates a credential.
      operationId: updateCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        type: string
      - description: credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CredentialsModel'
        "400":
          description: There was an error in the request or the specified token has
            already expired. (In the latter case, you will need to use the /auth API
            to do authentication once again.)
      security:
      - api_key: []
      - api_token: []
      summary: Update a credential.
      tags:
      - Credential
      x-soracom-cli:
      - credentials update
  /data/{resource_type}/{resource_id}:
    get:
      description: Returns a list of data entries sent from a resource that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataEntries
      parameters:
      - description: Type of data source resource
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a resource.
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /data/{resource_type}/{resource_id}/{time}:
    delete:
      description: Deletes a data entry identified with resource ID and timestamp
      operationId: deleteDataEntry
      parameters:
      - description: Type of data source resource
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        type: string
      - description: Timestamp of the target data entry to delete (unixtime in milliseconds).
        in: path
        name: time
        required: true
        type: integer
      responses:
        204:
          description: The data entry has been successfully deleted
      security:
      - api_key: []
      - api_token: []
      summary: Deletes a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data delete-entry
    get:
      description: Gets a data entry identified with resource ID and timestamp
      operationId: getDataEntry
      parameters:
      - description: Type of data source resource
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: ID of data source resource
        in: path
        name: resource_id
        required: true
        type: string
      - description: Timestamp of the target data entry to get (unixtime in milliseconds).
        in: path
        name: time
        required: true
        type: integer
      responses:
        200:
          description: The data entry specified with resource ID and timestamp
        404:
          description: No such entry found
      security:
      - api_key: []
      - api_token: []
      summary: Gets a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entry
  /data/resources:
    get:
      description: Returns a list of data source resources that have sent data from
        resources that belong to the operator. If the total number of entries does
        not fit in one page, a URL for accessing the next page is returned in the
        'Link' header of the response.
      operationId: listDataSourceResources
      parameters:
      - description: Type of data source resource
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: query
        name: resource_type
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `resourceId` in the last log entry retrieved in
          the previous page. By specifying this parameter, you can continue to retrieve
          the list from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data source resources.
          schema:
            items:
              $ref: '#/definitions/DataSourceResourceMetadata'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get the list of data source resources
      tags:
      - DataEntry
      x-soracom-cli:
      - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /device_object_models:
    get:
      description: Returns a list of device object models
      operationId: listDeviceObjectModels
      parameters:
      - default: "null"
        description: ID of the last device object model in the previous page
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: -1
        description: Max number of device object models in a response
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      responses:
        "200":
          description: List of device object models
          schema:
            items:
              $ref: '#/definitions/DeviceObjectModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Returns a list of device object models
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      - application/xml
      description: Creates a new device object model
      operationId: createDeviceObjectModel
      parameters:
      - description: Device object model definition in either XML or JSON format.
        in: body
        name: object_model_definition
        required: true
        schema:
          $ref: '#/definitions/DeviceObjectModel'
      responses:
        "200":
          description: Device object model created
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "400":
          description: Failed to parse device object model definition
      security:
      - api_key: []
      - api_token: []
      summary: Creates a new device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices create-object-model
  /device_object_models/{model_id}:
    delete:
      consumes:
      - text/plain
      description: Deletes a device object model
      operationId: deleteDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "204":
          description: Successfuly deleted
        "404":
          description: No such device object model found
      security:
      - api_key: []
      - api_token: []
      summary: Deletes a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices delete-object-model
    get:
      consumes:
      - text/plain
      description: Gets a device object model
      operationId: getDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "200":
          description: Device object model
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "404":
          description: No such device object model found
      security:
      - api_key: []
      - api_token: []
      summary: Gets a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices get-object-model
    post:
      consumes:
      - application/json
      - application/xml
      description: Updates a device object model
      operationId: updateDeviceObjectModel
      parameters:
      - description: Device object model ID
        in: path
        name: model_id
        required: true
        type: string
      - description: Device object model definition in either XML or JSON format.
        in: body
        name: object_model_definition
        required: true
        schema:
          $ref: '#/definitions/DeviceObjectModel'
      responses:
        "200":
          description: Device object model updated
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "400":
          description: Failed to parse device object model definition
        "404":
          description: No such device object model found
      security:
      - api_key: []
      - api_token: []
      summary: Updates a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices update-object-model
  /device_object_models/{model_id}/set_scope:
    post:
      consumes:
      - application/json
      description: Sets scope for a device object model
      operationId: setDeviceObjectModelScope
      parameters:
      - description: Target device object model ID
        in: path
        name: model_id
        required: true
        type: string
      - description: Scope value that is applied to the target device object model
        in: body
        name: scope
        required: true
        schema:
          $ref: '#/definitions/SetDeviceObjectModelScopeRequest'
      responses:
        "200":
          description: Scope is set to the target device object model
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "404":
          description: No such device object model found
      security:
      - api_key: []
      - api_token: []
      summary: Sets scope for a device object model
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices set-object-model-scope
  /devices:
    get:
      description: Returns a list of Devices
      operationId: listDevices
      parameters:
      - default: "null"
        description: Tag name
        in: query
        name: tag_name
        required: false
        type: string
      - default: "null"
        description: Tag value
        in: query
        name: tag_value
        required: false
        type: string
      - default: "null"
        description: Tag value match mode (exact | prefix)
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - default: "null"
        description: ID of the last Device in the previous page
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: -1
        description: Max number of Devices in a response
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      responses:
        "200":
          description: List of Devices
          schema:
            items:
              $ref: '#/definitions/Device'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Returns a list of Devices
      tags:
      - Device
      x-soracom-cli:
      - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      description: Creates a new Device
      operationId: createDevice
      parameters:
      - description: Device to create
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        "201":
          description: Device created
          schema:
            $ref: '#/definitions/Device'
      security:
      - api_key: []
      - api_token: []
      summary: Creates a new Device
      tags:
      - Device
      x-soracom-cli:
      - devices create
  /devices/{device_id}:
    delete:
      description: Delete Device
      operationId: deleteDevice
      parameters:
      - description: Device to delete
        in: path
        name: device_id
        required: true
        type: string
      responses:
        "204":
          description: Device deleted
        "404":
          description: No such device found
      security:
      - api_key: []
      - api_token: []
      summary: Delete Device
      tags:
      - Device
      x-soracom-cli:
      - devices delete
    get:
      description: Returns a Device identified by device ID
      operationId: getDevice
      parameters:
      - description: Device ID
        in: path
        name: device_id
        required: true
        type: string
      - default: false
        description: Whether or not to add model information
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: A Device identified by device ID
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: No such device found
      security:
      - api_key: []
      - api_token: []
      summary: Returns a Device identified by device ID
      tags:
      - Device
      x-soracom-cli:
      - devices get
  /devices/{device_id}/{object}/{instance}:
    get:
      description: Get resources under an object instance of a device
      operationId: readDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - default: false
        description: Whether or not to add model information
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: Resources under the specified object instance
          schema:
            $ref: '#/definitions/ObjectInstance'
        "400":
          description: Object instance is not readable
        "404":
          description: Object instance is not found
      security:
      - api_key: []
      - api_token: []
      summary: Get resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices get-instance
  /devices/{device_id}/{object}/{instance}/{resource}:
    get:
      description: Get the specified resource of a device
      operationId: readDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - default: false
        description: Whether or not to add model information
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: Resource
          schema:
            $ref: '#/definitions/ResourceInstance'
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Get the specified resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices get-resource
    put:
      description: Write value to a resource of a device
      operationId: writeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - description: Value(s) to write to the resource
        in: body
        name: value
        required: true
        schema:
          properties:
            value:
              type: string
          type: object
      responses:
        "202":
          description: Updating resource is accepted
        "400":
          description: Specified Resource does not support write (Including case of
            connection error such as offline device)
        "404":
          description: Resource is not found
        "500":
          description: Error response from the device. (It includes the case where
            the LwM2M response message is error from the device, and the error message
            from the device is included in the response 'message'.)
      security:
      - api_key: []
      - api_token: []
      summary: Write value to a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices put-resource
  /devices/{device_id}/{object}/{instance}/{resource}/execute:
    post:
      description: Executes a resource of a device
      operationId: executeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - description: Argument string when executing the resource
        in: body
        name: arg
        required: false
        schema:
          properties:
            value:
              type: string
          type: object
      responses:
        "202":
          description: Execution request is accepted
        "400":
          description: Resource is not executable
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Executes a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices execute-resource
  /devices/{device_id}/{object}/{instance}/{resource}/observe:
    post:
      description: Triggers observation of the specified resource of a device
      operationId: observeDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - default: false
        description: Whether or not to add model information
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "202":
          description: Observation started.
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Triggers observation of the specified resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resource
  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:
    post:
      description: Stops observation of a resource of a device
      operationId: unobserveDeviceResource
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      responses:
        "204":
          description: Observation cancelled
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Stops observation of a resource of a device
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resource
  /devices/{device_id}/{object}/{instance}/observe:
    post:
      description: Triggers observation of resources under an object instance of a
        device
      operationId: observeDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - default: false
        description: Whether or not to add model information
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "202":
          description: Observation started.
        "400":
          description: Resource is not readable
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Triggers observation of resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resources
  /devices/{device_id}/{object}/{instance}/unobserve:
    post:
      description: Stops observation of resources under an object instance of a device
      operationId: unobserveDeviceResources
      parameters:
      - description: Target device
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      responses:
        "204":
          description: Observation cancelled
        "404":
          description: Resource is not found
      security:
      - api_key: []
      - api_token: []
      summary: Stops observation of resources under an object instance of a device
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resources
  /devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a device that match certain
        criteria. If the total number of entries does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the response.
      operationId: getDataFromDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a device.
      tags:
      - Device
      x-soracom-cli:
      - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /devices/{device_id}/set_group:
    post:
      description: Lets a device device join a group
      operationId: setDeviceGroup
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        type: string
      - in: body
        name: groupId
        schema:
          properties:
            groupId:
              type: string
          type: object
      responses:
        "200":
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: No such device found
      security:
      - api_key: []
      - api_token: []
      summary: Lets a device device join a group
      tags:
      - Device
      x-soracom-cli:
      - devices set-group
  /devices/{device_id}/tags:
    put:
      description: Updates device tags
      operationId: putDeviceTags
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        type: string
      responses:
        "200":
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: No such device found
      security:
      - api_key: []
      - api_token: []
      summary: Updates device tags
      tags:
      - Device
      x-soracom-cli:
      - devices put-device-tags
  /devices/{device_id}/tags/{tag_name}:
    delete:
      description: Delete device tag
      operationId: deleteDeviceTag
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        type: string
      - description: Name of tag to delete
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        "204":
          description: Device tag deleted
        "404":
          description: No such device or tag found
      security:
      - api_key: []
      - api_token: []
      summary: Delete device tag
      tags:
      - Device
      x-soracom-cli:
      - devices delete-device-tag
  /devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: Lets a device leave from a group
      operationId: unsetDeviceGroup
      parameters:
      - description: Device to update
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: No such device found
      security:
      - api_key: []
      - api_token: []
      summary: Lets a device leave from a group
      tags:
      - Device
      x-soracom-cli:
      - devices unset-group
  /event_handlers:
    get:
      consumes:
      - application/json
      description: Returns a list of event handlers.
      operationId: listEventHandlers
      parameters:
      - description: target
        enum:
        - operator
        - imsi
        - tag
        - group
        in: query
        name: target
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Event Handlers.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list
    post:
      consumes:
      - application/json
      description: Creates a new event handler. Please see also https://dev.soracom.io/en/docs/event_handler/
      operationId: createEventHandler
      parameters:
      - description: event handler settings
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/CreateEventHandlerRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/EventHandlerModel'
      security:
      - api_key: []
      - api_token: []
      summary: Create Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers create
  /event_handlers/{handler_id}:
    delete:
      consumes:
      - application/json
      description: Deletes the specified event handler.
      operationId: deleteEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: OK.
        "404":
          description: EventHandler not found.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers delete
    get:
      consumes:
      - application/json
      description: Returns information about the specified event handler.
      operationId: getEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/EventHandlerModel'
        "404":
          description: Handler not found.
      security:
      - api_key: []
      - api_token: []
      summary: Get Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers get
    put:
      consumes:
      - application/json
      description: Updates the specified event handler. Please see also https://dev.soracom.io/en/docs/event_handler/
      operationId: updateEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      - description: event handler settings
        in: body
        name: event_handler_model
        required: true
        schema:
          $ref: '#/definitions/UpdateEventHandlerRequest'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid handlerId.
      security:
      - api_key: []
      - api_token: []
      summary: Update Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers update
  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:
    delete:
      consumes:
      - application/json
      description: Deletes the setting for ignoring the specified event handler of
        the specified IMSI.
      operationId: deleteIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: OK
        "404":
          description: not found
      security:
      - api_key: []
      - api_token: []
      summary: Delete Ignore Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers unignore
    post:
      consumes:
      - application/json
      description: Adds a setting for ignoring the specified event handler of the
        specified IMSI.
      operationId: setIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Ignore Event Handler.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers ignore
  /event_handlers/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: Returns a list of event handlers related to the specified IMSI.
      operationId: listEventHandlersBySubscriber
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
        "404":
          description: not found
      security:
      - api_key: []
      - api_token: []
      summary: List Event Handlers related to Subscriber.
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list-for-subscriber
  /files/{scope}/{path}:
    delete:
      description: Deletes the specified file in the scope. Only `private` scope is
        allowed for the operation.
      operationId: deleteFile
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: Target path
        in: path
        name: path
        required: true
        type: string
      responses:
        204:
          description: The scpecified file is successfully deleted
        404:
          description: No such file
      security:
      - api_key: []
      - api_token: []
      summary: Delete specified file in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete
    get:
      description: Redirects the client to URL for the link to download the file specified
        by the scope and the path. By issuing HTTP GET request to the link returned
        in the response, the client is able to download the file.
      operationId: getFile
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - description: Target path
        in: path
        name: path
        required: true
        type: string
      responses:
        302:
          description: Client is redirected to the link to download the file.
        404:
          description: No such file
      security:
      - api_key: []
      - api_token: []
      summary: Download file specified by the path and the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files get
    head:
      description: Gets metadata of the file specified by the path and the scope.
      operationId: getFileMetadata
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - description: Target path
        in: path
        name: path
        required: true
        type: string
      responses:
        200:
          description: Metadata of the file
          schema:
            $ref: '#/definitions/FileEntry'
        404:
          description: No such file
      security:
      - api_key: []
      - api_token: []
      summary: Get the metadata of the file specified by the path and the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files get-metadata
    put:
      description: Uploads the file to the specified path in the scope. Only `private`
        scope is allowed for the operation.
      operationId: putFile
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: Target path
        in: path
        name: path
        required: true
        type: string
      - description: Content of the file to upload
        in: body
        name: body
        required: true
        schema:
          format: binary
          type: string
      - description: Content type of the file to upload
        in: header
        name: content-type
        type: string
      responses:
        200:
          description: File is successfully updated with the content
        201:
          description: File is successfully created
      security:
      - api_key: []
      - api_token: []
      summary: Upload file to the path in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files put
  /files/{scope}/{path}/:
    delete:
      description: Deletes the specified directory in the scope. Only `private` scope
        is allowed for the operation.
      operationId: deleteDirectory
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: Target directory path
        in: path
        name: path
        required: true
        type: string
      responses:
        204:
          description: The scpeified directory is successfully deleted
        400:
          description: The specified directory is not empty
        404:
          description: No such directory
      security:
      - api_key: []
      - api_token: []
      summary: Delete specified directory in the scope.
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete-directory
    get:
      description: Returns a list of files entries under the path in the scope. If
        the total number of entries does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listFiles
      parameters:
      - default: private
        description: Scope of the request
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - default: /
        description: Target path
        in: path
        name: path
        required: true
        type: string
      responses:
        200:
          description: A list of file entries.
          schema:
            items:
              $ref: '#/definitions/FileEntry'
            type: array
        404:
          description: No such directory
      security:
      - api_key: []
      - api_token: []
      summary: List files and directories on the path in the scope
      tags:
      - FileEntry
      x-soracom-cli:
      - files list
  /files/exported/{exported_file_id}:
    get:
      consumes:
      - application/json
      description: Get an exported file. The `url` field in the response will contain
        a URL to download the exported file.
      operationId: getExportedFile
      parameters:
      - description: file export id
        in: path
        name: exported_file_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetExportedFileResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get an exported file.
      tags:
      - Files
      x-soracom-cli:
      - files get-exported
  /gadgets:
    get:
      description: Returns a list of gadgets that match certain criteria. If the total
        number of gadgets does not fit in one page, a URL for accessing the next page
        is returned in the 'Link' header of the response.
      operationId: listGadgets
      parameters:
      - description: Product ID for filtering the search.
        in: query
        name: product_id
        required: false
        type: string
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of gadgets to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID ({product_id}/{serial_number}) of the last gadget retrieved
          on the current page. By specifying this parameter, you can continue to retrieve
          the list from the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of Gadgets.
          schema:
            items:
              $ref: '#/definitions/Gadget'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List gadgets.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets/{product_id}/{serial_number}:
    get:
      description: Returns information about the specified gadget.
      operationId: getGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      responses:
        200:
          description: The gadget's detailed information.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets get
  /gadgets/{product_id}/{serial_number}/disable_termination:
    post:
      consumes:
      - text/plain
      description: Disables termination of specified gadget.
      operationId: disableTerminationOnGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets disable-termination
  /gadgets/{product_id}/{serial_number}/enable_termination:
    post:
      consumes:
      - text/plain
      description: Enables termination of specified gadget.
      operationId: enableTerminationOnGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets enable-termination
  /gadgets/{product_id}/{serial_number}/register:
    post:
      consumes:
      - application/json
      description: Registers a gadget
      operationId: registerGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      - description: Gadget registration request
        in: body
        name: registration_request
        required: true
        schema:
          $ref: '#/definitions/GadgetRegistrationRequest'
      produces:
      - application/json
      responses:
        200:
          description: Gadget successfully registered
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: No such resource found.
      security:
      - api_key: []
      - api_token: []
      summary: Register a gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets register
  /gadgets/{product_id}/{serial_number}/set_group:
    post:
      consumes:
      - application/json
      description: Sets or overwrites a group for the specified gadget.
      operationId: setGadgetGroup
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      - description: Group (may include ID only).
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Group of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets set-group
  /gadgets/{product_id}/{serial_number}/tags:
    put:
      description: Inserts/updates tags for the specified gadget.
      operationId: putGadgetTags
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update gadget Tags.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets put-tags
  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified gadget.
      operationId: deleteGadgetTag
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified tag complete.
        404:
          description: The specified gadget or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete gadget Tag.
      tags:
      - Gadget
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - gadgets delete-tag
  /gadgets/{product_id}/{serial_number}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified gadget
      operationId: terminateGadget
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets terminate
  /gadgets/{product_id}/{serial_number}/unset_group:
    post:
      consumes:
      - text/plain
      description: Removes the group configuration from the specified gadget.
      operationId: unsetGadgetGroup
      parameters:
      - description: Product ID of the target gadget.
        in: path
        name: product_id
        required: true
        type: string
      - description: Serial Number of the target gadget.
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: The specified gadget does not exist or the gadget does not
            belong to a group.
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group of gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets unset-group
  /groups:
    get:
      description: Returns a list of groups.
      operationId: listGroups
      parameters:
      - description: Tag name of the group. Filters through all groups that exactly
          match the tag name. When tag_name is specified, tag_value is required.
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag value of the groups.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        type: integer
      - description: The last Group ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of groups.
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Groups.
      tags:
      - Group
      x-soracom-cli:
      - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new group.
      operationId: createGroup
      parameters:
      - description: Tags for group to be created.
        in: body
        name: Tags
        required: true
        schema:
          $ref: '#/definitions/CreateGroupRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Group'
      security:
      - api_key: []
      - api_token: []
      summary: Create Group.
      tags:
      - Group
      x-soracom-cli:
      - groups create
  /groups/{group_id}:
    delete:
      description: Deletes the specified group by group ID
      operationId: deleteGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified group complete.
        404:
          description: The specified group does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group.
      tags:
      - Group
      x-soracom-cli:
      - groups delete
    get:
      description: Returns the group specified by the group ID.
      operationId: getGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        type: string
      responses:
        200:
          description: The specified group.
          schema:
            $ref: '#/definitions/Group'
        404:
          description: The specified group does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Group.
      tags:
      - Group
      x-soracom-cli:
      - groups get
  /groups/{group_id}/configuration/{namespace}:
    put:
      description: Adds/updates parameters for the specified group.
      operationId: putConfigurationParameters
      parameters:
      - description: Target group.
        in: path
        name: group_id
        required: true
        type: string
      - description: Target configuration.
        enum:
        - SoracomAir
        - SoracomBeam
        - SoracomEndorse
        - SoracomFunk
        - SoracomFunnel
        - SoracomHarvest
        - SoracomHarvestFiles
        - SoracomKrypton
        - UnifiedEndpoint
        in: path
        name: namespace
        required: true
        type: string
      - description: Array of values for target object to be updated.
        in: body
        name: parameters
        required: true
        schema:
          items:
            $ref: '#/definitions/GroupConfigurationUpdateRequest'
          type: array
      responses:
        200:
          description: The group after the update.
          schema:
            $ref: '#/definitions/Group'
        404:
          description: The specified group does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Update Group Configuration Parameters.
      tags:
      - Group
      x-soracom-cli:
      - groups put-config
  /groups/{group_id}/configuration/{namespace}/{name}:
    delete:
      description: Delete parameters for the specified group.
      operationId: deleteConfigurationParameter
      parameters:
      - description: Target group.
        in: path
        name: group_id
        required: true
        type: string
      - description: Namespace of target parameters.
        enum:
        - SoracomAir
        - SoracomBeam
        - SoracomEndorse
        - SoracomFunk
        - SoracomFunnel
        - SoracomHarvest
        - SoracomHarvestFiles
        - SoracomKrypton
        - UnifiedEndpoint
        in: path
        name: namespace
        required: true
        type: string
      - description: Parameter name to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: name
        required: true
        type: string
      responses:
        204:
          description: The parameter was successfully deleted.
        404:
          description: The specified group does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group Configuration Parameters.
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config
  /groups/{group_id}/subscribers:
    get:
      description: Returns a list of subscribers that belong to the specified group
        by group ID.
      operationId: listSubscribersInGroup
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: Target group ID
          schema:
            $ref: '#/definitions/Group'
        404:
          description: The specified group does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: List Subscribers in a group.
      tags:
      - Group
      x-sam-operationId: listSubscribers
      x-soracom-cli:
      - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /groups/{group_id}/tags:
    put:
      description: Adds/updates tags of specified configuration group.
      operationId: putGroupTags
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        type: string
      - description: Array of values for tags to be updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Update Group Tags.
      tags:
      - Group
      x-sam-operationId: putTags
      x-soracom-cli:
      - groups put-tags
  /groups/{group_id}/tags/{tag_name}:
    delete:
      description: Deletes tag from the specified group.
      operationId: deleteGroupTag
      parameters:
      - description: Target group ID.
        in: path
        name: group_id
        required: true
        type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: Tag deletion complete.
        404:
          description: The specified subscriber or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group Tag.
      tags:
      - Group
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - groups delete-tag
  /lagoon/dashboards/{dashboard_id}/permissions:
    put:
      consumes:
      - application/json
      description: Update permissions for a dashboard of SORACOM Lagoon
      operationId: updateLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        format: int64
        in: path
        name: dashboard_id
        required: true
        type: integer
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonDashboardPermissionsUpdatingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: Update permissions for a dashboard of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards update-permissions
  /lagoon/dashboards/{dashboard_id}/permissions/init:
    post:
      consumes:
      - application/json
      description: Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      operationId: initializeLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        format: int64
        in: path
        name: dashboard_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards init-permissions
  /lagoon/license_packs:
    get:
      consumes:
      - application/json
      description: Get the status of active SORACOM Lagoon license packs
      operationId: listLagoonLicensePackStatus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonLicensePackStatusResponse'
            type: array
        "400":
          description: Bad request
      summary: Get the status of active SORACOM Lagoon license packs
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs list-status
    put:
      consumes:
      - application/json
      description: Update the quantities for license packs of SORACOM Lagoon. This
        API is only allowed to operate by root account.
      operationId: updateLagoonLicensePack
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonLicensePacksUpdatingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: Update the quantities for license packs of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs update
  /lagoon/plan:
    put:
      consumes:
      - application/json
      description: Update the plan of SORACOM Lagoon. This API is only allowed to
        operate by root account.
      operationId: updateLagoonPlan
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonPlanChangingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: Update the plan of SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon updated-plan
  /lagoon/register:
    post:
      consumes:
      - application/json
      description: Register (activate) SORACOM Lagoon. This API is only allowed to
        operate by root account.
      operationId: registerLagoon
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registered
          schema:
            $ref: '#/definitions/LagoonRegistrationResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Register (activate) SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon register
  /lagoon/terminate:
    post:
      consumes:
      - application/json
      description: Terminate (deactivate) SORACOM Lagoon.
      operationId: terminateLagoon
      produces:
      - application/json
      responses:
        "204":
          description: Terminated
        "400":
          description: Bad request
        "404":
          description: Operator not found
      security:
      - api_key: []
      - api_token: []
      summary: Terminate (deactivate) SORACOM Lagoon
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon terminate
  /lagoon/users:
    get:
      consumes:
      - application/json
      description: List SORACOM Lagoon users that belong to operator.
      operationId: listLagoonUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonUser'
            type: array
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: List SORACOM Lagoon users that belong to operator
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon list-users
      - lagoon users list
    post:
      consumes:
      - application/json
      description: Create a SORACOM Lagoon user.
      operationId: createLagoonUser
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserCreationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/LagoonUserCreationResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Create a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon create-user
      - lagoon users create
  /lagoon/users/{lagoon_user_id}:
    delete:
      consumes:
      - application/json
      description: Delete a SORACOM Lagoon user.
      operationId: deleteLagoonUser
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Delete a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon delete-user
      - lagoon users delete
  /lagoon/users/{lagoon_user_id}/email:
    put:
      consumes:
      - application/json
      description: Update email address of a SORACOM Lagoon user.
      operationId: updateLagoonUserEmail
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserEmailUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Update email address of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-email
      - lagoon users update-email
  /lagoon/users/{lagoon_user_id}/password:
    put:
      consumes:
      - application/json
      description: Update password of a SORACOM Lagoon user.
      operationId: updateLagoonUserPassword
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserPasswordUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Update password of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-password
      - lagoon users update-password
  /lagoon/users/{lagoon_user_id}/permission:
    put:
      consumes:
      - application/json
      description: Update permission of a SORACOM Lagoon user.
      operationId: updateLagoonUserPermission
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserPermissionUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Update permission of a SORACOM Lagoon user
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-permission
      - lagoon users update-permission
  /logs:
    get:
      description: Returns a list of log entries that match certain criteria. If the
        total number of entries does not fit in one page, a URL for accessing the
        next page is returned in the 'Link' header of the response.
      operationId: getLogs
      parameters:
      - description: Type of the target resource to query log entries.
        enum:
        - Subscriber
        - EventHandler
        - VirtualPrivateGateway
        in: query
        name: resource_type
        required: false
        type: string
      - description: Identity of the target resource to query log entries.
        in: query
        name: resource_id
        required: false
        type: string
      - description: Service name to filter log entries.
        enum:
        - Air
        - Beam
        - Canal
        - Direct
        - Door
        - Endorse
        - Funnel
        - Gate
        in: query
        name: service
        required: false
        type: string
      - description: Start time for the log search range (unixtime).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the log search range (unixtime).
        in: query
        name: to
        required: false
        type: integer
      - description: Maximum number of log entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of log entries.
          schema:
            items:
              $ref: '#/definitions/LogEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Logs.
      tags:
      - Log
      x-soracom-cli:
      - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      description: Returns a list of LoRa devices that match certain criteria. If
        the total number of LoRa devices does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listLoraDevices
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of LoRa devices to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of LoRa devices.
          schema:
            items:
              $ref: '#/definitions/LoraDevice'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa devices.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices/{device_id}:
    get:
      description: Returns information about the specified LoRa device.
      operationId: getLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      responses:
        200:
          description: The LoRa device's detailed information.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get
  /lora_devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a LoRa device that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromLoraDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Sends data to the specified LoRa device. The data is sent to the
        LoRa network server, to be sent out to the device using the next available
        slot. If another message destined for the same LoRa device ID is already waiting
        to be sent, the existing message will be discarded, and the new message will
        be sent instead.
      operationId: sendDataToLoraDevice
      parameters:
      - description: ID of the recipient device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Binary data encoded as a hexadecimal string. Maximum length of
          original binary data is 11 octets (22 characters when encoded as a hexadecimal
          string). The number of characters must be even. fPort MUST be equal to or
          greater than 0. 0 is used for the control plane and 1 or greater values
          should be used in general. It defaults to 2 to avoid the issues of some
          devices from some vendors and all invalid values that can not be parsed
          fallback to 2.
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/LoraData'
      responses:
        204:
          description: Data has been received and sent to the LoRa network server
            for the recipient device to retrieve.
        400:
          description: The payload JSON data contains one or more invalid parameters.
        404:
          description: No such device found.
      security:
      - api_key: []
      - api_token: []
      summary: Send data to a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices send-data
  /lora_devices/{device_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: Disables termination of specified LoRa device.
      operationId: disableTerminationOnLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices disable-termination
  /lora_devices/{device_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: Enables termination of specified LoRa device.
      operationId: enableTerminationOnLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices enable-termination
  /lora_devices/{device_id}/register:
    post:
      consumes:
      - application/json
      description: Registers a LoRa device.
      operationId: registerLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      - description: LoRa device
        in: body
        name: lora_device
        required: true
        schema:
          $ref: '#/definitions/RegisterLoraDeviceRequest'
      produces:
      - application/json
      responses:
        201:
          description: LoRa device registration complete.
          schema:
            $ref: '#/definitions/LoraDevice'
      security:
      - api_key: []
      - api_token: []
      summary: Register LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices register
  /lora_devices/{device_id}/set_group:
    post:
      consumes:
      - application/json
      description: Sets or overwrites a group for the specified LoRa device.
      operationId: setLoraDeviceGroup
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Group (may include ID only).
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Group of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices set-group
  /lora_devices/{device_id}/tags:
    put:
      description: Inserts/updates tags for the specified LoRa device.
      operationId: putLoraDeviceTags
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update LoRa device Tags.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices put-tags
  /lora_devices/{device_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified LoRa device.
      operationId: deleteLoraDeviceTag
      parameters:
      - description: device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified tag complete.
        404:
          description: The specified LoRa device or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa device Tag.
      tags:
      - LoraDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - lora-devices delete-tag
  /lora_devices/{device_id}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified LoRa device
      operationId: terminateLoraDevice
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices terminate
  /lora_devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: Removes the group configuration from the specified LoRa device.
      operationId: unsetLoraDeviceGroup
      parameters:
      - description: Device ID of the target LoRa device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: The specified LoRa device does not exist or the LoRa device
            does not belong to a group.
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group of LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices unset-group
  /lora_gateways:
    get:
      description: Returns a list of LoRa gateways that match certain criteria. If
        the total number of LoRa gateways does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listLoraGateways
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of LoRa devices to retrieve.
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of LoRa gateways.
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa Gateways.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_gateways/{gateway_id}:
    get:
      description: Returns information about the specified LoRa gateway.
      operationId: getLoraGateway
      parameters:
      - description: Gateway ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways get
  /lora_gateways/{gateway_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: Disables termination of specified LoRa gateway.
      operationId: disableTerminationOnLoraGateway
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways disable-termination
  /lora_gateways/{gateway_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: Enables termination of specified LoRa gateway.
      operationId: enableTerminationOnLoraGateway
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways enable-termination
  /lora_gateways/{gateway_id}/set_network_set:
    post:
      consumes:
      - text/plain
      description: Sets or overwrites network set ID for the specified LoRa gateway.
      operationId: setLoraNetworkSet
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      - description: LoRa Network Set ID.
        in: body
        name: ns_id
        schema:
          $ref: '#/definitions/SetNetworkSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways set-network-set
  /lora_gateways/{gateway_id}/tags:
    put:
      consumes:
      - application/json
      description: Inserts/updates tags for the specified LoRa gateway.
      operationId: putLoraGatewayTags
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update LoRa gateway Tags.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways put-tags
  /lora_gateways/{gateway_id}/tags/{tag_name}:
    delete:
      consumes:
      - text/plain
      description: Deletes a tag from the specified LoRa gateway.
      operationId: deleteLoraGatewayTag
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      - description: Name of tag to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified LoRa gateway or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa gateway tag.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways delete-tag
  /lora_gateways/{gateway_id}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified LoRa gateway
      operationId: terminateLoraGateway
      parameters:
      - description: Device ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways terminate
  /lora_gateways/{gateway_id}/unset_network_set:
    post:
      consumes:
      - text/plain
      description: Unset network set ID of the specified LoRa gateway.
      operationId: unsetLoraNetworkSet
      parameters:
      - description: ID of the target LoRa gateway.
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: The specified LoRa gateway does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Unset Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      description: Returns a list of LoRa network sets that match certain criteria.
        If the total number of LoRa network sets does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the response.
      operationId: listLoraNetworkSets
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of LoRa devices to retrieve.
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the last network set retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of LoRa network sets.
          schema:
            items:
              $ref: '#/definitions/LoraNetworkSet'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa Network Sets.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Creates a specified LoRa network set
      operationId: createLoraNetworkSet
      parameters:
      - description: Additional metadata such as tags for a LoRa network set to create.
        in: body
        name: lora_network_set
        required: true
        schema:
          $ref: '#/definitions/LoraNetworkSet'
      produces:
      - application/json
      responses:
        "201":
          description: A LoRa network set was created.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Create a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets create
  /lora_network_sets/{ns_id}:
    delete:
      consumes:
      - text/plain
      description: Deletes the specified LoRa network set
      operationId: deleteLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted.
        "404":
          description: The specified LoRa network set does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete
    get:
      description: Returns information about the specified LoRa network set.
      operationId: getLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The LoRa network set's detailed information.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        "404":
          description: The specified LoRa network set does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets get
  /lora_network_sets/{ns_id}/add_permission:
    post:
      consumes:
      - application/json
      description: Adds permission to allow another operator to use the network set.
      operationId: addPermissionToLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      - description: ID of the operator to be added to the list of allowed operators.
        in: body
        name: operator_id
        required: true
        schema:
          $ref: '#/definitions/UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission added to the network set.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Adds permission to a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets add-permission
  /lora_network_sets/{ns_id}/gateways:
    get:
      description: Returns a list of LoRa gateways that belong to the specified network
        set. If the total number of LoRa gateways does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the response.
      operationId: listGatewaysInLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      - description: Maximum number of LoRa gateways to retrieve.
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: The ID of the last gateway retrieved on the current page. By
          specifying this parameter, you can continue to retrieve the list from the
          next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of LoRa gateways.
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
        "404":
          description: The specified network set does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa Gateways in a Network Set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_network_sets/{ns_id}/revoke_permission:
    post:
      description: Revokes a permission and removes an operator from the list of allowed
        operators in the network set.
      operationId: revokePermissionFromLoraNetworkSet
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      - description: ID of the operator to be added to the list of allowed operators.
        in: body
        name: operator_id
        required: true
        schema:
          $ref: '#/definitions/UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission revoked from the network set.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Revokes a permission from a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets revoke-permission
  /lora_network_sets/{ns_id}/tags:
    put:
      description: Inserts/updates tags for the specified LoRa network set.
      operationId: putLoraNetworkSetTags
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        "200":
          description: The LoRa network set's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        "404":
          description: The specified LoRa network set does not exist.
      summary: Bulk Insert or Update LoRa network set tags.
      tags:
      - LoraNetworkSet
  /lora_network_sets/{ns_id}/tags/{tag_name}:
    delete:
      consumes:
      - text/plain
      description: Deletes a tag from the specified LoRa network set.
      operationId: deleteLoraNetworkSetTag
      parameters:
      - description: ID of the target LoRa network set.
        in: path
        name: ns_id
        required: true
        type: string
      - description: Name of tag to be deleted. (This will be part of a URL path,
          so it needs to be percent-encoded. In JavaScript, specify the name after
          it has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion of specified tag complete.
        "404":
          description: The specified LoRa network set or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa network set tag.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete-tag
  /operators:
    post:
      consumes:
      - application/json
      description: Makes a request to create a new operator. An e-mail is sent to
        the e-mail address specified in the parameters, containing a one-time token
        for verifying the operator’s registration.
      operationId: createOperator
      parameters:
      - description: email, password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterOperatorsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Operator created.
        "400":
          description: The e-mail address is already registered or the password has
            an incorrect format.
      security:
      - api_key: []
      - api_token: []
      summary: Create Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator create
  /operators/{operator_id}:
    get:
      consumes:
      - application/json
      description: Returns information about the operator.
      operationId: getOperator
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetOperatorResponse'
        "400":
          description: Invalid Operator Id
      security:
      - api_key: []
      - api_token: []
      summary: Get Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator get
  /operators/{operator_id}/auth_keys:
    get:
      consumes:
      - application/json
      description: Returns the operator's AuthKey list.
      operationId: listOperatorAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Operator AuthKeys.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys list
    post:
      consumes:
      - application/json
      description: Generates an AuthKey for the operator.
      operationId: generateOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateOperatorsAuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Generate Operator AuthKey.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys generate
  /operators/{operator_id}/auth_keys/{auth_key_id}:
    delete:
      consumes:
      - application/json
      description: Deletes an AuthKey from the operator.
      operationId: deleteOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete Operator AuthKey.
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys delete
  /operators/{operator_id}/mfa:
    delete:
      consumes:
      - application/json
      description: Revokes operator's MFA without backup codes.
      operationId: revokeMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Revoke Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-mfa
    get:
      consumes:
      - application/json
      description: Gets operator's MFA status. The MFA status is one of `ACTIVE`,
        `INACTIVE` or `UNCONFIRMED`.
      operationId: getMFAStatus
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Get Operator's MFA Status.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-mfa-status
    post:
      consumes:
      - application/json
      description: Enables operator's MFA. After calling this APIg, it should be verified
        by calling `Operator:verifyMFA` API.
      operationId: enableMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Enable Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator enable-mfa
  /operators/{operator_id}/mfa/verify:
    post:
      consumes:
      - application/json
      description: Verifies operator's MFA with OTP code after calling `Operator:enableMFA`
        API. MFA will not be activated unless the MFA OTP is verified with this API.
        Backup codes are going to be returned in the response. These codes must be
        securely stored.
      operationId: verifyMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAAuthenticationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperatorMFAVerifyingResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Verify Operator's MFA OTP Code.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-otp
  /operators/{operator_id}/password:
    post:
      consumes:
      - application/json
      description: Updates the operator's password.
      operationId: updateOperatorPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: current password, new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid password.
      security:
      - api_key: []
      - api_token: []
      summary: Update Operator Password.
      tags:
      - Operator
      x-soracom-cli:
      - operator update-password
  /operators/{operator_id}/roles:
    get:
      consumes:
      - application/json
      description: Returns a list of roles.
      operationId: listRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ListRolesResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Roles.
      tags:
      - Role
      x-soracom-cli:
      - roles list
  /operators/{operator_id}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a role.
      operationId: deleteRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete Role.
      tags:
      - Role
      x-soracom-cli:
      - roles delete
    get:
      consumes:
      - application/json
      description: Retrieves a role.
      operationId: getRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/RoleResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get Role.
      tags:
      - Role
      x-soracom-cli:
      - roles get
    post:
      consumes:
      - application/json
      description: Adds a new role.
      operationId: createRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateOrUpdateRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CreateRoleResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Create Role.
      tags:
      - Role
      x-soracom-cli:
      - roles create
    put:
      consumes:
      - application/json
      description: Edits a role.
      operationId: updateRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateOrUpdateRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Role.
      tags:
      - Role
      x-soracom-cli:
      - roles update
  /operators/{operator_id}/roles/{role_id}/users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users attached to a role.
      operationId: listRoleAttachedUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Role Attached Users.
      tags:
      - Role
      x-soracom-cli:
      - roles list-users
  /operators/{operator_id}/shipping_addresses:
    get:
      consumes:
      - application/json
      description: Returns a list of shipping addresses.
      operationId: listShippingAddresses
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List shipping addresses.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses list
    post:
      consumes:
      - application/json
      description: Creates a new shipping address.
      operationId: createShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ShippingAddressModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
        "201":
          description: shippingAddreddId
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Create shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses create
  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a shipping address.
      operationId: deleteShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses delete
    get:
      consumes:
      - application/json
      description: Returns a shipping address.
      operationId: getShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses get
    put:
      consumes:
      - application/json
      description: Updates a shipping address.
      operationId: updateShippingAddress
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      - description: model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ShippingAddressModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update shipping address.
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses update
  /operators/{operator_id}/support/token:
    post:
      consumes:
      - application/json
      description: Returns a token for accessing the support console.
      operationId: generateSupportToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/SupportTokenResponse'
        "400":
          description: Invalid Operator Id
        "403":
          description: Invalid token.
      security:
      - api_key: []
      - api_token: []
      summary: Generate Token for Support Console.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-support-token
  /operators/{operator_id}/token:
    post:
      consumes:
      - application/json
      description: Generates a new API token. If you insert the current API token
        into the header and make a request, a response is returned containing the
        new API token. You can then use the new API token in future requests.
      operationId: generateAuthToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: token timeout seconds
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/GenerateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateTokenResponse'
        "400":
          description: There was an error in the request or the specified token has
            already expired. (In the latter case, you will need to use the /auth API
            to do authentication once again.)
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Generate Authentication Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator generate-api-token
  /operators/{operator_id}/users:
    get:
      consumes:
      - application/json
      description: Returns a list of SAM users.
      operationId: listUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Users.
      tags:
      - User
      x-soracom-cli:
      - users list
  /operators/{operator_id}/users/{user_name}:
    delete:
      consumes:
      - application/json
      description: Deletes the SAM user.
      operationId: deleteUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete User.
      tags:
      - User
      x-soracom-cli:
      - users delete
    get:
      consumes:
      - application/json
      description: Returns a SAM user.
      operationId: getUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/UserDetailResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get User.
      tags:
      - User
      x-soracom-cli:
      - users get
    post:
      consumes:
      - application/json
      description: Adds a new SAM user.
      operationId: createUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: description
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateUserRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "201":
          description: Created
      security:
      - api_key: []
      - api_token: []
      summary: Create User.
      tags:
      - User
      x-soracom-cli:
      - users create
    put:
      consumes:
      - application/json
      description: Updates the SAM user.
      operationId: updateUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: description
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "404":
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Update User.
      tags:
      - User
      x-soracom-cli:
      - users update
  /operators/{operator_id}/users/{user_name}/auth_keys:
    get:
      consumes:
      - application/json
      description: Returns the SAM user's AuthKey list.
      operationId: listUserAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List User AuthKeys.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys list
    post:
      consumes:
      - application/json
      description: Generates an AuthKey for the SAM user.
      operationId: generateUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateUserAuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Generate AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys generate
  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:
    delete:
      consumes:
      - application/json
      description: Deletes an AuthKey from the SAM user.
      operationId: deleteUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: AuthKey not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete User AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys delete
    get:
      consumes:
      - application/json
      description: Returns the SAM user's AuthKey.
      operationId: getUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/AuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get AuthKey.
      tags:
      - User
      x-soracom-cli:
      - users auth-keys get
  /operators/{operator_id}/users/{user_name}/mfa:
    delete:
      consumes:
      - application/json
      description: Revoke SAM user's MFA
      operationId: revokeUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Revoke SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa revoke
    get:
      consumes:
      - application/json
      description: Get SAM user's MFA status
      operationId: getUserMFAStatus
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Get SAM user's MFA status
      tags:
      - User
      x-soracom-cli:
      - users mfa get
    post:
      consumes:
      - application/json
      description: Enable SAM user's MFA
      operationId: enableUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Enable SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa enable
  /operators/{operator_id}/users/{user_name}/mfa/verify:
    post:
      consumes:
      - application/json
      description: Verify SAM user's MFA OTP code when MFA activation phase
      operationId: verifyUserMFA
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAM user name
        in: path
        name: user_name
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAAuthenticationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Verified
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Verify SAM user's MFA OTP code when MFA activation phase
      tags:
      - User
      x-soracom-cli:
      - users mfa verify
  /operators/{operator_id}/users/{user_name}/password:
    delete:
      consumes:
      - application/json
      description: Deletes the user's password.
      operationId: deleteUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: Password registration is required.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete Password.
      tags:
      - User
      x-soracom-cli:
      - users password delete
    get:
      consumes:
      - application/json
      description: Retrieves whether the SAM user has a password or not.
      operationId: hasUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPasswordResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Has User Password.
      tags:
      - User
      x-soracom-cli:
      - users password configured
    post:
      consumes:
      - application/json
      description: Creates a password for the SAM user.
      operationId: createUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateUserPasswordRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Create Password.
      tags:
      - User
      x-soracom-cli:
      - users password create
    put:
      consumes:
      - application/json
      description: Updates the password of the SAM user.
      operationId: updateUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Password.
      tags:
      - User
      x-soracom-cli:
      - users password update
  /operators/{operator_id}/users/{user_name}/permission:
    get:
      consumes:
      - application/json
      description: Retrieves the SAM user's permissions.
      operationId: getUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPermissionResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get User Permission.
      tags:
      - User
      x-soracom-cli:
      - users permissions get
    put:
      consumes:
      - application/json
      description: Updates the SAM user's permissions.
      operationId: updateUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SetUserPermissionRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Permission to User.
      tags:
      - User
      x-soracom-cli:
      - users permissions update
  /operators/{operator_id}/users/{user_name}/roles:
    get:
      consumes:
      - application/json
      description: Retrieves a list of the user's roles.
      operationId: listUserRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/RoleResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List User Roles.
      tags:
      - Role
      x-soracom-cli:
      - users list-roles
    post:
      consumes:
      - application/json
      description: Attaches a role to a user.
      operationId: attachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: role_id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AttachRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Attach Role to User.
      tags:
      - Role
      x-soracom-cli:
      - users attach-role
  /operators/{operator_id}/users/{user_name}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: Detaches a role from a user.
      operationId: detachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Detach Role from User.
      tags:
      - Role
      x-soracom-cli:
      - users detach-role
  /operators/{operator_id}/users/default_permissions:
    get:
      consumes:
      - application/json
      description: Get the default permissions rule that is applied to all of the
        SAM users
      operationId: getDefaultPermissions
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetDefaultPermissionsResponse'
        "403":
          description: Not privileged
        "404":
          description: Operator Not Found
      security:
      - api_key: []
      - api_token: []
      summary: Get the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions get
    put:
      consumes:
      - application/json
      description: Update the default permissions rule that is applied to all of the
        SAM
      operationId: updateDefaultPermissions
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateDefaultPermissionsRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "403":
          description: Not privileged
      security:
      - api_key: []
      - api_token: []
      summary: Update the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions update
  /operators/email_change_token/issue:
    post:
      consumes:
      - application/json
      description: Sends an e-mail with a one-time token for executing the e-mail
        address change.
      operationId: issueEmailChangeToken
      parameters:
      - description: email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/IssueEmailChangeTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Issue Email Change Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-email-change-token
  /operators/email_change_token/verify:
    post:
      consumes:
      - application/json
      description: Verifies the token for the e-mail address change, and then changes
        the e-mail address.
      operationId: verifyEmailChangeToken
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifyEmailChangeTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Verify Email Change Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-email-change-token
  /operators/mfa_revoke_token/issue:
    post:
      consumes:
      - application/json
      description: Issues a token to revoke operator's MFA. The issued token will
        be sent to the operator via email.
      operationId: issueMFARevokingToken
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAIssueRevokingTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Operator not found
      summary: Issue Operator's MFA Revoke Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      consumes:
      - application/json
      description: Verifies the one-time token which is previously issued by calling
        `/operators/mfa_revoke_token/issue` API, operator's email address, password,
        and one of the backup codes. If verified, operator's MFA is going to be revoked.
      operationId: verifyMFARevokingToken
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFARevokingTokenVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Revoked
        "400":
          description: Bad request
        "403":
          description: Invalid username or password
      summary: Verify Operator's MFA revoke token.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-revoke-token
  /operators/verify:
    post:
      consumes:
      - application/json
      description: Verifies the operator's registration. Called by setting as parameter
        the one-time verification token received via e-mail.
      operationId: verifyOperator
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifyOperatorsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registration successful.
        "400":
          description: The one-time token is incorrect.
        "404":
          description: The one-time token has expired.
      summary: Verify Operator.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify
  /orders:
    get:
      consumes:
      - application/json
      description: Returns a list of confirmed orders.
      operationId: listOrders
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List confirmed orders.
      tags:
      - Order
      x-soracom-cli:
      - orders list
    post:
      consumes:
      - application/json
      description: Creates a new order quotation. If the orderId is put in /confirm,
        the order is complete.
      operationId: createQuotation
      parameters:
      - description: Order item list and shipping address ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateEstimatedOrderRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/EstimatedOrderModel'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/EstimatedOrderModel'
      security:
      - api_key: []
      - api_token: []
      summary: Create Quotation.
      tags:
      - Order
      x-soracom-cli:
      - orders create
  /orders/{order_id}:
    get:
      consumes:
      - application/json
      description: Returns a confirmed order.
      operationId: getOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetOrderResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get confirmed order.
      tags:
      - Order
      x-soracom-cli:
      - orders get
  /orders/{order_id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancels an order. If the order has already been dispatched, an
        error is returned.
      operationId: cancelOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Cancel order.
      tags:
      - Order
      x-soracom-cli:
      - orders cancel
  /orders/{order_id}/confirm:
    put:
      consumes:
      - application/json
      description: Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Confirm order.
      tags:
      - Order
      x-soracom-cli:
      - orders confirm
  /orders/{order_id}/subscribers:
    get:
      consumes:
      - application/json
      description: List ordered subscribers
      operationId: listOrderedSubscribers
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      - description: Serial number of the last subscriber in the previous page that
          is set to response header with X-Soracom-Next-Key.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - description: Max number of subscribers in a response.
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderedSubscriberResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List ordered subscribers.
      tags:
      - Order
      x-soracom-cli:
      - orders list-subscribers
  /orders/{order_id}/subscribers/register:
    post:
      consumes:
      - application/json
      description: Registers the ordered SIM with the operator.
      operationId: registerOrderedSim
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Register subscribers for operator.
      tags:
      - Order
      x-soracom-cli:
      - orders register-subscribers
  /payment_history/transactions/{payment_transaction_id}:
    get:
      consumes:
      - application/json
      description: Returns result of a payment transaction.
      operationId: getPaymentTransaction
      parameters:
      - description: Payment transaction ID
        in: path
        name: payment_transaction_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentTransactionResult'
        "400":
          description: Invalid payment transaction ID.
        "404":
          description: Payment transaction result not found.
      security:
      - api_key: []
      - api_token: []
      summary: Get payment transaction result.
      tags:
      - Payment
      x-soracom-cli:
      - payment-history get
  /payment_methods/current:
    get:
      consumes:
      - application/json
      description: Returns current payment methods. Detailed information is included
        in the properties.
      operationId: getPaymentMethod
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentMethodResult'
        "404":
          description: Payment method not found.
      security:
      - api_key: []
      - api_token: []
      summary: Get payment method information.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods get-current
  /payment_methods/current/activate:
    post:
      consumes:
      - application/json
      description: Activates a current payment method that has an error.
      operationId: activatePaymentMethod
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: object
        "404":
          description: Payment method not found.
      security:
      - api_key: []
      - api_token: []
      summary: Activate payment method.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods reactivate-current
  /payment_statements:
    get:
      consumes:
      - application/json
      description: List payment statements.
      operationId: listPaymentStatements
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListPaymentStatementResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List payment statements.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements list
  /payment_statements/{payment_statement_id}/export:
    post:
      consumes:
      - application/json
      description: Export payment statement.
      operationId: exportPaymentStatement
      parameters:
      - description: Payment statement ID
        in: path
        name: payment_statement_id
        required: true
        type: string
      - description: Export mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FileExportResponse'
        "400":
          description: Invalid payment statement ID.
      security:
      - api_key: []
      - api_token: []
      summary: Export payment statement.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements export
  /payment_statements/payer_information:
    get:
      consumes:
      - application/json
      description: Export payer information.
      operationId: getPayerInformation
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisterPayerInformationModel'
        "400":
          description: Payer information not found.
      security:
      - api_key: []
      - api_token: []
      summary: Export payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information get
    post:
      consumes:
      - application/json
      description: Register payer information.
      operationId: registerPayerInformation
      parameters:
      - description: Payer information to be registered in the accounting specification
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/RegisterPayerInformationModel'
      produces:
      - application/json;charset=UTF-8
      responses:
        "201":
          description: Created.
        "400":
          description: Invalid payer information.
      security:
      - api_key: []
      - api_token: []
      summary: Register payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information register
  /port_mappings:
    get:
      description: Returns a list of port mappings.
      operationId: listPortMappings
      parameters:
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        type: integer
      - description: The last Port Mapping ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of port mappings.
          schema:
            items:
              $ref: '#/definitions/PortMapping'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Port Mapping Entries.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new port mapping.
      operationId: createPortMapping
      parameters:
      - description: Port mapping to be created.
        in: body
        name: Port mapping
        required: true
        schema:
          $ref: '#/definitions/CreatePortMappingRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/PortMapping'
      security:
      - api_key: []
      - api_token: []
      summary: Create Port Mapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings create
  /port_mappings/{ip_address}/{port}:
    delete:
      description: Deletes the specified port mapping entry
      operationId: deletePortMapping
      parameters:
      - description: IP address of the target port mapping entry
        in: path
        name: ip_address
        required: true
        type: string
      - description: Port of the target port mapping entry
        in: path
        name: port
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified port mapping entry complete.
        404:
          description: The specified port mapping entry does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete PortMapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings delete
  /port_mappings/subscribers/{imsi}:
    get:
      description: Returns the port mapping entries for a subscriber.
      operationId: listPortMappingsForSubscriber
      parameters:
      - description: Target subscriber IMSI.
        in: path
        name: imsi
        required: true
        type: string
      responses:
        200:
          description: List of port mapping entries for the subscriber.
          schema:
            $ref: '#/definitions/PortMapping'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Port Mapping entries for a subscriber.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings get
  /products:
    get:
      consumes:
      - application/json
      description: Returns a list of products.
      operationId: listProducts
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListProductResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List products.
      tags:
      - Order
      x-soracom-cli:
      - products list
  /query/sigfox_devices:
    get:
      consumes:
      - application/json
      description: Search Sigfox devices by query terms. It returns partial match
        results. When this API permission is allowed, it grants the authority to search
        and retrieve all Sigfox devices that includes their group information.
      operationId: searchSigfoxDevices
      parameters:
      - collectionFormat: multi
        description: Name to search
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - collectionFormat: multi
        description: Group name to search
        in: query
        items:
          type: string
        name: group
        required: false
        type: array
      - collectionFormat: multi
        description: Sigfox device ID to search
        in: query
        items:
          type: string
        name: deviceId
        required: false
        type: array
      - collectionFormat: multi
        description: String of tag values to search
        in: query
        items:
          type: string
        name: tag
        required: false
        type: array
      - default: and
        description: Status of sigfox devices
        enum:
        - active
        - inactive
        - suspended
        - terminated
        - shipped
        - ready
        - inStock
        - banned
        - standby
        in: query
        name: status
        required: false
        type: string
      - default: and
        description: Registration status of sigfox devices
        enum:
        - notStarted
        - pending
        - success
        - failed
        in: query
        name: registration
        required: false
        type: string
      - default: 10
        description: The maximum number of item to retrieve
        format: int32
        in: query
        maximum: 100
        name: limit
        required: false
        type: integer
      - description: The Sigfox device ID of the last Sigfox device retrieved on the
          current page. By specifying this parameter, you can continue to retrieve
          the list from the next Sigfox device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: and
        description: Type of the search ('AND searching' or 'OR searching')
        enum:
        - and
        - or
        in: query
        name: search_type
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
        "400":
          description: Invalid search queries
      security:
      - api_key: []
      - api_token: []
      summary: Search Sigfox devices by query
      tags:
      - Query
      x-soracom-cli:
      - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      consumes:
      - application/json
      description: Search subscibers by query terms. It returns partial match results.  When
        this API permission is allowed, it grants the authority to search and retrieve
        all SIMs that includes their group information.
      operationId: searchSubscribers
      parameters:
      - collectionFormat: multi
        description: Name to search
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - collectionFormat: multi
        description: Group name to search
        in: query
        items:
          type: string
        name: group
        required: false
        type: array
      - collectionFormat: multi
        description: IMSI to search
        in: query
        items:
          type: string
        name: imsi
        required: false
        type: array
      - collectionFormat: multi
        description: MSISDN to search
        in: query
        items:
          type: string
        name: msisdn
        required: false
        type: array
      - collectionFormat: multi
        description: ICCID to search
        in: query
        items:
          type: string
        name: iccid
        required: false
        type: array
      - collectionFormat: multi
        description: Serial number to search
        in: query
        items:
          type: string
        name: serial_number
        required: false
        type: array
      - collectionFormat: multi
        description: String of tag values to search
        in: query
        items:
          type: string
        name: tag
        required: false
        type: array
      - default: 10
        description: The maximum number of item to retrieve
        format: int32
        in: query
        maximum: 100
        name: limit
        required: false
        type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: and
        description: Type of the search ('AND searching' or 'OR searching')
        enum:
        - and
        - or
        in: query
        name: search_type
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
        "400":
          description: Invalid search queries
      security:
      - api_key: []
      - api_token: []
      summary: Search subscribers by query terms
      tags:
      - Query
      x-soracom-cli:
      - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      consumes:
      - application/json
      description: Search traffic volume ranking of subscribers
      operationId: searchSubscriberTrafficVolumeRanking
      parameters:
      - description: 'The beginning point of searching range (unixtime: in milliseconds)'
        format: int64
        in: query
        name: from
        required: true
        type: integer
      - description: 'The end point of searching range (unixtime: in milliseconds)'
        format: int64
        in: query
        name: to
        required: true
        type: integer
      - default: 10
        description: The maximum number of item to retrieve
        format: int32
        in: query
        maximum: 500
        name: limit
        required: false
        type: integer
      - default: desc
        description: The order of ranking
        enum:
        - asc
        - desc
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TrafficVolumeRanking'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Search traffic volume ranking of subscribers
      tags:
      - Query
      x-soracom-cli:
      - query subscribers traffic-volume-ranking
      - query traffic-ranking
  /sigfox_devices:
    get:
      description: Returns a list of Sigfox devices that match certain criteria. If
        the total number of Sigfox devices does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listSigfoxDevices
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of Sigfox devices to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The device ID of the last device retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next device onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of Sigfox devices.
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Sigfox devices.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sigfox_devices/{device_id}:
    get:
      description: Returns information about the specified Sigfox device.
      operationId: getSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      responses:
        200:
          description: The Sigfox device's detailed information.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get
  /sigfox_devices/{device_id}/data:
    get:
      description: Returns a list of data entries sent from a Sigfox device that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSigfoxDevice
      parameters:
      - description: Device ID of the target subscriber that generated data entries.
        in: path
        name: device_id
        required: true
        type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Sends data to the specified Sigfox device. The data will be stored
        until the device sends a next uplink message. If another message destined
        for the same Sigfox device ID is already waiting to be sent, the existing
        message will be discarded, and the new message will be sent instead.
      operationId: sendDataToSigfoxDevice
      parameters:
      - description: ID of the recipient device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Binary data encoded as a hexadecimal string. Length of original
          binary data must be 8 octets (16 characters when encoded as a hexadecimal
          string).
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/SigfoxData'
      responses:
        204:
          description: Data has been received by server and waiting for the recipient
            device to retrieve.
        404:
          description: No such device found.
      security:
      - api_key: []
      - api_token: []
      summary: Send data to a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices send-data
  /sigfox_devices/{device_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: Disables termination of specified Sigfox device.
      operationId: disableTerminationOnSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices disable-termination
  /sigfox_devices/{device_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: Enables termination of specified Sigfox device.
      operationId: enableTerminationOnSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices enable-termination
  /sigfox_devices/{device_id}/register:
    post:
      consumes:
      - application/json
      description: Registers a Sigfox device
      operationId: registerSigfoxDevice
      parameters:
      - description: Device ID of the target sigfox device to register
        in: path
        name: device_id
        required: true
        type: string
      - description: Sigfox device registration request
        in: body
        name: registration_request
        required: true
        schema:
          $ref: '#/definitions/SigfoxRegistrationRequest'
      produces:
      - application/json
      responses:
        200:
          description: Sigfox device successfully registered
          schema:
            $ref: '#/definitions/SigfoxDevice'
        400:
          description: PAC code is missing
      security:
      - api_key: []
      - api_token: []
      summary: Register a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices register
  /sigfox_devices/{device_id}/set_group:
    post:
      consumes:
      - application/json
      description: Sets or overwrites a group for the specified Sigfox device.
      operationId: setSigfoxDeviceGroup
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Group (may include ID only).
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Group of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices set-group
  /sigfox_devices/{device_id}/tags:
    put:
      description: Inserts/updates tags for the specified Sigfox device.
      operationId: putSigfoxDeviceTags
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update Sigfox device Tags.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices put-tags
  /sigfox_devices/{device_id}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified Sigfox device.
      operationId: deleteSigfoxDeviceTag
      parameters:
      - description: device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified tag complete.
        404:
          description: The specified Sigfox device or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Sigfox device Tag.
      tags:
      - SigfoxDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sigfox-devices delete-tag
  /sigfox_devices/{device_id}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified Sigfox device
      operationId: terminateSigfoxDevice
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices terminate
  /sigfox_devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: Removes the group configuration from the specified Sigfox device.
      operationId: unsetSigfoxDeviceGroup
      parameters:
      - description: Device ID of the target Sigfox device.
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: The specified Sigfox device does not exist or the Sigfox device
            does not belong to a group.
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group of Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices unset-group
  /stats/air/operators/{operator_id}/export:
    post:
      consumes:
      - application/json
      description: Retrieves a file containing the usage report of all subscribers
        for the specified operator. The report data range is specified with from,
        to in unixtime. The report contains monthly data. The file output destination
        is AWS S3. The file output format is CSV.
      operationId: exportAirStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      - description: export time period
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export Air Usage Report of All Subscribers.
      tags:
      - Stats
      x-soracom-cli:
      - stats air export
  /stats/air/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: Retrieves the usage report for the subscriber specified by the
        IMSI.
      operationId: getAirStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: Start time in unixtime for the aggregate data.
        in: query
        name: from
        required: true
        type: integer
      - description: End time in unixtime for the aggregate data.
        in: query
        name: to
        required: true
        type: integer
      - description: Units of aggregate data. For minutes, the interval is around
          5 minutes.
        enum:
        - month
        - day
        - minutes
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AirStatsResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Air Usage Report of Subscriber.
      tags:
      - Stats
      x-soracom-cli:
      - stats air get
  /stats/beam/operators/{operator_id}/export:
    post:
      consumes:
      - application/json
      description: Retrieves a file containing the usage report of all subscribers
        for the specified operator. The report data range is specified with from,
        to in unixtime. The report contains monthly data. The file output destination
        is AWS S3. The file output format is CSV.
      operationId: exportBeamStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      - description: export time period
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export Beam Usage Report of All Subscribers.
      tags:
      - Stats
      x-soracom-cli:
      - stats beam export
  /stats/beam/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: Retrieves the Soracom Beam usage report for the subscriber specified
        by the IMSI.
      operationId: getBeamStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: Start time in unixtime for the aggregate data.
        in: query
        name: from
        required: true
        type: integer
      - description: End time in unixtime for the aggregate data.
        in: query
        name: to
        required: true
        type: integer
      - description: Units of aggregate data. For minutes, the interval is around
          5 minutes.
        enum:
        - month
        - day
        - minutes
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/BeamStatsResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Beam Usage Report of Subscriber.
      tags:
      - Stats
      x-soracom-cli:
      - stats beam get
  /stats/harvest/operators/{operator_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the SORACOM Harvest usage report for the operator.
      operationId: getHarvestExportedDataStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: Year/Month in 'YYYYMM' format.
        in: query
        name: year_month
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/HarvestExportedDataStatsResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get 'Harvest usage report' for the specified operator.
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest get
  /stats/napter/audit_logs:
    get:
      consumes:
      - application/json
      description: Get Napter audit logs' monthly exported data stats
      operationId: getNapterAuditLogsExportedDataStats
      parameters:
      - description: Year/Month in 'YYYYMM' format.
        in: query
        name: year_month
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/NapterAuditLogsExportedDataStatsResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get Napter audit logs' monthly exported data stats
      tags:
      - Stats
      x-soracom-cli:
      - stats napter audit-logs get
  /subscribers:
    get:
      description: Returns a list of subscribers that match certain criteria. If the
        total number of subscribers does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listSubscribers
      parameters:
      - description: Tag name for filtering the search (exact match).
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag search string for filtering the search. Required when `tag_name`
          has been specified.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 'Status for filtering the search. Can specify multiple values
          delimited by `|`. Valid values include: `active`, `inactive`, `ready`, `instock`,
          `shipped`, `suspended`, and `terminated`.'
        in: query
        name: status_filter
        required: false
        type: string
      - description: 'Speed class for filtering the search. Can specify multiple values
          delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`,
          `s1.fast`'
        in: query
        name: speed_class_filter
        required: false
        type: string
      - description: Serial number for filtering the search. Can specify multiple
          values delimited by `|`. Returns subscribers with serial number starting
          with the specified value(s).
        in: query
        name: serial_number_filter
        required: false
        type: string
      - description: Maximum number of subscribers to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The IMSI of the last subscriber retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next subscriber onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of subscibers.
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Subscribers.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}:
    get:
      description: Returns information about the specified subscriber.
      operationId: getSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      responses:
        200:
          description: The subscriber's detailed information.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers get
  /subscribers/{imsi}/activate:
    post:
      consumes:
      - text/plain
      description: Activates status of specified subscriber.
      operationId: activateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Activate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers activate
  /subscribers/{imsi}/data:
    get:
      description: Returns a list of data entries sent from a subscriber that match
        certain criteria. If the total number of entries does not fit in one page,
        a URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSubscriber
      parameters:
      - description: IMSI of the target subscriber that generated data entries.
        in: path
        name: imsi
        required: true
        type: string
      - description: Start time for the data entries search range (unixtime in milliseconds).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the data entries search range (unixtime in milliseconds).
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: Sort order of the data entries. Either descending (latest data
          entry first) or ascending (oldest data entry first).
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: Maximum number of data entries to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The value of `time` in the last log entry retrieved in the previous
          page. By specifying this parameter, you can continue to retrieve the list
          from the next page onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - data get
      - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/deactivate:
    post:
      consumes:
      - text/plain
      description: Deactivates specified subscriber.
      operationId: deactivateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Deactivate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers deactivate
  /subscribers/{imsi}/delete_session:
    post:
      consumes:
      - text/plain
      description: Deletes session for the specified subscriber.
      operationId: deleteSubscriberSession
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Session
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-session
  /subscribers/{imsi}/disable_termination:
    post:
      consumes:
      - text/plain
      description: Disables termination of specified subscriber.
      operationId: disableTermination
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers disable-termination
  /subscribers/{imsi}/enable_termination:
    post:
      consumes:
      - text/plain
      description: Enables termination of specified subscriber.
      operationId: enableTermination
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers enable-termination
  /subscribers/{imsi}/events/sessions:
    get:
      description: Returns the event history for the specified subscriber, including
        session creation, change, and deletion. If the total number of events does
        not fit in one page, a URL for accessing the next page is returned in the
        `Link` header of the response.
      operationId: listSessionEvents
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: Start time for the events search range (unixtime).
        in: query
        name: from
        required: false
        type: integer
      - description: End time for the events search range (unixtime).
        in: query
        name: to
        required: false
        type: integer
      - description: Maximum number of events to retrieve.
        in: query
        name: limit
        required: false
        type: integer
      - description: The time stamp of the last event retrieved on the current page.
          By specifying this parameter, you can continue to retrieve the list from
          the next event onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of session events
          schema:
            items:
              $ref: '#/definitions/SessionEvent'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Session Events.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/register:
    post:
      consumes:
      - application/json
      description: Registers a subscriber.
      operationId: registerSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: subscriber
        in: body
        name: subscriber
        required: true
        schema:
          $ref: '#/definitions/RegisterSubscribersRequest'
      produces:
      - application/json
      responses:
        201:
          description: Subscriber registration complete.
          schema:
            $ref: '#/definitions/Subscriber'
      security:
      - api_key: []
      - api_token: []
      summary: Register Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers register
  /subscribers/{imsi}/report_local_info:
    post:
      consumes:
      - plain/text
      description: Triggers Subscriber to report SIM local info.
      operationId: reportLocalInfo
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        202:
          description: The local info reporting has successfully been triggered. The
            subscriber information is asynchronously updated when the SIM reports
            the information back.
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: The specified subscriber does not support local info reporting
            feature.
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Triggers Subscriber to report SIM local info.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers report-local-info
  /subscribers/{imsi}/send_sms:
    post:
      consumes:
      - application/json
      description: Send SMS to the specified subscriber.
      operationId: sendSms
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: SMS forwarding request that contains message body and its encoding
          type.
        in: body
        name: smsForwardingRequest
        required: true
        schema:
          $ref: '#/definitions/SmsForwardingRequest'
      produces:
      - application/json
      responses:
        202:
          description: SMS forwarding report containing message ID.
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        400:
          description: The specified subscriber does not support SMS API.
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Send SMS to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms
  /subscribers/{imsi}/set_expiry_time:
    post:
      consumes:
      - application/json
      description: Updates expiry time of specified subscriber.
      operationId: setExpiryTime
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: 'Expiry time after the update (unixtime: in milliseconds).'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExpiryTime'
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Update Expiry Time of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-expiry-time
  /subscribers/{imsi}/set_group:
    post:
      consumes:
      - application/json
      description: Sets or overwrites a group for the specified subscriber.
      operationId: setGroup
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: Group (may include ID only).
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/SetGroupRequest'
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Group to Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-group
  /subscribers/{imsi}/set_imei_lock:
    post:
      consumes:
      - application/json
      description: Set IMEI that the subscriber should be locked to.
      operationId: setImeiLock
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: IMEI lock configuration for the subscriber. (IMEI can be left
          blank for locking to the current IMEI of an online subscriber.)
        in: body
        name: imeiLock
        required: false
        schema:
          $ref: '#/definitions/SetImeiLockRequest'
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: Invalid IMEI string or subscriber is offline and IMEI not specified.
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-imei-lock
  /subscribers/{imsi}/set_to_standby:
    post:
      consumes:
      - text/plain
      description: Set the specified subscriber to standby mode.
      operationId: setSubscriberToStandby
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: The specified subscriber does not support standby mode.
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Set Subscriber to standby mode.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-to-standby
  /subscribers/{imsi}/suspend:
    post:
      consumes:
      - text/plain
      description: Suspends the specified subscriber
      operationId: suspendSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Suspend Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers suspend
  /subscribers/{imsi}/tags:
    put:
      description: Inserts/updates tags for the specified subscriber.
      operationId: putSubscriberTags
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: Array of tags to be inserted/updated.
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update Subscriber Tags.
      tags:
      - Subscriber
      x-sam-operationId: putTags
      x-soracom-cli:
      - subscribers put-tags
  /subscribers/{imsi}/tags/{tag_name}:
    delete:
      description: Deletes a tag from the specified subscriber.
      operationId: deleteSubscriberTag
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: Tag name to be deleted. (This will be part of a URL path, so
          it needs to be percent-encoded. In JavaScript, specify the name after it
          has been encoded using encodeURIComponent().)
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified tag complete.
        404:
          description: The specified subscriber or the tag does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Subscriber Tag.
      tags:
      - Subscriber
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - subscribers delete-tag
  /subscribers/{imsi}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified subscriber
      operationId: terminateSubscriber
      parameters:
      - description: IMSI of the target subscriber.
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers terminate
  /subscribers/{imsi}/unset_expiry_time:
    post:
      consumes:
      - text/plain
      description: Deletes expiry time of specified subscriber and changes it to indefinite.
      operationId: unsetExpiryTime
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: Change of specified subscriber's expiry time to indefinite
            complete.
        404:
          description: The specified subscriber does not exist or the subscriber does
            not have an expiry time.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Expiry Time of Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-expiry-time
  /subscribers/{imsi}/unset_group:
    post:
      consumes:
      - text/plain
      description: Removes the group configuration from the specified subscriber.
      operationId: unsetGroup
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist or the subscriber does
            not belong to a group.
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group to Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-group
  /subscribers/{imsi}/unset_imei_lock:
    post:
      consumes:
      - text/plain
      description: Remove any existing IMEI lock configuration for the subscriber.
      operationId: unsetImeiLock
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Unset IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-imei-lock
  /subscribers/{imsi}/update_speed_class:
    post:
      consumes:
      - application/json
      description: Changes the speed class of the specified subscriber.
      operationId: updateSpeedClass
      parameters:
      - description: IMSI of the target subscriber.
        in: path
        name: imsi
        required: true
        type: string
      - description: speed_class
        in: body
        name: speed_class
        required: true
        schema:
          $ref: '#/definitions/UpdateSpeedClassRequest'
      produces:
      - application/json
      responses:
        200:
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Update Subscriber speed class.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers update-speed-class
  /subscribers/msisdn/{msisdn}/send_sms:
    post:
      consumes:
      - application/json
      description: Send SMS to a subscriber specified with MSISDN.
      operationId: sendSmsByMsisdn
      parameters:
      - description: MSISDN of the target subscriber.
        in: path
        name: msisdn
        required: true
        type: string
      - description: SMS forwarding request that contains message body and its encoding
          type.
        in: body
        name: smsForwardingRequest
        required: true
        schema:
          $ref: '#/definitions/SmsForwardingRequest'
      produces:
      - application/json
      responses:
        202:
          description: SMS forwarding report containing message ID.
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        400:
          description: The specified subscriber does not support SMS API.
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Send SMS to Subscriber by MSISDN
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/{token}:
    delete:
      consumes:
      - application/json
      description: Deletes the subscriber's inter-operator control transfer token,
        and cancels the control transfer.
      operationId: deleteSubscriberTransferToken
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: Deletion implemented.
        404:
          description: The token does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Subscribers Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-transfer-token
  /subscribers/transfer_token/issue:
    post:
      consumes:
      - application/json
      description: Sends the subscriber's inter-operator control transfer token to
        the control destination operator.
      operationId: issueSubscriberTransferToken
      parameters:
      - description: Destination operator's email address, Operator ID, transferring
          IMSI
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/IssueSubscriberTransferTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IssueSubscriberTransferTokenResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Issue Subscribers Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      consumes:
      - application/json
      description: Verifies the subscriber's control transfer token, and executes
        the transfer. This API is called from the operator of the control destination.
      operationId: verifySubscriberTransferToken
      parameters:
      - description: Subscriber transfer token that noficed via email.
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifySubscriberTransferTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/VerifySubscriberTransferTokenResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Verify Subscriber Transfer Token.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers verify-transfer-token
  /virtual_private_gateways:
    get:
      description: Returns a list of VPGs.
      operationId: listVirtualPrivateGateways
      parameters:
      - description: Tag name of the VPG. Filters through all VPGs that exactly match
          the tag name. When tag_name is specified, tag_value is required.
        in: query
        name: tag_name
        required: false
        type: string
      - description: Tag value of the VPGs.
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: Tag match mode.
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        type: integer
      - description: The last group ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next VPG
          onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: List of VPGs.
          schema:
            items:
              $ref: '#/definitions/VirtualPrivateGateway'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Virtual Private Gateways.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      description: Create new VPG.
      operationId: createVirtualPrivateGateway
      parameters:
      - description: Request containing information for the new VPG to be created.
        in: body
        name: CreateVirtualPrivateGatewayRequest
        required: true
        schema:
          $ref: '#/definitions/CreateVirtualPrivateGatewayRequest'
      produces:
      - application/json
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/VirtualPrivateGateway'
      security:
      - api_key: []
      - api_token: []
      summary: Create Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create
  /virtual_private_gateways/{vpg_id}:
    get:
      description: Retrieves information about the specified VPG.
      operationId: getVirtualPrivateGateway
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: The specified VPG.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get
  /virtual_private_gateways/{vpg_id}/gate/close:
    post:
      consumes:
      - text/plain
      description: Close SORACOM Gate on the specified VPG.
      operationId: closeGate
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: SORACOM Gate is successfully closed on the VPG.
        400:
          description: Client side error.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Close SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg close-gate
  /virtual_private_gateways/{vpg_id}/gate/open:
    post:
      consumes:
      - application/json
      description: Open SORACOM Gate on the specified VPG.
      operationId: openGate
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Optional configuration parameters for Gate.
        in: body
        name: configuration_parameters
        required: false
        schema:
          $ref: '#/definitions/OpenGateRequest'
      produces:
      - application/json
      responses:
        200:
          description: SORACOM Gate is successfully opened on the VPG.
        400:
          description: Client side error.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Open SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg open-gate
  /virtual_private_gateways/{vpg_id}/gate/peers:
    get:
      consumes:
      - text/plain
      description: List Gate peers registered in the Virtual Private Gateway
      operationId: listGatePeers
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: List of peers registered in the VPG.
          schema:
            items:
              $ref: '#/definitions/GatePeer'
            type: array
        400:
          description: Client side error in the request.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: List VPG Gate peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-gate-peers
    post:
      consumes:
      - application/json
      description: Register a host as a gate peer in the Virtual Private Gateway
      operationId: registerGatePeer
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - in: body
        name: gate_peer
        required: true
        schema:
          $ref: '#/definitions/RegisterGatePeerRequest'
      produces:
      - application/json
      responses:
        200:
          description: Gate peer is successfully registered.
          schema:
            $ref: '#/definitions/GatePeer'
        400:
          description: Client side error in the request.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Register VPG Gate peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg register-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:
    delete:
      consumes:
      - text/plain
      description: Unregister a gate peer from the Virtual Private Gateway
      operationId: unregisterGatePeer
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: ID of the target node.
        in: path
        name: outer_ip_address
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: Successfully deregistered the Gate peer.
        400:
          description: Error in the request.
        404:
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Unregister VPG gate peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unregister-gate-peer
  /virtual_private_gateways/{vpg_id}/ip_address_map:
    get:
      consumes:
      - text/plain
      description: Describes the list of IP addresse map entries in the Virtual Private
        Gateway
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Successfully fetched the list of IP address map entries.
          schema:
            items:
              $ref: '#/definitions/IpAddressMapEntry'
            type: array
        400:
          description: Error in the request.
        404:
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: List VPG IP address map entries
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-ip-address-map-entries
    post:
      consumes:
      - application/json
      description: Puts an entry in VPG IP address map.
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - in: body
        name: put_ip_address_map_entry_request
        required: true
        schema:
          $ref: '#/definitions/PutIpAddressMapEntryRequest'
      produces:
      - application/json
      responses:
        200:
          description: Successfully put an entry for the specified key and IP address.
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        400:
          description: Error in the request.
        404:
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Put an entry in VPG IP address map
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:
    delete:
      consumes:
      - text/plain
      description: Deletes an entry in VPG IP address map.
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Target key to remove.
        in: path
        name: key
        required: true
        type: string
      produces:
      - text/plainn
      responses:
        204:
          description: Successfully deleted the entry from the VPG IP address map.
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        400:
          description: Error in the request.
        404:
          description: The specified VPG or node does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:
    post:
      description: Add node in the list of Junction mirroring peers
      operationId: createMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Mirroring peer
        in: body
        name: mirroring peer
        required: true
        schema:
          $ref: '#/definitions/JunctionMirroringPeer'
      responses:
        "201":
          description: Mirroring peer added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Add node in the list of Junction mirroring peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:
    delete:
      consumes:
      - text/plain
      description: Remove peer from the list of Junction mirroring peers
      operationId: deleteMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: IP address of mirroring peer
        in: path
        name: ipaddr
        required: true
        type: string
      produces:
      - text/plainn
      responses:
        "204":
          description: Mirroring peer removed
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Remove peer from the list of Junction mirroring peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-mirroring-peer
    put:
      description: Update a Junction mirroring peer
      operationId: updateMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Mirroring peer IP address
        in: path
        name: ipaddr
        required: true
        type: string
      - description: List of attributes to update
        in: body
        name: updates
        required: true
        schema:
          items:
            $ref: '#/definitions/AttributeUpdate'
          type: array
      responses:
        "200":
          description: Mirroring peer updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Update a Junction mirroring peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/set_inspection:
    post:
      description: Set configuration for Junction inspection feature
      operationId: setInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Inspection configuration
        in: body
        name: inspection configuration
        required: true
        schema:
          $ref: '#/definitions/JunctionInspectionConfiguration'
      responses:
        "200":
          description: Configuration added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Set configuration for Junction inspection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-inspection
  /virtual_private_gateways/{vpg_id}/junction/set_redirection:
    post:
      description: Set configuration for Junction redirection feature
      operationId: setRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: Redirection configuration
        in: body
        name: redirection configuration
        required: true
        schema:
          $ref: '#/definitions/JunctionRedirectionConfiguration'
      responses:
        "200":
          description: Configuration added/updated
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Set configuration for Junction redirection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-redirection
  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:
    post:
      description: Unset configuration for Junction inspection feature
      operationId: unsetInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      responses:
        "200":
          description: Configuration unset
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Unset configuration for Junction inspection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-inspection
  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:
    post:
      description: Unset configuration for Junction redirection feature
      operationId: unsetRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      responses:
        "200":
          description: Configuration unset
        "404":
          description: No such VPG found
      security:
      - api_key: []
      - api_token: []
      summary: Unset configuration for Junction redirection feature
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-redirection
  /virtual_private_gateways/{vpg_id}/set_routing_filter:
    post:
      consumes:
      - application/json
      description: Sets Virtual Private Gateway outbound routing filter.
      operationId: setRoutingFilter
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: List of routing filter entries
        in: body
        name: routing_filter_entries
        required: true
        schema:
          items:
            $ref: '#/definitions/RoutingFilterEntry'
          type: array
      produces:
      - application/json
      responses:
        200:
          description: The routing filter is successfully configured.
        400:
          description: Invalid argument is given
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Sets Virtual Private Gateway outbound routing filter.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-routing-filter
  /virtual_private_gateways/{vpg_id}/terminate:
    post:
      consumes:
      - text/plain
      description: Terminates the specified VPG.
      operationId: terminateVirtualPrivateGateway
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Termination of specified VPG started.
        400:
          description: There is a reason why the specified VPG cannot be terminated.
        404:
          description: The specified VPG does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Virtual Private Gateway.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg terminate
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:
    post:
      consumes:
      - application/json
      description: Creates a VPC peering connection for the specified VPG.
      operationId: createVpcPeeringConnection
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: VPC peering connection to be created.
        in: body
        name: vpc_peering_connection
        required: true
        schema:
          $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
      produces:
      - application/json
      responses:
        201:
          description: The created VPC peering connection.
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
        404:
          description: The specified VPC peering connection does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Create VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-vpc-peering-connection
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:
    delete:
      description: Deletes the specified VPC peering connection.
      operationId: deleteVpcPeeringConnection
      parameters:
      - description: Target VPG ID.
        in: path
        name: vpg_id
        required: true
        type: string
      - description: VPC peering connection ID to be deleted.
        in: path
        name: pcx_id
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified VPC peering connection complete.
        404:
          description: The specified VPC peering connection does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete VPC Peering Connection.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      consumes:
      - application/json
      description: Returns a list of contracted long term discounts.
      operationId: listVolumeDiscounts
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListVolumeDiscountResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List long term discounts.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts list
  /volume_discounts/{contract_id}:
    get:
      consumes:
      - application/json
      description: Returns contracted long term discount.
      operationId: getVolumeDiscount
      parameters:
      - description: contract_id
        in: path
        name: contract_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetVolumeDiscountResponse'
        "400":
          description: Long term discount not found.
      security:
      - api_key: []
      - api_token: []
      summary: Get long term discount.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts get
produces:
- application/json
schemes:
- https
securityDefinitions:
  api_key:
    in: header
    name: X-Soracom-API-Key
    type: apiKey
  api_token:
    in: header
    name: X-Soracom-Token
    type: apiKey
swagger: "2.0"
