basePath: /v1
definitions:
  APICallError:
    properties:
      errorMessage:
        $ref: '#/definitions/APICallErrorMessage'
      httpStatus:
        format: int32
        type: integer
  APICallErrorMessage:
    properties:
      code:
        description: エラーコード
        type: string
      message:
        description: エラーメッセージ。リクエスト時にX-Soracom-Langヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。
        type: string
    required:
    - code
    - message
  APIKeyResponse:
    properties:
      apiKey:
        type: string
  ActionConfig:
    properties:
      properties:
        $ref: '#/definitions/ActionConfigProperty'
      type:
        enum:
        - ChangeSpeedClassAction
        - InvokeAWSLambdaAction
        - ExecuteWebRequestAction
        - SendMailAction
        - SendMailToOperatorAction
        type: string
    required:
    - properties
    - type
  ActionConfigProperty:
    properties:
      accessKey:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      body:
        description: ExecuteWebRequestAction の時のみ有効(任意)
        type: string
      contentType:
        description: ExecuteWebRequestAction の時のみ有効
        type: string
      endpoint:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      executionDateTimeConst:
        enum:
        - IMMEDIATELY
        - BEGINNING_OF_NEXT_MONTH
        - BEGINNING_OF_NEXT_DAY
        - AFTER_ONE_DAY
        - NEVER
        type: string
      functionName:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      headers:
        description: ExecuteWebRequestAction の時のみ有効(任意)
        type: object
      httpMethod:
        description: ExecuteWebRequestAction の時のみ有効
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        type: string
      message:
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
        type: string
      parameter1:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter2:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter3:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter4:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      parameter5:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      secretAccessKey:
        description: InvokeAWSLambdaAction の時のみ有効
        type: string
      speedClass:
        description: ChangeSpeedClassAction の時のみ有効
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
      title:
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
        type: string
      to:
        description: SendMailAction の時のみ有効
        type: string
      url:
        description: 接続先URLとパラメーター ExecuteWebRequestAction の時のみ有効
        type: string
    required:
    - executionDateTimeConst
  AirStatsResponse:
    properties:
      dataTrafficStatsMap:
        additionalProperties:
          $ref: '#/definitions/DataTrafficStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
  AttachRoleRequest:
    properties:
      roleId:
        type: string
  AttributeUpdate:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  AuthKeyResponse:
    properties:
      authKeyId:
        type: string
      createDateTime:
        format: int64
        type: integer
      lastUsedDateTime:
        format: int64
        type: integer
  AuthRequest:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
      email:
        type: string
      mfaOTPCode:
        type: string
      operatorId:
        type: string
      password:
        type: string
      tokenTimeoutSeconds:
        default: 86400
        format: int64
        maximum: 172800
        type: integer
      userName:
        type: string
  AuthResponse:
    properties:
      apiKey:
        type: string
      operatorId:
        type: string
      token:
        type: string
      userName:
        type: string
  BeamStatsResponse:
    properties:
      beamStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomBeamStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
  Config:
    properties:
      properties:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
  CouponResponse:
    properties:
      amount:
        description: クーポン額
        format: double
        type: number
      balance:
        description: 残高
        format: double
        type: number
      billItemName:
        description: 対象課金アイテム
        type: string
      couponCode:
        description: クーポンコード
        type: string
      expiryYearMonth:
        description: 有効期限
        example: yyyyMM
        type: string
  CreateAndUpdateCredentialsModel:
    properties:
      credentials:
        type: object
      description:
        type: string
      type:
        enum:
        - aws-credentials
        - azure-credentials
        - psk
        - x509
        type: string
  CreateEstimatedOrderRequest:
    properties:
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/OrderItemModel'
        type: array
      shippingAddressId:
        description: 商品発送先ID
        type: string
  CreateEventHandlerRequest:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
        - inactive
        - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
        $ref: '#/definitions/TagSet'
    required:
    - actionConfigList
    - ruleConfig
    - status
  CreateGroupRequest:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
  CreateOrUpdateRoleRequest:
    properties:
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  CreatePortMappingRequest:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        type: boolean
    required:
    - destination
  CreateRoleResponse:
    properties:
      roleId:
        type: string
  CreateUserPasswordRequest:
    properties:
      password:
        type: string
  CreateUserRequest:
    properties:
      description:
        type: string
  CreateVirtualPrivateGatewayRequest:
    properties:
      deviceSubnetCidrRange:
        default: 10.128.0.0/9
        type: string
      primaryServiceName:
        default: Canal
        enum:
        - Canal
        - Gate
        type: string
      useInternetGateway:
        type: boolean
    required:
    - primaryServiceName
  CreateVpcPeeringConnectionRequest:
    properties:
      destinationCidrBlock:
        type: string
      peerOwnerId:
        type: string
      peerRegion:
        type: string
      peerVpcId:
        type: string
  CredentialsModel:
    properties:
      createDateTime:
        format: int64
        type: integer
      credentials:
        type: object
      credentialsId:
        type: string
      description:
        type: string
      lastUsedDateTime:
        format: int64
        type: integer
      type:
        enum:
        - aws-credentials
        - azure-credentials
        - psk
        - x509
        type: string
      updateDateTime:
        format: int64
        type: integer
  CreditCard:
    properties:
      cvc:
        type: string
      expireMonth:
        format: int32
        type: integer
      expireYear:
        format: int32
        type: integer
      name:
        type: string
      number:
        type: string
  DailyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      date:
        description: 年月日
        example: yyyyMMdd
        type: string
  DailyBillResponse:
    properties:
      billList:
        description: 日ごとの利用料リスト
        items:
          $ref: '#/definitions/DailyBill'
        type: array
  DataEntry:
    properties:
      content:
        type: string
      contentType:
        type: string
      time:
        format: int64
        type: integer
  DataSourceResourceMetadata:
    properties:
      attributeNames:
        items:
          type: string
        type: array
      lastModifiedTime:
        format: int64
        type: integer
      resourceId:
        type: string
      resourceType:
        type: string
  DataTrafficStats:
    properties:
      downloadByteSizeTotal:
        format: int64
        type: integer
      downloadPacketSizeTotal:
        format: int64
        type: integer
      uploadByteSizeTotal:
        format: int64
        type: integer
      uploadPacketSizeTotal:
        format: int64
        type: integer
  Device:
    properties:
      device_id:
        type: string
      endpoint:
        type: string
      firmwareVersion:
        type: string
      groupId:
        type: string
      ipAddress:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastRegistrationUpdate:
        format: date-time
        type: string
      manufacturer:
        type: string
      modelNumber:
        type: string
      objects:
        type: object
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      registrationId:
        type: string
      registrationLifeTime:
        format: int64
        type: integer
      serialNumber:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  DeviceObjectModel:
    properties:
      createdTime:
        format: date-time
        type: string
      format:
        enum:
        - xml
        - json
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      objectId:
        type: string
      objectName:
        type: string
      operatorId:
        type: string
      scope:
        type: string
    type: object
  EnableMFAOTPResponse:
    properties:
      totpUri:
        type: string
  Error:
    properties:
      code:
        format: int32
        type: integer
      fields:
        type: string
      message:
        type: string
  EstimatedOrderItemModel:
    properties:
      product:
        $ref: '#/definitions/ProductModel'
        description: 商品
      productAmount:
        description: 商品金額
        format: double
        type: number
      quantity:
        description: 購入数
        format: int32
        type: integer
  EstimatedOrderModel:
    properties:
      email:
        description: メールアドレス
        type: string
      orderId:
        description: 発注ID
        type: string
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
        description: 発送先
      shippingAddressId:
        description: 商品発送先ID
        type: string
      shippingCost:
        description: 配送料
        format: double
        type: number
      taxAmount:
        description: 消費税
        format: double
        type: number
      totalAmount:
        description: 合計金額
        format: double
        type: number
  EventHandlerModel:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      handlerId:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
        - inactive
        - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
        $ref: '#/definitions/TagSet'
    required:
    - actionConfigList
    - handlerId
    - ruleConfig
    - status
    - name
  ExpiryTime:
    properties:
      expiryAction:
        enum:
        - doNothing
        - deleteSession
        - deactivate
        - suspend
        - terminate
        type: string
      expiryTime:
        format: int64
        type: integer
    required:
    - expiryTime
  ExportRequest:
    properties:
      from:
        format: int64
        type: integer
      period:
        enum:
        - month
        - day
        - minutes
        type: string
      to:
        format: int64
        type: integer
  FileEntry:
    properties:
      contentLength:
        description: コンテントの長さ
        format: int64
        type: integer
      contentType:
        description: コンテントタイプ
        type: string
      createdTime:
        description: ファイルの作成時刻
        format: int64
        type: integer
      etag:
        description: ファイルのETag
        type: string
      filename:
        description: ファイル名
        type: string
      isDirectory:
        description: ディレクトリか否か
        type: boolean
      lastModifiedTime:
        description: ファイルの更新時刻
        format: int64
        type: integer
  FileExportResponse:
    properties:
      exportedFileId:
        description: ファイル出力ID(リクエストにexport_mode=asyncを指定した場合）
        type: string
      exportedFilePath:
        description: 出力済みファイル取得パス(リクエストにexport_mode=asyncを付与した場合）
        type: string
      url:
        description: ファイルダウンロードURL(export_mode指定なし、もしくはexport_mode=syncの場合
        type: string
  FunnelConfiguration:
    properties:
      credentialsId:
        type: string
      destination:
        $ref: '#/definitions/FunnelDestination'
      enabled:
        default: false
        type: boolean
    type: object
  FunnelDestination:
    properties:
      provider:
        type: string
      resourceUrl:
        type: string
      service:
        type: string
    type: object
  Gadget:
    properties:
      attributes:
        type: object
      groupId:
        type: string
      id:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        type: object
      operatorId:
        type: string
      product_id:
        type: string
      serial_number:
        type: string
      status:
        enum:
        - active
        - terminated
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  GadgetRegistrationRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  GatePeer:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
      ownedByCustomer:
        type: boolean
  GenerateOperatorsAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
  GenerateTokenRequest:
    properties:
      tokenTimeoutSeconds:
        default: 86400
        description: |
          新しい API トークンの有効期限の長さ（秒単位）。
          指定しなければデフォルトは 86400 [秒]（24時間）。
          最大値は 172800 [秒]（48時間）。
        maximum: 172800
        type: integer
  GenerateTokenResponse:
    properties:
      token:
        type: string
    required:
    - token
  GenerateUserAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
  GetBillingHistoryResponse:
    properties:
      billList:
        description: 月ごとの利用料リスト
        items:
          $ref: '#/definitions/MonthlyBill'
        type: array
  GetDefaultPermissionsResponse:
    properties:
      defaultPermissions:
        type: string
  GetExportedFileResponse:
    properties:
      status:
        description: ファイル出力ステータス
        enum:
        - processing
        - exported
        - failed
        type: string
      url:
        description: ファイルダウンロードURL
        type: string
  GetLatestBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      lastEvaluatedTime:
        description: 利用額計算を実施した時間
        example: yyyyMMddHHmmss
        type: string
  GetOperatorResponse:
    properties:
      createDate:
        type: string
      description:
        type: string
      email:
        type: string
      operatorId:
        type: string
      rootOperatorId:
        type: string
      updateDate:
        type: string
    required:
    - createDate
    - description
    - email
    - operatorId
    - rootOperatorId
    - updateDate
  GetOrderResponse:
    properties:
      email:
        description: メールアドレス
        type: string
      orderDateTime:
        description: 発注日時
        example: yyyyMMddHHmmss
        type: string
      orderId:
        description: 発注ID
        type: string
      orderItemList:
        description: 発注商品リスト
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      orderStatus:
        description: 発注ステータス
        enum:
        - ordering
        - ordered
        - kitting
        - shipped
        - received
        - cancelling
        - cancelled
        - failed
        type: string
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
        description: 発送先
      shippingAddressId:
        description: 商品発送先ID
        type: string
      shippingCost:
        description: 配送料
        format: double
        type: number
      shippingLabelNumber:
        description: 宅配便送り状番号
        type: string
      taxAmount:
        description: 消費税
        format: double
        type: number
      totalAmount:
        description: 合計金額
        format: double
        type: number
  GetPaymentMethodResult:
    properties:
      errorCode:
        description: エラーコード（支払い情報が無効な場合のみ）
        enum:
        - success
        - processing
        - invalid_request
        - invalid_number
        - incorrect_number
        - invalid_name
        - invalid_expiry_month
        - invalid_expiry_year
        - invalid_expiry
        - incorrect_expiry
        - invalid_cvc
        - incorrect_cvc
        - card_declined
        - missing
        - processing_error
        type: string
      errorMessage:
        description: エラーメッセージ（支払い情報が無効な場合のみ
        type: string
      properties:
        description: 支払い情報
        type: string
      providerType:
        description: 課金プロバイダ種別
        enum:
        - WebPay
        type: string
      updateDate:
        description: 登録日
        example: yyyyMMddHHmmss
        type: string
  GetPaymentTransactionResult:
    properties:
      amount:
        $ref: '#/definitions/PaymentAmount'
        description: 課金額
      description:
        $ref: '#/definitions/PaymentDescription'
        description: 課金内容詳細
      message:
        description: メッセージ
        type: string
      messageCode:
        description: メッセージコード
        enum:
        - success
        - processing
        - invalid_request
        - invalid_number
        - incorrect_number
        - invalid_name
        - invalid_expiry_month
        - invalid_expiry_year
        - invalid_expiry
        - incorrect_expiry
        - invalid_cvc
        - incorrect_cvc
        - card_declined
        - missing
        - processing_error
        type: string
      status:
        description: ステータス
        enum:
        - success
        - error
        type: string
  GetShippingAddressResponse:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      department:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      shippingAddressId:
        description: 配送先ID
        type: string
      shippingArea:
        description: 配送先エリア
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
    - addressLine1
    - city
    - phoneNumber
    - shippingAddressId
    - shippingArea
    - state
    - zipCode
  GetUserPasswordResponse:
    properties:
      hasPassword:
        type: boolean
  GetUserPermissionResponse:
    properties:
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  GetVolumeDiscountResponse:
    properties:
      contractDateTime:
        description: 契約日時
        example: yyyyMMddHHmmss
        type: string
      contractId:
        description: 契約ID
        type: string
      contractTermMonth:
        description: 契約月数
        format: int32
        type: integer
      endDate:
        description: 適用終了日
        example: yyyyMMdd
        type: string
      initialCost:
        description: 初期費用
        format: double
        type: number
      quantity:
        description: 数量
        format: int32
        type: integer
      startDate:
        description: 適用開始日
        example: yyyyMMdd
        type: string
      status:
        description: ステータス
        enum:
        - active
        - expired
        type: string
      unitPrice:
        description: 単価
        format: double
        type: number
      volumeDiscountPaymentType:
        description: お支払い方法
        enum:
        - PREPAYMENT
        - MONTHLY
        type: string
      volumeDiscountType:
        description: 料金計算方法
        enum:
        - SORACOM_AIR_BASIC_CHARGE
        - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
  Group:
    properties:
      configuration:
        $ref: '#/definitions/Map'
      createdTime:
        format: int64
        type: integer
      groupId:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
  GroupConfigurationUpdateRequest:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
  HarvestExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
  ImeiLock:
    properties:
      imei:
        type: string
  IpAddressMapEntry:
    properties:
      ipAddress:
        type: string
      key:
        type: string
      type:
        enum:
        - static
        - dynamic
        - customerGatePeer
        - gatePeer
        type: string
  IssueEmailChangeTokenRequest:
    properties:
      email:
        type: string
    required:
    - email
  IssuePasswordResetTokenRequest:
    properties:
      email:
        type: string
    required:
    - email
  IssueSubscriberTransferTokenRequest:
    properties:
      transferDestinationOperatorEmail:
        description: 移管先オペレーターEmail
        type: string
      transferDestinationOperatorId:
        description: 移管先オペレーターID
        type: string
      transferImsi:
        description: 移管するIMSIリスト
        items:
          type: string
        type: array
    required:
    - transferDestinationOperatorEmail
    - transferDestinationOperatorId
    - transferImsi
  IssueSubscriberTransferTokenResponse:
    properties:
      token:
        description: トークン
        type: string
    required:
    - token
  JunctionInspectionConfiguration:
    properties:
      enabled:
        default: false
        type: boolean
      report:
        $ref: '#/definitions/FunnelConfiguration'
    type: object
  JunctionMirroringConfiguration:
    properties:
      peers:
        additionalProperties:
          $ref: '#/definitions/JunctionMirroringPeer'
        type: object
    type: object
  JunctionMirroringPeer:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      ipAddress:
        type: string
      protocol:
        enum:
        - gre
        type: string
    type: object
  JunctionRedirectionConfiguration:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      gateway:
        type: string
    type: object
  LagoonDashboardPermissionsUpdatingRequest:
    properties:
      permissions:
        items:
          properties:
            permission:
              type: string
            userId:
              format: int64
              type: integer
        type: array
    type: object
  LagoonLicensePackStatusResponse:
    properties:
      licensePackName:
        type: string
      quantity:
        format: int32
        type: integer
    type: object
  LagoonLicensePacksUpdatingRequest:
    properties:
      licensePackQuantities:
        items:
          properties:
            desiredQuantity:
              format: int32
              type: integer
            licensePackName:
              type: string
        type: array
    type: object
  LagoonPlanChangingRequest:
    properties:
      plan:
        enum:
        - maker
        - pro
        - free
        type: string
    type: object
  LagoonRegistrationRequest:
    properties:
      plan:
        enum:
        - maker
        type: string
      userPassword:
        description: This password is used by the initial user's login.
        type: string
    type: object
  LagoonRegistrationResponse:
    properties:
      lagoonUserEmail:
        description: This email address is used on login with the initial user.
        type: string
    type: object
  LagoonUser:
    properties:
      email:
        description: This value used on login.
        type: string
      id:
        type: number
      lastSeenAt:
        description: The last login datetime.
        type: string
      lastSeenAtAge:
        description: The last login datetime as age.
        type: string
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
    type: object
  LagoonUserCreationRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
      userEmail:
        type: string
      userPassword:
        type: string
    type: object
  LagoonUserCreationResponse:
    properties:
      id:
        description: Lagoon user ID assigned to the created user.
        type: integer
    type: object
  LagoonUserEmailUpdatingRequest:
    properties:
      userEmail:
        type: string
    type: object
  LagoonUserPasswordUpdatingRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
      userEmail:
        type: string
    type: object
  LagoonUserPermissionUpdatingRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
        - Viewer
        - Editor
        type: string
    type: object
  LastSeen:
    properties:
      rssi:
        format: int32
        type: integer
      snr:
        format: int32
        type: integer
      time:
        format: date-time
        type: string
    type: object
  ListCouponResponse:
    properties:
      couponList:
        description: クーポンリスト
        items:
          $ref: '#/definitions/CouponResponse'
        type: array
  ListOrderResponse:
    properties:
      orderList:
        description: 発注リスト
        items:
          $ref: '#/definitions/GetOrderResponse'
        type: array
  ListOrderedSubscriberResponse:
    properties:
      orderedSubscriberList:
        description: 発注したSIMのリスト
        items:
          $ref: '#/definitions/OrderedSubscriber'
        type: array
  ListPaymentStatementResponse:
    properties:
      paymentStatementsList:
        description: 課金明細リスト
        items:
          $ref: '#/definitions/PaymentStatementResponse'
        type: array
  ListProductResponse:
    properties:
      productList:
        items:
          $ref: '#/definitions/ProductModel'
        type: array
      shippingCostList:
        items:
          $ref: '#/definitions/ShippingCostModel'
        type: array
  ListRolesResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
  ListShippingAddressResponse:
    properties:
      shippingAddresses:
        items:
          $ref: '#/definitions/GetShippingAddressResponse'
        type: array
  ListSubOperatorsResponse:
    properties:
      operatorId:
        type: string
  ListVolumeDiscountResponse:
    properties:
      volumeDiscountList:
        description: 契約済み長期利用割引リスト
        items:
          $ref: '#/definitions/GetVolumeDiscountResponse'
        type: array
  LogEntry:
    properties:
      body:
        type: object
      resourceId:
        type: string
      resourceType:
        enum:
        - Subscriber
        - EventHandler
        - VirtualPrivateGateway
        type: string
      service:
        enum:
        - Air
        - Beam
        - Canal
        - Direct
        - Door
        - Endorse
        - Funnel
        - Gate
        type: string
      time:
        format: int64
        type: integer
  LoraData:
    properties:
      data:
        type: string
      fPort:
        default: 2
        type: integer
  LoraDevice:
    properties:
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
        - active
        - ready
        - terminated
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraGateway:
    properties:
      address:
        type: string
      createdTime:
        format: date-time
        type: string
      gatewayId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      owned:
        default: false
        type: boolean
      status:
        enum:
        - active
        - terminated
        - ready
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraNetworkSet:
    properties:
      allowedOperators:
        items:
          type: string
        type: array
        uniqueItems: true
      createdTime:
        format: date-time
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      operatorId:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  MFAAuthenticationRequest:
    properties:
      mfaOTPCode:
        type: string
  MFAIssueRevokingTokenRequest:
    properties:
      email:
        type: string
      password:
        type: string
  MFARevokingTokenVerifyRequest:
    properties:
      backupCode:
        type: string
      email:
        type: string
      password:
        type: string
      token:
        type: string
  MFAStatusOfUseResponse:
    properties:
      status:
        type: string
  Map:
    additionalProperties:
      type: string
    type: object
  Map«string,DataTrafficStats»:
    additionalProperties:
      $ref: '#/definitions/DataTrafficStats'
    type: object
  Map«string,string»:
    additionalProperties:
      type: string
    type: object
  MonthlyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      paymentStatus:
        description: 直近の課金ステータス
        enum:
        - lessThanMinimumCharge
        - paying
        - paid
        - refunding
        - refunded
        - fail
        type: string
      paymentTransactionId:
        description: 課金詳細取得用のID
        type: string
      yearMonth:
        description: 年月
        example: yyyyMM
        type: string
  NapterAuditLogDirection:
    properties:
      destinationIPAddress:
        type: string
      destinationPort:
        format: int64
        type: integer
      sourceIPAddress:
        type: string
      sourcePort:
        format: int64
        type: integer
  NapterAuditLogEntry:
    properties:
      connectionId:
        type: string
      createdAt:
        format: int64
        type: integer
      direction:
        $ref: '#/definitions/NapterAuditLogDirection'
      imsi:
        type: string
      isTLS:
        type: boolean
      operatorId:
        type: string
      type:
        enum:
        - ACCESS
        - DENIED
        - CONNECTED
        - CLOSED
        - REFUSED
        type: string
  NapterAuditLogsExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
  ObjectInstance:
    properties:
      id:
        format: int32
        type: integer
      observed:
        default: false
        type: boolean
      resources:
        additionalProperties:
          $ref: '#/definitions/ResourceInstance'
        type: object
    type: object
  OpenGateRequest:
    properties:
      privacySeparatorEnabled:
        default: false
        type: boolean
      vxlanId:
        default: 10
        format: int32
        type: integer
  OperatorMFAVerifyingResponse:
    properties:
      backupCodes:
        items:
          type: string
        type: array
  OrderItemModel:
    properties:
      productCode:
        description: 商品コード
        type: string
      quantity:
        description: 購入数
        format: int32
        type: integer
  OrderedSubscriber:
    properties:
      imsi:
        description: IMSI
        type: string
      msisdn:
        description: MSISDN
        type: string
      serialNumber:
        description: serialNumber
        type: string
  PaymentAmount:
    properties:
      taxAmount:
        format: double
        type: number
      totalAmount:
        format: double
        type: number
  PaymentDescription:
    properties:
      description:
        type: string
      itemList:
        items:
          type: string
        type: array
  PaymentStatementResponse:
    properties:
      amount:
        description: 金額
        format: double
        type: number
      paymentDateTime:
        description: 課金日時
        format: int64
        type: integer
      paymentInstrument:
        description: 支払情報
        type: string
      paymentMethod:
        description: 支払方法
        type: string
      paymentStatementId:
        description: 課金明細ID
        type: string
      paymentStatementInfo:
        description: 支払内容
        type: string
  PortMapping:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        type: number
      endpoint:
        type: string
      hostname:
        type: string
      ipAddress:
        type: string
      port:
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        type: boolean
  PortMappingDestination:
    properties:
      imsi:
        type: string
      port:
        type: number
    required:
    - imsi
    - port
  PortMappingSource:
    properties:
      ipRanges:
        items:
          type: string
        type: array
  ProductModel:
    properties:
      count:
        description: 商品販売個数
        format: double
        type: number
      maxQuantity:
        description: 最大購入数量
        format: int32
        type: integer
      price:
        description: 商品販売個数ごとの価格
        format: double
        type: number
      productCode:
        description: 商品コード
        type: string
      productInfoURL:
        description: 商品説明ページURL
        type: string
      productName:
        description: 商品名
        type: string
      productType:
        description: 商品種別
        enum:
        - sim
        - network_module
        type: string
      properties:
        additionalProperties:
          type: string
        description: 商品プロパティ
        type: object
  PutIpAddressMapEntryRequest:
    properties:
      ipAddress:
        type: string
      key:
        type: string
    required:
    - key
    - ipAddress
  RegisterGatePeerRequest:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
    required:
    - outerIpAddress
  RegisterLoraDeviceRequest:
    properties:
      groupId:
        type: string
      registrationSecret:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  RegisterOperatorsRequest:
    properties:
      email:
        type: string
      password:
        description: パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z)
          を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
        type: string
    required:
    - email
    - password
  RegisterPayerInformationModel:
    properties:
      companyName:
        description: 企業名
        type: string
      department:
        description: 部署
        type: string
      fullName:
        description: 氏名
        type: string
  RegisterSubscribersRequest:
    properties:
      groupId:
        type: string
      registrationSecret:
        type: string
      tags:
        items:
          $ref: '#/definitions/TagUpdateRequest'
        type: array
    required:
    - registrationSecret
  ResourceInstance:
    properties:
      description:
        type: string
      id:
        format: int32
        type: integer
      mandatory:
        default: false
        type: boolean
      multiple:
        default: false
        type: boolean
      name:
        type: string
      observed:
        default: false
        type: boolean
      operations:
        enum:
        - NONE
        - R
        - W
        - RW
        - E
        - RE
        - WE
        - RWE
        type: string
      rangeEnumeration:
        type: string
      type:
        enum:
        - STRING
        - INTEGER
        - FLOAT
        - BOOLEAN
        - OPAQUE
        - TIME
        - OBJLNK
        type: string
      units:
        type: string
      value:
        type: object
      values:
        type: object
    type: object
  RoleResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
  RoutingFilterEntry:
    properties:
      action:
        description: Whether to allow or deny the outbound packets with a destination
          in the specified range
        enum:
        - allow
        - deny
        type: string
      ipRange:
        description: IPv4 address range in CIDR format, e.g. a.b.c.d/x
        type: string
    required:
    - action
    - ipRange
  RuleConfig:
    properties:
      properties:
        $ref: '#/definitions/RuleConfigProperty'
      type:
        enum:
        - DailyTrafficRule
        - MonthlyTrafficRule
        - CumulativeTrafficRule
        - DailyTotalTrafficRule
        - MonthlyTotalTrafficRule
        - SubscriberStatusAttributeRule
        - SubscriberSpeedClassAttributeRule
        - SubscriberExpiredRule
        type: string
    required:
    - properties
    - type
  RuleConfigProperty:
    properties:
      inactiveTimeoutDateConst:
        enum:
        - IMMEDIATELY
        - BEGINNING_OF_NEXT_MONTH
        - BEGINNING_OF_NEXT_DAY
        - AFTER_ONE_DAY
        - NEVER
        type: string
      limitTotalTrafficMegaByte:
        type: integer
      targetSpeedClass:
        description: SubscriberSpeedClassAttributeRule の時のみ有効
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
      targetStatus:
        description: SubscriberStatusAttributeRule の時のみ有効
        enum:
        - ready
        - active
        - inactive
        - suspended
        - terminated
        type: string
    required:
    - limitTotalTrafficMegaByte
  SessionEvent:
    properties:
      apn:
        type: string
      dns0:
        type: string
      dns1:
        type: string
      event:
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        type: string
      imsi:
        type: string
      operatorId:
        type: string
      time:
        format: int64
        type: integer
      ueIpAddress:
        type: string
      vpgId:
        type: string
  SessionStatus:
    properties:
      dnsServers:
        items:
          type: string
        type: array
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        type: string
      lastUpdatedAt:
        format: int64
        type: integer
      online:
        type: boolean
      ueIpAddress:
        type: string
      vpgId:
        type: string
  SetDeviceObjectModelScopeRequest:
    properties:
      scope:
        type: string
    type: object
  SetGroupRequest:
    properties:
      groupId:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
  SetImeiLockRequest:
    properties:
      imei:
        type: string
  SetNetworkSetRequest:
    properties:
      networkSetId:
        type: string
    type: object
  SetUserPermissionRequest:
    properties:
      description:
        type: string
      permission:
        description: PermissionのJSON
        type: string
    required:
    - permission
  ShippingAddressModel:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      department:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
    - city
    - state
    - zipCode
  ShippingCostModel:
    description: 発送料
    properties:
      shippingArea:
        description: 発送先エリア
        enum:
        - hokkaido
        - kita_tohoku
        - minami_tohoku
        - kanto
        - shinetsu
        - chubu
        - hokuriku
        - kansai
        - chugoku
        - shikoku
        - kyushu
        - okinawa
        type: string
      shippingAreaName:
        description: 発送先エリア名称
        type: string
      shippingCost:
        description: 送料
        format: double
        type: number
      size:
        description: 発送サイズ
        format: int32
        type: integer
  SigfoxData:
    properties:
      data:
        type: string
  SigfoxDevice:
    properties:
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
        - active
        - ready
        - terminated
        - instock
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      terminationEnabled:
        default: false
        type: boolean
    type: object
  SigfoxRegistrationRequest:
    properties:
      registrationSecret:
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  SmsForwardingReport:
    properties:
      messageId:
        type: string
    type: object
  SmsForwardingRequest:
    properties:
      encodingType:
        default: 2
        description: メッセージ本体のエンコーディングタイプ。`1` はメッセージ本体を `DCS_7BIT` で送信することを示す。このエンコーディングでは1バイト文字しか送ることができない。`2`
          は `DCS_UCS2` を示す。このエンコーディングではマルチバイト文字がサポートされる。encodingType が省略された場合のデフォルトは
          `2` (`DCS_UCS2`)。
        type: integer
      payload:
        type: string
    type: object
  SoracomBeamStats:
    properties:
      count:
        format: int64
        type: integer
  Subscriber:
    properties:
      apn:
        type: string
      createdAt:
        format: int64
        type: integer
      expiredAt:
        format: int64
        type: integer
      expiryAction:
        type: string
      groupId:
        type: string
      iccid:
        type: string
      imeiLock:
        $ref: '#/definitions/ImeiLock'
      imsi:
        type: string
      ipAddress:
        type: string
      lastModifiedAt:
        format: int64
        type: integer
      moduleType:
        type: string
      msisdn:
        type: string
      operatorId:
        type: string
      plan:
        type: integer
      serialNumber:
        type: string
      sessionStatus:
        $ref: '#/definitions/SessionStatus'
      speedClass:
        type: string
      status:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
      terminationEnabled:
        type: boolean
  SupportTokenResponse:
    properties:
      token:
        type: string
    required:
    - token
  TagSet:
    additionalProperties:
      type: string
    example:
      tagName1: tagValue1
      tagName2: tagValue2...
    type: object
  TagUpdateRequest:
    properties:
      tagName:
        type: string
      tagValue:
        type: string
    required:
    - tagName
    - tagValue
    type: object
  TrafficVolumeRanking:
    properties:
      imsi:
        type: string
      trafficVolume:
        format: int64
        type: integer
    type: object
  UpdateDefaultPermissionsRequest:
    properties:
      permissions:
        description: 権限のJSON文字列
        type: string
    required:
    - permissions
  UpdateEventHandlerRequest:
    $ref: '#/definitions/CreateEventHandlerRequest'
  UpdatePasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
    - currentPassword
    - newPassword
  UpdatePermissionRequest:
    properties:
      operatorId:
        type: string
    type: object
  UpdateSpeedClassRequest:
    properties:
      speedClass:
        enum:
        - s1.minimum
        - s1.slow
        - s1.standard
        - s1.fast
        type: string
    required:
    - speedClass
  UpdateUserRequest:
    properties:
      description:
        type: string
  UserDetailResponse:
    properties:
      authKeyList:
        items:
          $ref: '#/definitions/AuthKeyResponse'
        type: array
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      hasPassword:
        type: boolean
      permission:
        type: string
      roleList:
        items:
          $ref: '#/definitions/ListRolesResponse'
        type: array
      updateDateTime:
        format: int64
        type: integer
      userName:
        type: string
  VerifyEmailChangeTokenRequest:
    properties:
      token:
        type: string
    required:
    - token
  VerifyOperatorsRequest:
    properties:
      token:
        type: string
    required:
    - token
  VerifyPasswordResetTokenRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
  VerifySubscriberTransferTokenRequest:
    properties:
      token:
        description: トークン
        type: string
    required:
    - token
  VerifySubscriberTransferTokenResponse:
    properties:
      transferredImsi:
        description: 移管されたIMSIリスト
        items:
          type: string
        type: array
    required:
    - transferredImsi
  VirtualPrivateGateway:
    properties:
      createdTime:
        format: int64
        type: integer
      id:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
      primaryServiceName:
        enum:
        - Canal
        - Direct
        - Door
        - Gate
        type: string
      status:
        type: string
      tags:
        $ref: '#/definitions/TagSet'
      type:
        enum:
        - 12
        - 13
        type: integer
      useInternetGateway:
        type: boolean
      virtualInterfaces:
        $ref: '#/definitions/Map'
      vpcPeeringConnections:
        $ref: '#/definitions/Map'
  VpcPeeringConnection:
    properties:
      destinationCidrBlock:
        type: string
      id:
        type: string
      peerOwnerId:
        type: string
      peerVpcId:
        type: string
host: api.soracom.io
info:
  description: SORACOM API v1
  title: SORACOM API
  version: VERSION_PLACEHOLDER
paths:
  /audit_logs/napter:
    get:
      description: SORACOM Napterの監査ログを新しいものから順に取得する
      operationId: getNapterAuditLogs
      parameters:
      - description: ログ取得対象のリソースのタイプ
        enum:
        - Subscriber
        in: query
        name: resource_type
        required: false
        type: string
      - description: ログ取得対象のリソースのID
        in: query
        name: resource_id
        required: false
        type: string
      - description: ログ取得対象の期間の始まり (unixtime millis)
        in: query
        name: from
        required: false
        type: integer
      - description: ログ取得対象の期間の終わり (unixtime millis)
        in: query
        name: to
        required: false
        type: integer
      - description: 取得するログエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Napter監査ログのエントリのリスト
          schema:
            items:
              $ref: '#/definitions/NapterAuditLogEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Napterの監査ログを取得する
      tags:
      - AuditLog
      x-soracom-cli:
      - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      consumes:
      - application/json
      description: API アクセスの認証を行います。ルートアカウントで認証する場合は email と password、認証キーでの認証の場合は
        authKeyId と authKey、SAM ユーザー認証の場合はoperatorId, userName, password をリクエストに含めてください。認証が成功した場合、API
        キーと API トークンが返されるので、以降の認証が必要なリクエスト時にはこの API キーと API トークンをヘッダーに付与してリクエストを行ってください。
      operationId: auth
      parameters:
      - description: 認証リクエスト
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 認証成功
          schema:
            $ref: '#/definitions/AuthResponse'
        "401":
          description: 認証失敗
      summary: API アクセスの認証を行い、API キーと API トークンを発行します。
      tags:
      - Auth
      x-soracom-cli:
      - auth
  /auth/password_reset_token/issue:
    post:
      consumes:
      - application/json
      description: パスワードをリセットするためのワンタイムトークンを生成して、オペレーターのメールアドレスに送付します。メールに記載されているトークンを取得し、/v1/auth/password_reset_token/verify
        API を呼び出して新しいパスワードを設定します。
      operationId: issuePasswordResetToken
      parameters:
      - description: email address
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/IssuePasswordResetTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: メールアドレスが正しくありません。
      summary: パスワードリセット用のトークンを発行します。
      tags:
      - Auth
      x-soracom-cli:
      - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      consumes:
      - application/json
      description: パスワードリセット用のトークンを検証し、検証に成功した場合オペレーターのパスワードを更新します。
      operationId: verifyPasswordResetToken
      parameters:
      - description: token, password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/VerifyPasswordResetTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: 不正なトークンが指定されました。
        "404":
          description: トークンの有効期限が切れています。
      summary: パスワードリセット用のトークンを検証し、パスワードを更新します。
      tags:
      - Auth
      x-soracom-cli:
      - auth verify-password-reset-token
  /bills:
    get:
      consumes:
      - application/json
      description: 過去の利用額履歴（無料利用枠などの割引適用後、税込）を返します。このAPIは月末締めをして確定した利用額のみ返します。
      operationId: getBillingHistory
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetBillingHistoryResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get billing history
      tags:
      - Billing
      x-soracom-cli:
      - bills list
  /bills/{yyyyMM}:
    get:
      consumes:
      - application/json
      description: 指定した月の利用額履歴（無料利用枠などの割引適用後、税込）を返します。このAPIは月末締めをして確定した利用額のみ返します。
      operationId: getBilling
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/MonthlyBill'
      security:
      - api_key: []
      - api_token: []
      summary: Get bill
      tags:
      - Billing
      x-soracom-cli:
      - bills get
  /bills/{yyyyMM}/daily:
    get:
      consumes:
      - application/json
      description: 指定した月の、日ごとの利用額明細を返します。このAPIは確定した利用額のみ返します。
      operationId: getBillingPerDay
      parameters:
      - description: year and month
        in: path
        name: yyyyMM
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/DailyBillResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get bill per day
      tags:
      - Billing
      x-soracom-cli:
      - bills get-daily
  /bills/{yyyyMM}/export:
    post:
      consumes:
      - application/json
      description: 指定月の利用額明細を返します。この明細には、日ごと,Subscrierごと,課金項目ごとの利用額が含まれます。
      operationId: exportBilling
      parameters:
      - description: yyyyMM
        in: path
        name: yyyyMM
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Output billing CSV file to S3
      tags:
      - Billing
      x-soracom-cli:
      - bills export
  /bills/latest:
    get:
      consumes:
      - application/json
      description: 無料利用枠などの割引適用後の、直近の利用額を返します。このAPIで取得した金額は請求確定前の金額になります。
      operationId: getLatestBilling
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetLatestBill'
      security:
      - api_key: []
      - api_token: []
      summary: Get latest bill
      tags:
      - Billing
      x-soracom-cli:
      - bills get-latest
  /bills/latest/export:
    post:
      consumes:
      - application/json
      description: 直近月の利用額明細を返します。この明細には、日ごと,Subscrierごと,課金項目ごとの利用額が含まれます。このAPIで取得した金額は請求確定前の金額になります。
      operationId: exportLatestBilling
      parameters:
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export latest billing CSV file to S3
      tags:
      - Billing
      x-soracom-cli:
      - bills export-latest
  /coupons:
    get:
      consumes:
      - application/json
      description: 現在登録されているクーポン一覧を返します。
      operationId: listCoupons
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListCouponResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List coupons.
      tags:
      - Payment
      x-soracom-cli:
      - coupons list
  /coupons/{coupon_code}/register:
    post:
      consumes:
      - application/json
      description: クーポンを登録します。
      operationId: registerCoupon
      parameters:
      - description: クーポンコード
        in: path
        name: coupon_code
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CouponResponse'
        "400":
          description: クーポンコードが無効であるか、クーポンコードの登録上限に達しています。
      security:
      - api_key: []
      - api_token: []
      summary: Register Coupon.
      tags:
      - Payment
      x-soracom-cli:
      - coupons register
  /credentials:
    get:
      consumes:
      - application/json
      description: 認証情報の一覧を返す。
      operationId: listCredentials
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CredentialsModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: 認証情報の表示
      tags:
      - Credential
      x-soracom-cli:
      - credentials list
  /credentials/{credentials_id}:
    delete:
      consumes:
      - application/json
      description: 認証情報を削除する。
      operationId: deleteCredential
      parameters:
      - description: Credentials ID
        in: path
        name: credentials_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: Deleted
        "404":
          description: Not Found
      security:
      - api_key: []
      - api_token: []
      summary: 認証情報の削除
      tags:
      - Credential
      x-soracom-cli:
      - credentials delete
    post:
      consumes:
      - application/json;charset=UTF-8
      description: 認証情報を新規作成する。
      operationId: createCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        type: string
      - description: credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      produces:
      - '*/*'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/CredentialsModel'
      security:
      - api_key: []
      - api_token: []
      summary: 認証情報の作成
      tags:
      - Credential
      x-soracom-cli:
      - credentials create
    put:
      consumes:
      - application/json;charset=UTF-8
      description: 認証情報を更新する。
      operationId: updateCredential
      parameters:
      - description: credentials_id
        in: path
        name: credentials_id
        required: true
        type: string
      - description: credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CredentialsModel'
        "400":
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）
      security:
      - api_key: []
      - api_token: []
      summary: 認証情報の更新
      tags:
      - Credential
      x-soracom-cli:
      - credentials update
  /data/{resource_type}/{resource_id}:
    get:
      description: 指定されたデータ送信元リソースから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getDataEntries
      parameters:
      - description: データ送信元リソースのType
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: データ送信元リソースのID
        in: path
        name: resource_id
        required: true
        type: string
      - description: 取得対象の期間の始まり (unixtime ミリ秒単位)
        in: query
        name: from
        required: false
        type: integer
      - description: 取得対象の期間の終わり (unixtime ミリ秒単位)
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データエントリのリスト
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a resource
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /data/{resource_type}/{resource_id}/{time}:
    delete:
      description: リソースIDとタイムスタンプで指定されたデータエントリを削除する。
      operationId: deleteDataEntry
      parameters:
      - description: データ送信元リソースのType
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: データ送信元リソースのID
        in: path
        name: resource_id
        required: true
        type: string
      - description: 削除対象のデータエントリのタイムスタンプ (unixtime ミリ秒単位)
        in: path
        name: time
        required: true
        type: integer
      responses:
        204:
          description: データエントリは正常に削除されました
      security:
      - api_key: []
      - api_token: []
      summary: Deletes a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data delete-entry
    get:
      description: リソースIDとタイムスタンプで指定されたデータエントリを取得する。
      operationId: getDataEntry
      parameters:
      - description: データ送信元リソースのType
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: path
        name: resource_type
        required: true
        type: string
      - description: データ送信元リソースのID
        in: path
        name: resource_id
        required: true
        type: string
      - description: 取得対象のデータエントリのタイムスタンプ (unixtime ミリ秒単位)
        in: path
        name: time
        required: true
        type: integer
      responses:
        200:
          description: The data entry specified with resource ID and timestamp
        204:
          description: リソースIDとタイムスタンプで特定されるデータエントリ
        404:
          description: 対象のデータエントリが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Gets a data entry
      tags:
      - DataEntry
      x-soracom-cli:
      - data get-entry
  /data/resources:
    get:
      description: 当該オペレータに属するデータ送信元リソースのリストを返す。データ送信元リソースの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listDataSourceResources
      parameters:
      - description: 対象のリソースType
        enum:
        - Subscriber
        - LoraDevice
        - SubscriberIdentityModule
        - SigfoxDevice
        - Device
        in: query
        name: resource_type
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータ送信元リソースのID。このパラメータを指定することで次のデータ送信元リソース以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データ送信元リソースのリスト
          schema:
            items:
              $ref: '#/definitions/DataSourceResourceMetadata'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get the list of data source resources
      tags:
      - DataEntry
      x-soracom-cli:
      - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /device_object_models:
    get:
      description: デバイスオブジェクトモデルのリストを返します。
      operationId: listDeviceObjectModels
      parameters:
      - default: "null"
        description: 現ページで取得した最後のデバイスオブジェクトモデルのID。このパラメータを指定することで次のデバイスオブジェクトモデル以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: -1
        description: 取得する結果の上限数
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      responses:
        "200":
          description: デバイスオブジェクトモデル定義のリスト
          schema:
            items:
              $ref: '#/definitions/DeviceObjectModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: デバイスオブジェクトモデルのリストを返します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      - application/xml
      description: 新しいデバイスオブジェクトモデルを作成します。
      operationId: createDeviceObjectModel
      parameters:
      - description: XML か JSON により表現されたデバイスオブジェクトモデルの表記。
        in: body
        name: object_model_definition
        required: true
        schema:
          $ref: '#/definitions/DeviceObjectModel'
      responses:
        "200":
          description: デバイスオブジェクトモデルが作成されました
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
      security:
      - api_key: []
      - api_token: []
      summary: 新しいデバイスオブジェクトモデルを作成します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices create-object-model
  /device_object_models/{model_id}:
    delete:
      consumes:
      - text/plain
      description: 対象のデバイスオブジェクトモデルを削除します。
      operationId: deleteDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "204":
          description: 削除に成功しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 対象のデバイスオブジェクトモデルを削除します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices delete-object-model
    get:
      consumes:
      - text/plain
      description: デバイスオブジェクトモデルを取得します。
      operationId: getDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルのID
        in: path
        name: model_id
        required: true
        type: string
      responses:
        "200":
          description: 取得したデバイスオブジェクトモデル
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: デバイスオブジェクトモデルを取得します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices get-object-model
    post:
      consumes:
      - application/json
      - application/xml
      description: デバイスオブジェクトモデルを更新します。
      operationId: updateDeviceObjectModel
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        type: string
      - description: XML か JSON により表現されたデバイスオブジェクトモデルの表記。
        in: body
        name: object_model_definition
        required: true
        schema:
          $ref: '#/definitions/DeviceObjectModel'
      responses:
        "200":
          description: デバイスオブジェクトモデルが作成されました
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "400":
          description: デバイスオブジェクトモデル定義の解析に失敗しました
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: デバイスオブジェクトモデルを更新します。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices update-object-model
  /device_object_models/{model_id}/set_scope:
    post:
      consumes:
      - application/json
      description: 対象のデバイスオブジェクトモデルが適用される Scope をセットします。
      operationId: setDeviceObjectModelScope
      parameters:
      - description: 対象のデバイスオブジェクトモデルの ID
        in: path
        name: model_id
        required: true
        type: string
      - description: 対象のデバイスオブジェクトモデルにセットする Scope の値
        in: body
        name: scope
        required: true
        schema:
          $ref: '#/definitions/SetDeviceObjectModelScopeRequest'
      responses:
        "200":
          description: デバイスオブジェクトモデルの Scope がセットされました
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        "404":
          description: デバイスオブジェクトモデルが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 対象のデバイスオブジェクトモデルが適用される Scope をセットします。
      tags:
      - DeviceObjectModel
      x-soracom-cli:
      - devices set-object-model-scope
  /devices:
    get:
      description: デバイスのリストを取得します。
      operationId: listDevices
      parameters:
      - default: "null"
        description: タグの名前
        in: query
        name: tag_name
        required: false
        type: string
      - default: "null"
        description: タグの値
        in: query
        name: tag_value
        required: false
        type: string
      - default: "null"
        description: タグの検索条件 (exact | prefix)
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - default: "null"
        description: 現ページで取得した最後のデバイスの ID。このパラメータを指定することで次のデバイスから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: -1
        description: 取得するデバイス数の上限
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      responses:
        "200":
          description: デバイスのリスト
          schema:
            items:
              $ref: '#/definitions/Device'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: デバイスのリストを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      description: 新しいデバイスを作成します。
      operationId: createDevice
      parameters:
      - description: 作成するデバイス
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        "201":
          description: 作成されたデバイス
          schema:
            $ref: '#/definitions/Device'
      security:
      - api_key: []
      - api_token: []
      summary: 新しいデバイスを作成します。
      tags:
      - Device
      x-soracom-cli:
      - devices create
  /devices/{device_id}:
    delete:
      description: デバイスを削除します。
      operationId: deleteDevice
      parameters:
      - description: 削除するデバイス
        in: path
        name: device_id
        required: true
        type: string
      responses:
        "204":
          description: デバイスが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: デバイスを削除します。
      tags:
      - Device
      x-soracom-cli:
      - devices delete
    get:
      description: 指定されたデバイス ID のデバイスを取得します。
      operationId: getDevice
      parameters:
      - description: デバイス ID
        in: path
        name: device_id
        required: true
        type: string
      - default: false
        description: モデル情報を取得するかどうか
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: 指定されたデバイス ID のデバイス
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: 指定されたデバイス ID のデバイスを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices get
  /devices/{device_id}/{object}/{instance}:
    get:
      description: デバイスの Instance 以下のすべての Resource を Read します。
      operationId: readDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - default: false
        description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: 指定されたObject Instance下のResourceのリスト
          schema:
            $ref: '#/definitions/ObjectInstance'
        "400":
          description: 指定したResourceがReadをサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定したResourceが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: デバイスの Instance 以下のすべての Resource を Read します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-instance
  /devices/{device_id}/{object}/{instance}/{resource}:
    get:
      description: 指定されたデバイスの Resource を Read します。
      operationId: readDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - default: false
        description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: Resource
          schema:
            $ref: '#/definitions/ResourceInstance'
        "400":
          description: 指定したResourceがReadをサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定したResourceが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 指定されたデバイスの Resource を Read します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-resource
    put:
      description: デバイスの Resource に値を Write します。
      operationId: writeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - description: リソースにセットする値
        in: body
        name: value
        required: true
        schema:
          properties:
            value:
              type: string
          type: object
      responses:
        "202":
          description: Resourceの更新を受け付けました
        "400":
          description: 指定したResourceがWriteをサポートしていません （デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: 指定したResourceが見つかりません
        "500":
          description: デバイスから更新エラーの応答がありました。(デバイスからLwM2M応答メッセージがエラーの場合が含まれます。デバイスからのエラーメッセージはレスポンスの
            `message` に含まれます。)
      security:
      - api_key: []
      - api_token: []
      summary: デバイスの Resource に値を Write します。
      tags:
      - Device
      x-soracom-cli:
      - devices put-resource
  /devices/{device_id}/{object}/{instance}/{resource}/execute:
    post:
      description: デバイスの Resource を Execute します。
      operationId: executeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - description: Resourceを実行する際に渡す引数文字列
        in: body
        name: arg
        required: false
        schema:
          properties:
            value:
              type: string
          type: object
      responses:
        "202":
          description: Resourceの実行を受け付けました
        "400":
          description: ResourceはExecute操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resourceが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: デバイスの Resource を Execute します。
      tags:
      - Device
      x-soracom-cli:
      - devices execute-resource
  /devices/{device_id}/{object}/{instance}/{resource}/observe:
    post:
      description: 指定されたデバイスの Resource の Observe を開始します。Observe を開始すると、デバイス側で値に変化があったらサーバー側に通知するようになります。
      operationId: observeDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      - default: false
        description: モデル情報を含めるかどうか
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "200":
          description: Resource の Observe を開始しました
        "202":
          description: Observation started.
        "400":
          description: Resource は Read 操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 指定されたデバイスの Resource の Observe を開始します。
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resource
  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:
    post:
      description: デバイスの Resource の Observe を停止します。
      operationId: unobserveDeviceResource
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource
        required: true
        type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resourceが見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: デバイスの Resource の Observe を停止します。
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resource
  /devices/{device_id}/{object}/{instance}/observe:
    post:
      description: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始します。
      operationId: observeDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      - default: false
        description: モデルの情報を追加するか否か
        in: query
        name: model
        required: false
        type: boolean
      responses:
        "202":
          description: Observe を開始しました
        "400":
          description: Resource は Read 操作をサポートしていません（デバイスがオフラインなど接続エラーの場合を含みます）
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 指定されたデバイスの Object Instance 下の Resource 全体の Observe を開始します。
      tags:
      - Device
      x-soracom-cli:
      - devices observe-resources
  /devices/{device_id}/{object}/{instance}/unobserve:
    post:
      description: 指定されたデバイスの Object Instance への Observe を停止します。
      operationId: unobserveDeviceResources
      parameters:
      - description: 対象となるデバイス
        in: path
        name: device_id
        required: true
        type: string
      - description: Object ID
        in: path
        name: object
        required: true
        type: string
      - description: Instance ID
        in: path
        name: instance
        required: true
        type: string
      responses:
        "204":
          description: Observe を停止しました
        "404":
          description: Resource が見つかりません
      security:
      - api_key: []
      - api_token: []
      summary: 指定されたデバイスの Object Instance への Observe を停止します。
      tags:
      - Device
      x-soracom-cli:
      - devices unobserve-resources
  /devices/{device_id}/data:
    get:
      description: 指定されたデバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getDataFromDevice
      parameters:
      - description: データ取得対象のデバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 取得対象の期間の始まり (unixtime ミリ秒単位)
        in: query
        name: from
        required: false
        type: integer
      - description: 取得対象の期間の終わり (unixtime ミリ秒単位)
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データエントリのリスト
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: デバイスから送信されたデータを取得します。
      tags:
      - Device
      x-soracom-cli:
      - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /devices/{device_id}/set_group:
    post:
      description: デバイスをグループに参加させます。
      operationId: setDeviceGroup
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        type: string
      - in: body
        name: groupId
        schema:
          properties:
            groupId:
              type: string
          type: object
      responses:
        "200":
          description: デバイスが更新された
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: デバイスをグループに参加させます。
      tags:
      - Device
      x-soracom-cli:
      - devices set-group
  /devices/{device_id}/tags:
    put:
      description: デバイスのタグを更新します。
      operationId: putDeviceTags
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        type: string
      responses:
        "200":
          description: デバイスが更新された
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: デバイスのタグを更新します。
      tags:
      - Device
      x-soracom-cli:
      - devices put-device-tags
  /devices/{device_id}/tags/{tag_name}:
    delete:
      description: デバイスのタグを削除します。
      operationId: deleteDeviceTag
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        type: string
      - description: 削除するタグの名前
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        "204":
          description: タグが削除された
        "404":
          description: 指定されたデバイス ID を持つデバイス、もしくは指定されたタグが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: デバイスのタグを削除します。
      tags:
      - Device
      x-soracom-cli:
      - devices delete-device-tag
  /devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: デバイスをグループから外します。
      operationId: unsetDeviceGroup
      parameters:
      - description: 更新するデバイスのデバイス ID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: デバイスが更新された
          schema:
            $ref: '#/definitions/Device'
        "404":
          description: 指定されたデバイス ID を持つデバイスが見つからなかった
      security:
      - api_key: []
      - api_token: []
      summary: デバイスをグループから外します。
      tags:
      - Device
      x-soracom-cli:
      - devices unset-group
  /event_handlers:
    get:
      consumes:
      - application/json
      description: イベントハンドラの一覧を返す。
      operationId: listEventHandlers
      parameters:
      - description: target
        enum:
        - operator
        - imsi
        - tag
        - group
        in: query
        name: target
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Event Handlers
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list
    post:
      consumes:
      - application/json
      description: イベントハンドラを新規作成する。リクエストパラメータの指定方法; https://dev.soracom.io/en/docs/event_handler/
      operationId: createEventHandler
      parameters:
      - description: イベントハンドラの設定内容
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/CreateEventHandlerRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/EventHandlerModel'
      security:
      - api_key: []
      - api_token: []
      summary: Create Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers create
  /event_handlers/{handler_id}:
    delete:
      consumes:
      - application/json
      description: 指定されたイベントハンドラを削除する。
      operationId: deleteEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: OK.
        "404":
          description: EventHandler not found.
      security:
      - api_key: []
      - api_token: []
      summary: Delete Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers delete
    get:
      consumes:
      - application/json
      description: 指定されたイベントハンドラの情報を返す。
      operationId: getEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/EventHandlerModel'
        "404":
          description: Handler not found.
      security:
      - api_key: []
      - api_token: []
      summary: Get Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers get
    put:
      consumes:
      - application/json
      description: 指定されたイベントハンドラを更新する。リクエストパラメータの指定方法; https://dev.soracom.io/en/docs/event_handler/
      operationId: updateEventHandler
      parameters:
      - description: handler ID
        in: path
        name: handler_id
        required: true
        type: string
      - description: イベントハンドラの設定内容
        in: body
        name: event_handler_model
        required: true
        schema:
          $ref: '#/definitions/UpdateEventHandlerRequest'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid handlerId.
      security:
      - api_key: []
      - api_token: []
      summary: Update Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers update
  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:
    delete:
      consumes:
      - application/json
      description: 指定のIMSIに対して、指定のイベントハンドラを無視する設定を削除
      operationId: deleteIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "204":
          description: OK
        "404":
          description: not found
      security:
      - api_key: []
      - api_token: []
      summary: Delete Ignore Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers unignore
    post:
      consumes:
      - application/json
      description: 指定のIMSIに対して、指定のイベントハンドラを無視する設定を追加
      operationId: setIgnoreEventHandler
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: handler_id
        in: path
        name: handler_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Ignore Event Handler
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers ignore
  /event_handlers/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: 対象IMSIにひもづくイベントハンドラのリストを返す。
      operationId: listEventHandlersBySubscriber
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
        "404":
          description: not found
      security:
      - api_key: []
      - api_token: []
      summary: List Event Handlers related to Subscriber
      tags:
      - EventHandler
      x-soracom-cli:
      - event-handlers list-for-subscriber
  /files/{scope}/{path}:
    delete:
      description: scope と path で指定されたファイルを削除します。`private` スコープのみが許可されます。
      operationId: deleteFile
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      responses:
        204:
          description: ファイルの削除に成功
        404:
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
      - api_token: []
      summary: scope と path で指定されたファイルを削除します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete
    get:
      description: scope と path で指定されたファイルをダウンロードするための URL へリダイレクトします。
      operationId: getFile
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      responses:
        302:
          description: ファイルをダウンロードするためのリンクへのリダイレクション。指定された path がディレクトリの場合は listFiles
            API へのリダイレクション。
        404:
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
      - api_token: []
      summary: scope と path で指定されたファイルをダウンロードします。
      tags:
      - FileEntry
      x-soracom-cli:
      - files get
    head:
      description: scope と path で指定されたファイルのメタデータを取得します。
      operationId: getFileMetadata
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      responses:
        200:
          description: 指定されたファイルのメタデータ
          schema:
            $ref: '#/definitions/FileEntry'
        404:
          description: 指定されたファイルが見つからない
      security:
      - api_key: []
      - api_token: []
      summary: scope と path で指定されたファイルのメタデータを取得します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files get-metadata
    put:
      description: 指定された scope 内の path にファイルをアップロードします。`private` スコープのみが許可されます。
      operationId: putFile
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      - description: Content of the file to upload
        in: body
        name: body
        required: true
        schema:
          format: binary
          type: string
      - description: Content type of the file to upload
        in: header
        name: content-type
        type: string
      responses:
        200:
          description: ファイルの更新に成功
        201:
          description: ファイルの作成に成功
      security:
      - api_key: []
      - api_token: []
      summary: 指定された scope 内の path にファイルをアップロードします。
      tags:
      - FileEntry
      x-soracom-cli:
      - files put
  /files/{scope}/{path}/:
    delete:
      description: scope と path で指定されたディレクトリを削除します。`private` スコープのみが許可されます。
      operationId: deleteDirectory
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        in: path
        name: scope
        required: true
        type: string
      - description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      responses:
        204:
          description: ディレクトリの削除に成功
        400:
          description: 指定されたディレクトリが空ではない
        404:
          description: 指定されたディレクトリが見つからない
      security:
      - api_key: []
      - api_token: []
      summary: scope と path で指定されたディレクトリを削除します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files delete-directory
    get:
      description: scope と path で指定された配下のファイルエントリのリストを返却します。エントリの総数が １ ページに収まらない場合、次のページへアクセスするための
        URL が Link ヘッダに含まれます。
      operationId: listFiles
      parameters:
      - default: private
        description: リクエストのスコープ
        enum:
        - private
        - public
        in: path
        name: scope
        required: true
        type: string
      - default: /
        description: 対象 Path
        in: path
        name: path
        required: true
        type: string
      responses:
        200:
          description: ファイルエントリのリスト
          schema:
            items:
              $ref: '#/definitions/FileEntry'
            type: array
        404:
          description: ファイルエントリが見つからない
      security:
      - api_key: []
      - api_token: []
      summary: scope と path で指定されたファイルやディレクトリの一覧を取得します。
      tags:
      - FileEntry
      x-soracom-cli:
      - files list
  /files/exported/{exported_file_id}:
    get:
      consumes:
      - application/json
      description: エクスポートされたファイルを取得します。ファイルエクスポートが完了している場合、レスポンスのurlにファイルダウンロードURLがセットされます。
      operationId: getExportedFile
      parameters:
      - description: file export id
        in: path
        name: exported_file_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetExportedFileResponse'
      security:
      - api_key: []
      - api_token: []
      summary: エクスポートされたファイルを取得します。
      tags:
      - Files
      x-soracom-cli:
      - files get-exported
  /gadgets:
    get:
      description: 条件にマッチするGadgetのリストを返す。Gadgetの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listGadgets
      parameters:
      - description: 対象のGadgetのProduct ID
        in: query
        name: product_id
        required: false
        type: string
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 取得するGadgetの上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のGadgetのID ({product_id}/{serial_number})。このパラメータを指定することで次のGadget以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: 条件にマッチするGadgetのリスト
          schema:
            items:
              $ref: '#/definitions/Gadget'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Gadgets
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets/{product_id}/{serial_number}:
    get:
      description: 指定されたGadgetの情報を返す。
      operationId: getGadget
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      responses:
        200:
          description: 指定されたGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets get
  /gadgets/{product_id}/{serial_number}/disable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたGadgetをTerminate不可能に設定する
      operationId: disableTerminationOnGadget
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets disable-termination
  /gadgets/{product_id}/{serial_number}/enable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたGadgetをTerminate可能に設定する
      operationId: enableTerminationOnGadget
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets enable-termination
  /gadgets/{product_id}/{serial_number}/register:
    post:
      consumes:
      - application/json
      description: Gadgetを登録する
      operationId: registerGadget
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      - description: Gadgetの登録リクエスト
        in: body
        name: registration_request
        required: true
        schema:
          $ref: '#/definitions/GadgetRegistrationRequest'
      produces:
      - application/json
      responses:
        200:
          description: Gadgetが正しく登録されました
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しません
      security:
      - api_key: []
      - api_token: []
      summary: Register a Gadget.
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets register
  /gadgets/{product_id}/{serial_number}/set_group:
    post:
      consumes:
      - application/json
      description: 指定されたGadgetの所属先Groupを指定あるいは上書き変更
      operationId: setGadgetGroup
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      - description: Group（IDのみを含めばよい）
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Group to Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets set-group
  /gadgets/{product_id}/{serial_number}/tags:
    put:
      description: 指定されたGadgetのタグを追加・更新
      operationId: putGadgetTags
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update Gadget Tags
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets put-tags
  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:
    delete:
      description: 指定されたGadgetのタグを削除
      operationId: deleteGadgetTag
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: 対象のタグの削除が完了
        404:
          description: 指定されたGadgetあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Gadget Tag
      tags:
      - Gadget
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - gadgets delete-tag
  /gadgets/{product_id}/{serial_number}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたGadgetをTerminate
      operationId: terminateGadget
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets terminate
  /gadgets/{product_id}/{serial_number}/unset_group:
    post:
      consumes:
      - text/plain
      description: 指定されたGadgetのGroup指定を解除
      operationId: unsetGadgetGroup
      parameters:
      - description: 対象のGadgetのProduct ID
        in: path
        name: product_id
        required: true
        type: string
      - description: 対象のGadgetのSerial Number
        in: path
        name: serial_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のGadgetの詳細情報
          schema:
            $ref: '#/definitions/Gadget'
        404:
          description: 指定されたGadgetが存在しないか、GadgetはGroupに属していない
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group to Gadget
      tags:
      - Gadget
      x-soracom-cli:
      - gadgets unset-group
  /groups:
    get:
      description: Groupの一覧を返す
      operationId: listGroups
      parameters:
      - description: GroupについたTag名。完全一致するTag名が検索対象となる。tag_nameを指定した場合、tag_valueが必須。
        in: query
        name: tag_name
        required: false
        type: string
      - description: GroupについたTagの値。
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件。
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: レスポンス1ページあたりの最大数
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のGroupのID。このパラメータを指定することで次のGroupから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: Groupの一覧
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Groups
      tags:
      - Group
      x-soracom-cli:
      - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Groupを新規作成する
      operationId: createGroup
      parameters:
      - description: グループに付けるタグ
        in: body
        name: Tags
        required: true
        schema:
          $ref: '#/definitions/CreateGroupRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Group'
      security:
      - api_key: []
      - api_token: []
      summary: Create Group
      tags:
      - Group
      x-soracom-cli:
      - groups create
  /groups/{group_id}:
    delete:
      description: Group IDで指定されたGroupを削除する
      operationId: deleteGroup
      parameters:
      - description: 対象のGroupのID
        in: path
        name: group_id
        required: true
        type: string
      responses:
        204:
          description: 指定されたGroupを削除完了
        404:
          description: 指定されたGroupは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group
      tags:
      - Group
      x-soracom-cli:
      - groups delete
    get:
      description: Group IDで指定されたGroupを返す
      operationId: getGroup
      parameters:
      - description: 対象のGroupのID
        in: path
        name: group_id
        required: true
        type: string
      responses:
        200:
          description: 指定されたGroup
          schema:
            $ref: '#/definitions/Group'
        404:
          description: 指定されたGroupは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get Group
      tags:
      - Group
      x-soracom-cli:
      - groups get
  /groups/{group_id}/configuration/{namespace}:
    put:
      description: 指定されたGroupのパラメータを追加・更新
      operationId: putConfigurationParameters
      parameters:
      - description: 対象のGroup
        in: path
        name: group_id
        required: true
        type: string
      - description: 対象のConfiguration
        enum:
        - SoracomAir
        - SoracomBeam
        - SoracomEndorse
        - SoracomFunk
        - SoracomFunnel
        - SoracomHarvest
        - SoracomHarvestFiles
        - SoracomKrypton
        - UnifiedEndpoint
        in: path
        name: namespace
        required: true
        type: string
      - description: 更新対象のオブジェクトの配列
        in: body
        name: parameters
        required: true
        schema:
          items:
            $ref: '#/definitions/GroupConfigurationUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のGroup
          schema:
            $ref: '#/definitions/Group'
        404:
          description: 指定されたGroupが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Update Group Configuration Parameters
      tags:
      - Group
      x-soracom-cli:
      - groups put-config
  /groups/{group_id}/configuration/{namespace}/{name}:
    delete:
      description: 指定されたGroupのパラメータを削除
      operationId: deleteConfigurationParameter
      parameters:
      - description: 対象のGroup
        in: path
        name: group_id
        required: true
        type: string
      - description: 対象のパラメータのネームスペース
        enum:
        - SoracomAir
        - SoracomBeam
        - SoracomEndorse
        - SoracomFunk
        - SoracomFunnel
        - SoracomHarvest
        - SoracomHarvestFiles
        - SoracomKrypton
        - UnifiedEndpoint
        in: path
        name: namespace
        required: true
        type: string
      - description: 削除対象のパラメータ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら
          encodeURIComponent() したものを指定する）
        in: path
        name: name
        required: true
        type: string
      responses:
        204:
          description: 指定されたパラメータの削除完了
        404:
          description: 指定されたGroupが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group Configuration Parameters
      tags:
      - Group
      x-soracom-cli:
      - groups delete-config
  /groups/{group_id}/subscribers:
    get:
      description: Group IDで指定されたGroupに属するSubscriberの一覧を返す
      operationId: listSubscribersInGroup
      parameters:
      - description: 対象のGroupのID
        in: path
        name: group_id
        required: true
        type: string
      - description: レスポンス1ページあたりの最大数
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: 指定されたGroup
          schema:
            $ref: '#/definitions/Group'
        404:
          description: 指定されたGroupは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: List Subscribers in a group
      tags:
      - Group
      x-sam-operationId: listSubscribers
      x-soracom-cli:
      - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /groups/{group_id}/tags:
    put:
      description: 指定されたConfiguratio Groupのタグを追加・更新
      operationId: putGroupTags
      parameters:
      - description: 対象のGroupのID
        in: path
        name: group_id
        required: true
        type: string
      - description: 更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Update Group Tags
      tags:
      - Group
      x-sam-operationId: putTags
      x-soracom-cli:
      - groups put-tags
  /groups/{group_id}/tags/{tag_name}:
    delete:
      description: 指定されたGroupのタグを削除
      operationId: deleteGroupTag
      parameters:
      - description: 対象のGroupのID
        in: path
        name: group_id
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: 対象のタグの削除が完了
        404:
          description: 指定されたSubscriberあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Group Tag
      tags:
      - Group
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - groups delete-tag
  /lagoon/dashboards/{dashboard_id}/permissions:
    put:
      consumes:
      - application/json
      description: SORACOM Lagoonのダッシュボードの権限を更新します
      operationId: updateLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        format: int64
        in: path
        name: dashboard_id
        required: true
        type: integer
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonDashboardPermissionsUpdatingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: SORACOM Lagoonのダッシュボード権限更新
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards update-permissions
  /lagoon/dashboards/{dashboard_id}/permissions/init:
    post:
      consumes:
      - application/json
      description: SORACOM Lagoonのダッシュボードの権限を初期化します
      operationId: initializeLagoonDashboardPermissions
      parameters:
      - description: dashboard_id
        format: int64
        in: path
        name: dashboard_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "403":
          description: Unauthorized operation
      summary: SORACOM Lagoonのダッシュボードの権限初期化
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon dashboards init-permissions
  /lagoon/license_packs:
    get:
      consumes:
      - application/json
      description: SORACOM Lagoonのライセンスパックのステータスを取得します
      operationId: listLagoonLicensePackStatus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonLicensePackStatusResponse'
            type: array
        "400":
          description: Bad request
      summary: SORACOM Lagoonのライセンスパックのステータス取得
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs list-status
    put:
      consumes:
      - application/json
      description: SORACOM Lagoonの追加ライセンスパックを更新・変更します。この API による操作は root アカウントのみが可能です。
      operationId: updateLagoonLicensePack
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonLicensePacksUpdatingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: SORACOM Lagoonの追加ライセンスパック更新・変更
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon license-packs update
  /lagoon/plan:
    put:
      consumes:
      - application/json
      description: SORACOM Lagoonのプランを変更します。この API による操作は root アカウントのみが可能です。
      operationId: updateLagoonPlan
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/LagoonPlanChangingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Operator Not Found
      summary: SORACOM Lagoonのプラン変更
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon updated-plan
  /lagoon/register:
    post:
      consumes:
      - application/json
      description: SORACOM Lagoon サービスを有効にします。この API による操作は root アカウントのみが可能です。
      operationId: registerLagoon
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registered
          schema:
            $ref: '#/definitions/LagoonRegistrationResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon サービスを有効にします。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon register
  /lagoon/terminate:
    post:
      consumes:
      - application/json
      description: SORACOM Lagoon サービスの使用を終了します。この API による操作は root アカウントのみが可能です。
      operationId: terminateLagoon
      produces:
      - application/json
      responses:
        "204":
          description: Terminated
        "400":
          description: Bad request
        "404":
          description: Operator not found
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon サービスの使用を終了します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon terminate
  /lagoon/users:
    get:
      consumes:
      - application/json
      description: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得します。
      operationId: listLagoonUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonUser'
            type: array
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: オペレーターに属する SORACOM Lagoon のユーザー一覧を取得します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon list-users
      - lagoon users list
    post:
      consumes:
      - application/json
      description: SORACOM Lagoon のユーザーを新たに作成します。
      operationId: createLagoonUser
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserCreationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/LagoonUserCreationResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon のユーザーを新たに作成します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon create-user
      - lagoon users create
  /lagoon/users/{lagoon_user_id}:
    delete:
      consumes:
      - application/json
      description: SORACOM Lagoon のユーザーを削除します。
      operationId: deleteLagoonUser
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon のユーザーを削除します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon delete-user
      - lagoon users delete
  /lagoon/users/{lagoon_user_id}/email:
    put:
      consumes:
      - application/json
      description: SORACOM Lagoon のユーザーのメールアドレスを変更します。
      operationId: updateLagoonUserEmail
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserEmailUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon のユーザーのメールアドレスを変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-email
      - lagoon users update-email
  /lagoon/users/{lagoon_user_id}/password:
    put:
      consumes:
      - application/json
      description: SORACOM Lagoon のユーザーのパスワードを変更します。
      operationId: updateLagoonUserPassword
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserPasswordUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon のユーザーのパスワードを変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-password
      - lagoon users update-password
  /lagoon/users/{lagoon_user_id}/permission:
    put:
      consumes:
      - application/json
      description: SORACOM Lagoon のユーザーの権限を変更します。
      operationId: updateLagoonUserPermission
      parameters:
      - description: Target ID of the lagoon user
        in: path
        name: lagoon_user_id
        required: true
        type: integer
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LagoonUserPermissionUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: SORACOM Lagoon のユーザーの権限を変更します。
      tags:
      - Lagoon
      x-soracom-cli:
      - lagoon update-user-permission
      - lagoon users update-permission
  /logs:
    get:
      description: 条件に合うログエントリのリストを返す。ログエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getLogs
      parameters:
      - description: ログ取得対象のリソースのタイプ
        enum:
        - Subscriber
        - EventHandler
        - VirtualPrivateGateway
        in: query
        name: resource_type
        required: false
        type: string
      - description: ログ取得対象のリソースのID
        in: query
        name: resource_id
        required: false
        type: string
      - description: ログエントリをフィルタするためのサービス名
        enum:
        - Air
        - Beam
        - Canal
        - Direct
        - Door
        - Endorse
        - Funnel
        - Gate
        in: query
        name: service
        required: false
        type: string
      - description: ログ取得対象の期間の始まり (unixtime)
        in: query
        name: from
        required: false
        type: integer
      - description: ログ取得対象の期間の終わり (unixtime)
        in: query
        name: to
        required: false
        type: integer
      - description: 取得するログエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: ログエントリのリスト
          schema:
            items:
              $ref: '#/definitions/LogEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Logs.
      tags:
      - Log
      x-soracom-cli:
      - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      description: 条件にマッチするLoRa deviceのリストを返す。LoRa deviceの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listLoraDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 取得するLoRa deviceの上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のLoRa deviceのDevice ID。このパラメータを指定することで次のLoRa device以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: 条件にマッチするLoRa deviceのリスト
          schema:
            items:
              $ref: '#/definitions/LoraDevice'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa devices
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices/{device_id}:
    get:
      description: 指定されたLoRa deviceの情報を返す。
      operationId: getLoraDevice
      parameters:
      - description: 対象のLoRa deviceのDevice ID
        in: path
        name: device_id
        required: true
        type: string
      responses:
        200:
          description: 指定されたLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get
  /lora_devices/{device_id}/data:
    get:
      description: 指定されたLoRaデバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getDataFromLoraDevice
      parameters:
      - description: データ取得対象のLoRaデバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 取得対象の期間の始まり (unixtime ミリ秒単位)
        in: query
        name: from
        required: false
        type: integer
      - description: 取得対象の期間の終わり (unixtime ミリ秒単位)
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データエントリのリスト
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データはLoRa Network Serverにセットされ、次に利用可能なデータ送信スロットを使って指定デバイスに送信される。未送信のデータがLoRa
        Network Serverにあった場合には、最新の受信データで上書きされる。 一定時間(2時間)受け取られなかった場合、デバイス受信時に新しいメッセージを受けた場合は、メッセージは破棄されます。
      operationId: sendDataToLoraDevice
      parameters:
      - description: 送信先デバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 16進数でエンコードされたバイナリデータの文字列。バイナリデータの最大サイズは11 octets（16進数エンコードされた文字列で22文字）。fPortを任意で指定できます。fPortは0以上でなければなりません。0はコントロールプレーンに使用され、通常は1以上を使用します。無効な値が与えられた場合には特定ベンダーのデバイスで問題が起こらないように設定されたデフォルト値である2が使用されます。
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/LoraData'
      responses:
        204:
          description: データはLoRa Network Serverにセットされ、送信先デバイスが取得出来る状態になったことを示す。
        400:
          description: 与えられたJSONに無効な値が含まれている。
        404:
          description: 指定されたLoRaデバイスが存在しない。
      security:
      - api_key: []
      - api_token: []
      summary: Send data to a LoRa device.
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices send-data
  /lora_devices/{device_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa deviceをTerminate不可能に設定する
      operationId: disableTerminationOnLoraDevice
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices disable-termination
  /lora_devices/{device_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa deviceをTerminate可能に設定する
      operationId: enableTerminationOnLoraDevice
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices enable-termination
  /lora_devices/{device_id}/register:
    post:
      consumes:
      - application/json
      description: LoRa deviceを登録
      operationId: registerLoraDevice
      parameters:
      - description: 対象のLoRa deviceのDevice ID
        in: path
        name: device_id
        required: true
        type: string
      - description: LoRa device
        in: body
        name: lora_device
        required: true
        schema:
          $ref: '#/definitions/RegisterLoraDeviceRequest'
      produces:
      - application/json
      responses:
        201:
          description: LoRa device登録完了
          schema:
            $ref: '#/definitions/LoraDevice'
      security:
      - api_key: []
      - api_token: []
      summary: Register LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices register
  /lora_devices/{device_id}/set_group:
    post:
      consumes:
      - application/json
      description: 指定されたLoRa deviceの所属先Groupを指定あるいは上書き変更
      operationId: setLoraDeviceGroup
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: Group（IDのみを含めばよい）
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Group to LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices set-group
  /lora_devices/{device_id}/tags:
    put:
      description: 指定されたLoRa deviceのタグを追加・更新
      operationId: putLoraDeviceTags
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update LoRa device Tags
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices put-tags
  /lora_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定されたLoRa deviceのタグを削除
      operationId: deleteLoraDeviceTag
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: 対象のタグの削除が完了
        404:
          description: 指定されたLoRa deviceあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa device Tag
      tags:
      - LoraDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - lora-devices delete-tag
  /lora_devices/{device_id}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa deviceをTerminate
      operationId: terminateLoraDevice
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices terminate
  /lora_devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa deviceのGroup指定を解除
      operationId: unsetLoraDeviceGroup
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のLoRa deviceの詳細情報
          schema:
            $ref: '#/definitions/LoraDevice'
        404:
          description: 指定されたLoRa deviceが存在しないか、LoRa deviceはGroupに属していない
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group to LoRa device
      tags:
      - LoraDevice
      x-soracom-cli:
      - lora-devices unset-group
  /lora_gateways:
    get:
      description: 条件にマッチするLoRa gatewayのリストを返す。LoRa gatewayの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listLoraGateways
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件。
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 一度に取得するLoRa gatewayの数の上限
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のLoRa gatewayのID。このパラメータを指定することで次のLoRa gateway以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: LoRa gatewayのリスト
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa gateways.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_gateways/{gateway_id}:
    get:
      description: 指定されたLoRa gatewayの情報を返す。
      operationId: getLoraGateway
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 指定されたLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways get
  /lora_gateways/{gateway_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayをTerminate不可能に設定する
      operationId: disableTerminationOnLoraGateway
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways disable-termination
  /lora_gateways/{gateway_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayをTerminate可能に設定する
      operationId: enableTerminationOnLoraGateway
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways enable-termination
  /lora_gateways/{gateway_id}/set_network_set:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayのNetwork Set IDを指定あるいは上書き変更
      operationId: setLoraNetworkSet
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: LoRa Network Set ID
        in: body
        name: ns_id
        schema:
          $ref: '#/definitions/SetNetworkSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways set-network-set
  /lora_gateways/{gateway_id}/tags:
    put:
      consumes:
      - application/json
      description: 指定されたLoRa gatewayのタグを追加・更新
      operationId: putLoraGatewayTags
      parameters:
      - description: 対象のLoRa deviceのID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update LoRa gateway Tags.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways put-tags
  /lora_gateways/{gateway_id}/tags/{tag_name}:
    delete:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayのタグを削除
      operationId: deleteLoraGatewayTag
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定されたLoRa gatewayあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa gateway tag.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways delete-tag
  /lora_gateways/{gateway_id}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayをTerminate
      operationId: terminateLoraGateway
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways terminate
  /lora_gateways/{gateway_id}/unset_network_set:
    post:
      consumes:
      - text/plain
      description: 指定されたLoRa gatewayのNetwork Set IDを削除
      operationId: unsetLoraNetworkSet
      parameters:
      - description: 対象のLoRa gatewayのID
        in: path
        name: gateway_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新後のLoRa gatewayの詳細情報
          schema:
            $ref: '#/definitions/LoraGateway'
        "404":
          description: 指定されたLoRa gatewayが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Unset Network Set ID of LoRa gateway.
      tags:
      - LoraGateway
      x-soracom-cli:
      - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      description: 条件にマッチするLoRa network setのリストを返す。LoRa network setの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listLoraNetworkSets
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件。
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 一度に取得するLoRa network setの数の上限
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のLoRa network setのID。このパラメータを指定することで次以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: LoRa network setのリスト
          schema:
            items:
              $ref: '#/definitions/LoraNetworkSet'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa Network Sets.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: LoRa network setを作成する
      operationId: createLoraNetworkSet
      parameters:
      - description: タグなど作成対象のLoRa network setに設定する付加情報
        in: body
        name: lora_network_set
        required: true
        schema:
          $ref: '#/definitions/LoraNetworkSet'
      produces:
      - application/json
      responses:
        "201":
          description: LoRa network setの作成に成功.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Creates a LoRa network set
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets create
  /lora_network_sets/{ns_id}:
    delete:
      consumes:
      - text/plain
      description: 指定されたLoRa network setを削除する
      operationId: deleteLoraNetworkSet
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 削除に成功
        "404":
          description: 指定されたLoRa network setが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete
    get:
      description: 指定されたLoRa network setの情報を返す
      operationId: getLoraNetworkSet
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: LoRa network setの詳細情報を取得完了
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        "404":
          description: 指定されたLoRa network setが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets get
  /lora_network_sets/{ns_id}/add_permission:
    post:
      consumes:
      - application/json
      description: 別のOperatorからNetwork Setが利用できるようにパーミッションを追加する。
      operationId: addPermissionToLoraNetworkSet
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      - description: 許可されたOperatorのリストに追加すべきOperatorのID
        in: body
        name: operator_id
        required: true
        schema:
          $ref: '#/definitions/UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 指定されたnetwork setのパーミッションを更新完了
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Adds permission to a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets add-permission
  /lora_network_sets/{ns_id}/gateways:
    get:
      description: 指定されたNetwork Setに属するLoRa gatewayのリストを返す。LoRa gatewayの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listGatewaysInLoraNetworkSet
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      - description: 一度に取得するLoRa gatewayの数の上限
        format: int32d
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のLoRa gatewayのID。このパラメータを指定することで次のLoRa gateway以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: LoRa gatewayのリスト
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
        "404":
          description: 指定されたLoRa network setが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: List LoRa Gateways in a Network Set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_network_sets/{ns_id}/revoke_permission:
    post:
      description: 指定されたLoRa network setの別のOperatorへの利用許可を取り消す
      operationId: revokePermissionFromLoraNetworkSet
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      - description: 許可されたOperatorのリストに追加すべきOperatorのID
        in: body
        name: operator_id
        required: true
        schema:
          $ref: '#/definitions/UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 指定されたLoRa network setのパーミッションを更新完了
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
      - api_key: []
      - api_token: []
      summary: Revokes a permission from a LoRa network set.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets revoke-permission
  /lora_network_sets/{ns_id}/tags:
    put:
      description: 指定されたLoRa network setのタグを追加・更新
      operationId: putLoraNetworkSetTags
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        "200":
          description: 更新後のLoRa network setの詳細情報
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        "404":
          description: 指定されたLoRa network setが存在しない
      summary: Bulk Insert or Update LoRa network set tags.
      tags:
      - LoraNetworkSet
  /lora_network_sets/{ns_id}/tags/{tag_name}:
    delete:
      consumes:
      - text/plain
      description: 指定されたLoRa network setのタグを削除
      operationId: deleteLoraNetworkSetTag
      parameters:
      - description: 対象のLoRa network setのID
        in: path
        name: ns_id
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 対象のタグの削除が完了
        "404":
          description: 指定されたLoRa network setあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete LoRa network set tag.
      tags:
      - LoraNetworkSet
      x-soracom-cli:
      - lora-network-sets delete-tag
  /operators:
    post:
      consumes:
      - application/json
      description: Operator の新規登録をリクエストする。パラメーターで指定されたメールアドレスに宛てて、Operator 登録確認用のワンタイムトークンを含んだメールが送信される。
      operationId: createOperator
      parameters:
      - description: email, password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterOperatorsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Operator が作成された
        "400":
          description: メールアドレスがすでに登録されているか、パスワードのフォーマットが不正
      security:
      - api_key: []
      - api_token: []
      summary: Create Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator create
  /operators/{operator_id}:
    get:
      consumes:
      - application/json
      description: Operatorの情報を返す。
      operationId: getOperator
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetOperatorResponse'
        "400":
          description: Invalid Operator Id
      security:
      - api_key: []
      - api_token: []
      summary: Get Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator get
  /operators/{operator_id}/auth_keys:
    get:
      consumes:
      - application/json
      description: OperatorのAuthKey一覧を返す。
      operationId: listOperatorAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Operator AuthKeys
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys list
    post:
      consumes:
      - application/json
      description: OperatorのAuthKeyを生成する。
      operationId: generateOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateOperatorsAuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Generate Operator AuthKey
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys generate
  /operators/{operator_id}/auth_keys/{auth_key_id}:
    delete:
      consumes:
      - application/json
      description: OperatorのAuthKeyを削除する。
      operationId: deleteOperatorAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete Operator AuthKey
      tags:
      - Operator
      x-soracom-cli:
      - operator auth-keys delete
  /operators/{operator_id}/mfa:
    delete:
      consumes:
      - application/json
      description: オペレーターの MFA を無効化します。
      operationId: revokeMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Revoked
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Revoke Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator revoke-mfa
    get:
      consumes:
      - application/json
      description: オペレーターの MFA の状態を取得します。MFA の状態は `ACTIVE`, `INACTIVE` もしくは `UNCONFIRMED`
        のいずれかです。
      operationId: getMFAStatus
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Get Operator's MFA Status.
      tags:
      - Operator
      x-soracom-cli:
      - operator get-mfa-status
    post:
      consumes:
      - application/json
      description: オペレーターの MFA を有効化します。この API を呼んだ後に、`Operator:verifyMFA` API を用いて
        MFA OTP を検証する必要があります。
      operationId: enableMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Enable Operator's MFA.
      tags:
      - Operator
      x-soracom-cli:
      - operator enable-mfa
  /operators/{operator_id}/mfa/verify:
    post:
      consumes:
      - application/json
      description: オペレーターの MFA OTP を検証します。 `Operator:enableMFA` を呼んだ後に呼び出す必要があります。この
        API で正しく検証が行われるまで、MFAは有効になりません。このAPIのレスポンスとして返ってくるバックアップコードは必ず保管してください。
      operationId: verifyMFA
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAAuthenticationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OperatorMFAVerifyingResponse'
        "400":
          description: Bad request
      security:
      - api_key: []
      - api_token: []
      summary: Verify Operator's MFA OTP Code.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-otp
  /operators/{operator_id}/password:
    post:
      consumes:
      - application/json
      description: Operator のパスワードを更新する。
      operationId: updateOperatorPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: current password, new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
        "400":
          description: Invalid password.
      security:
      - api_key: []
      - api_token: []
      summary: Update Operator Password
      tags:
      - Operator
      x-soracom-cli:
      - operator update-password
  /operators/{operator_id}/roles:
    get:
      consumes:
      - application/json
      description: Roleの一覧を返す。
      operationId: listRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ListRolesResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Roles
      tags:
      - Role
      x-soracom-cli:
      - roles list
  /operators/{operator_id}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: Roleを削除する。
      operationId: deleteRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete Role
      tags:
      - Role
      x-soracom-cli:
      - roles delete
    get:
      consumes:
      - application/json
      description: Roleを取得する。
      operationId: getRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/RoleResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get Role
      tags:
      - Role
      x-soracom-cli:
      - roles get
    post:
      consumes:
      - application/json
      description: Roleを新しく追加する。
      operationId: createRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateOrUpdateRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/CreateRoleResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Create Role
      tags:
      - Role
      x-soracom-cli:
      - roles create
    put:
      consumes:
      - application/json
      description: Roleを編集する。
      operationId: updateRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateOrUpdateRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Role
      tags:
      - Role
      x-soracom-cli:
      - roles update
  /operators/{operator_id}/roles/{role_id}/users:
    get:
      consumes:
      - application/json
      description: Roleに紐づくユーザーの一覧を取得する。
      operationId: listRoleAttachedUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Role Attached Users
      tags:
      - Role
      x-soracom-cli:
      - roles list-users
  /operators/{operator_id}/shipping_addresses:
    get:
      consumes:
      - application/json
      description: 商品発送先の一覧を返します。
      operationId: listShippingAddresses
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List shipping addresses
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses list
    post:
      consumes:
      - application/json
      description: 商品発送先を新規登録する。
      operationId: createShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ShippingAddressModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
        "201":
          description: shippingAddreddId
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Create shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses create
  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:
    delete:
      consumes:
      - application/json
      description: 商品発送先を削除する。
      operationId: deleteShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Delete shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses delete
    get:
      consumes:
      - application/json
      description: 商品発送先を返す。
      operationId: getShippingAddress
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses get
    put:
      consumes:
      - application/json
      description: 商品発送先を更新する。
      operationId: updateShippingAddress
      parameters:
      - description: Operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: shipping_address_id
        in: path
        name: shipping_address_id
        required: true
        type: string
      - description: model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/ShippingAddressModel'
      produces:
      - '*/*'
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update shipping address
      tags:
      - ShippingAddress
      x-soracom-cli:
      - shipping-addresses update
  /operators/{operator_id}/support/token:
    post:
      consumes:
      - application/json
      description: サポート画面アクセス用のトークンを返す。
      operationId: generateSupportToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/SupportTokenResponse'
        "400":
          description: Invalid Operator Id
        "403":
          description: Invalid token.
      security:
      - api_key: []
      - api_token: []
      summary: Generate Token for Support Console
      tags:
      - Operator
      x-soracom-cli:
      - operator get-support-token
  /operators/{operator_id}/token:
    post:
      consumes:
      - application/json
      description: 新しい API トークンを発行する。現在の API トークンをヘッダーに入れてリクエストを行うと、新しい API トークンを含んだレスポンスを返す。以降のリクエスト時にはこの新しい
        API トークンを用いることができる。
      operationId: generateAuthToken
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: token timeout seconds
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/GenerateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateTokenResponse'
        "400":
          description: リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Generate Authentication Token
      tags:
      - Operator
      x-soracom-cli:
      - operator generate-api-token
  /operators/{operator_id}/users:
    get:
      consumes:
      - application/json
      description: SAMユーザー一覧を返す。
      operationId: listUsers
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Users
      tags:
      - User
      x-soracom-cli:
      - users list
  /operators/{operator_id}/users/{user_name}:
    delete:
      consumes:
      - application/json
      description: SAMユーザーを削除する。
      operationId: deleteUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete User
      tags:
      - User
      x-soracom-cli:
      - users delete
    get:
      consumes:
      - application/json
      description: SAMユーザーを返す。
      operationId: getUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/UserDetailResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get User
      tags:
      - User
      x-soracom-cli:
      - users get
    post:
      consumes:
      - application/json
      description: SAMユーザーを新しく追加する。
      operationId: createUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: description
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateUserRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "201":
          description: Created
      security:
      - api_key: []
      - api_token: []
      summary: Create User
      tags:
      - User
      x-soracom-cli:
      - users create
    put:
      consumes:
      - application/json
      description: SAMユーザーを更新する。
      operationId: updateUser
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: description
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "404":
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Update User
      tags:
      - User
      x-soracom-cli:
      - users update
  /operators/{operator_id}/users/{user_name}/auth_keys:
    get:
      consumes:
      - application/json
      description: SAMユーザーのAuthKey一覧を返す。
      operationId: listUserAuthKeys
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List User AuthKeys
      tags:
      - User
      x-soracom-cli:
      - users auth-keys list
    post:
      consumes:
      - application/json
      description: SAMユーザーのAuthKeyを生成する。
      operationId: generateUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GenerateUserAuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Generate AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys generate
  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:
    delete:
      consumes:
      - application/json
      description: SAMユーザーのAuthKeyを削除する。
      operationId: deleteUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: AuthKey not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete User AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys delete
    get:
      consumes:
      - application/json
      description: SAMユーザーのAuthKeyを返す。
      operationId: getUserAuthKey
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: auth_key_id
        in: path
        name: auth_key_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/AuthKeyResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get AuthKey
      tags:
      - User
      x-soracom-cli:
      - users auth-keys get
  /operators/{operator_id}/users/{user_name}/mfa:
    delete:
      consumes:
      - application/json
      description: SAMユーザーのMFAを無効にする
      operationId: revokeUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAMユーザー名
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: MFAを無効にしました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
      - api_token: []
      summary: Revoke SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa revoke
    get:
      consumes:
      - application/json
      description: SAMユーザーのMFAの使用状態を取得する
      operationId: getUserMFAStatus
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAMユーザー名
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
      - api_token: []
      summary: Get SAM user's MFA status
      tags:
      - User
      x-soracom-cli:
      - users mfa get
    post:
      consumes:
      - application/json
      description: SAMユーザーのMFAを有効にする。
      operationId: enableUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAMユーザー名
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
      - api_token: []
      summary: Enable SAM user's MFA
      tags:
      - User
      x-soracom-cli:
      - users mfa enable
  /operators/{operator_id}/users/{user_name}/mfa/verify:
    post:
      consumes:
      - application/json
      description: SAMユーザーのMFAを有効にした後にMFA OTPが正しく受理されるかを検証する
      operationId: verifyUserMFA
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      - description: SAMユーザー名
        in: path
        name: user_name
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAAuthenticationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: 検証に成功しました
        "400":
          description: 不正なリクエストです
      security:
      - api_key: []
      - api_token: []
      summary: Verify SAM user's MFA OTP code when MFA activation phase
      tags:
      - User
      x-soracom-cli:
      - users mfa verify
  /operators/{operator_id}/users/{user_name}/password:
    delete:
      consumes:
      - application/json
      description: ユーザーのパスワードを削除する。
      operationId: deleteUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
        "204":
          description: OK
        "404":
          description: Password registration is required.
          schema:
            $ref: '#/definitions/APICallError'
      security:
      - api_key: []
      - api_token: []
      summary: Delete Password
      tags:
      - User
      x-soracom-cli:
      - users password delete
    get:
      consumes:
      - application/json
      description: SAMユーザーのパスワードがセットされているかを取得する。
      operationId: hasUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPasswordResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Has User Password
      tags:
      - User
      x-soracom-cli:
      - users password configured
    post:
      consumes:
      - application/json
      description: SAMユーザーのパスワードを作成する。
      operationId: createUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateUserPasswordRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Create Password
      tags:
      - User
      x-soracom-cli:
      - users password create
    put:
      consumes:
      - application/json
      description: SAMユーザーのパスワードを更新する。
      operationId: updateUserPassword
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdatePasswordRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Password
      tags:
      - User
      x-soracom-cli:
      - users password update
  /operators/{operator_id}/users/{user_name}/permission:
    get:
      consumes:
      - application/json
      description: SAMユーザーの権限設定を取得する。
      operationId: getUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPermissionResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get User Permission
      tags:
      - User
      x-soracom-cli:
      - users permissions get
    put:
      consumes:
      - application/json
      description: SAMユーザーの権限を更新する。
      operationId: updateUserPermission
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: permission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SetUserPermissionRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Update Permission to User
      tags:
      - User
      x-soracom-cli:
      - users permissions update
  /operators/{operator_id}/users/{user_name}/roles:
    get:
      consumes:
      - application/json
      description: ユーザーのロールの一覧を取得する。
      operationId: listUserRoles
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/RoleResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List User Roles
      tags:
      - Role
      x-soracom-cli:
      - users list-roles
    post:
      consumes:
      - application/json
      description: ユーザーにロールをアタッチする。
      operationId: attachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: role_id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AttachRoleRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Attach Role to User
      tags:
      - Role
      x-soracom-cli:
      - users attach-role
  /operators/{operator_id}/users/{user_name}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: ユーザーからロールをデタッチする。
      operationId: detachRole
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: user_name
        in: path
        name: user_name
        required: true
        type: string
      - description: role_id
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Detach Role from User
      tags:
      - Role
      x-soracom-cli:
      - users detach-role
  /operators/{operator_id}/users/default_permissions:
    get:
      consumes:
      - application/json
      description: すべてのSAMユーザーに適用されるデフォルト権限を取得する。
      operationId: getDefaultPermissions
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetDefaultPermissionsResponse'
        "403":
          description: 許可されていません
        "404":
          description: オペレーターが存在しません
      security:
      - api_key: []
      - api_token: []
      summary: Get the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions get
    put:
      consumes:
      - application/json
      description: すべてのSAMユーザーに適用されるデフォルト権限を更新する。
      operationId: updateDefaultPermissions
      parameters:
      - description: オペレーターID
        in: path
        name: operator_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateDefaultPermissionsRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "202":
          description: 受理されました
        "400":
          description: 不正なリクエストです
        "403":
          description: 許可されていません
      security:
      - api_key: []
      - api_token: []
      summary: Update the default permissions
      tags:
      - User
      x-soracom-cli:
      - users default-permissions update
  /operators/email_change_token/issue:
    post:
      consumes:
      - application/json
      description: メールアドレス変更用のワンタイムトークンをメールで送付する。
      operationId: issueEmailChangeToken
      parameters:
      - description: email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/IssueEmailChangeTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Issue Email Change Token
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-email-change-token
  /operators/email_change_token/verify:
    post:
      consumes:
      - application/json
      description: メールアドレス変更用のトークンを確認して、メールアドレスを変更する。
      operationId: verifyEmailChangeToken
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifyEmailChangeTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - api_key: []
      - api_token: []
      summary: Verify Email Change Token
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-email-change-token
  /operators/mfa_revoke_token/issue:
    post:
      consumes:
      - application/json
      description: オペレーターの MFA を無効化するためのトークンを発行します。この API が呼ばれた後、トークンはメールで送信されます。
      operationId: issueMFARevokingToken
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFAIssueRevokingTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Operator not found
      summary: Issue Operator's MFA Revoke Token.
      tags:
      - Operator
      x-soracom-cli:
      - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      consumes:
      - application/json
      description: MFA を無効化するためのワンタイムトークン、アカウントのメールアドレス、パスワードおよびバックアップコードの組み合わせによって
        MFA を無効化します。
      operationId: verifyMFARevokingToken
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/MFARevokingTokenVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Revoked
        "400":
          description: Bad request
        "403":
          description: Invalid username or password
      summary: Verify Operator's MFA revoke token.
      tags:
      - Operator
      x-soracom-cli:
      - operator verify-mfa-revoke-token
  /operators/verify:
    post:
      consumes:
      - application/json
      description: Operator 登録の確認を行う。メールで送られてくる確認用ワンタイムトークンをパラメーターに含めて呼び出しを行う。
      operationId: verifyOperator
      parameters:
      - description: token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifyOperatorsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登録成功
        "400":
          description: ワンタイムトークンが不正
        "404":
          description: ワンタイムトークンが期限切れ
      summary: Verify Operator
      tags:
      - Operator
      x-soracom-cli:
      - operator verify
  /orders:
    get:
      consumes:
      - application/json
      description: 発注確定済みの発注一覧を返します。
      operationId: listOrders
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List confirmed orders.
      tags:
      - Order
      x-soracom-cli:
      - orders list
    post:
      consumes:
      - application/json
      description: 新規で発注見積もりの作成を行います。orderIdを/confirmにPUTすると発注が完了します。
      operationId: createQuotation
      parameters:
      - description: 注文品リストと配送先ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateEstimatedOrderRequest'
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/EstimatedOrderModel'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/EstimatedOrderModel'
      security:
      - api_key: []
      - api_token: []
      summary: Create Quotation
      tags:
      - Order
      x-soracom-cli:
      - orders create
  /orders/{order_id}:
    get:
      consumes:
      - application/json
      description: 発注確定済みの発注を返します。
      operationId: getOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetOrderResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Get confirmed order.
      tags:
      - Order
      x-soracom-cli:
      - orders get
  /orders/{order_id}/cancel:
    put:
      consumes:
      - application/json
      description: 発注をキャンセルします。既に発送済みの場合はエラーが返されます。
      operationId: cancelOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Cancel order.
      tags:
      - Order
      x-soracom-cli:
      - orders cancel
  /orders/{order_id}/confirm:
    put:
      consumes:
      - application/json
      description: 与信を実施し、問題ない場合に発注を確定します。
      operationId: confirmOrder
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Confirm order.
      tags:
      - Order
      x-soracom-cli:
      - orders confirm
  /orders/{order_id}/subscribers:
    get:
      consumes:
      - application/json
      description: 発注したSIMのSubscriber一覧を返します。
      operationId: listOrderedSubscribers
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      - description: 直前のリクエストで取得したうち、最後のSubscriberの製造番号。レスポンスヘッダのX-Soracom-Next-Keyに含まれる値
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - description: レスポンスに含まれる最大Subscriber数
        format: int32
        in: query
        name: limit
        required: false
        type: integer
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderedSubscriberResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List ordered subscribers.
      tags:
      - Order
      x-soracom-cli:
      - orders list-subscribers
  /orders/{order_id}/subscribers/register:
    post:
      consumes:
      - application/json
      description: 発注したSIMをオペレーターに登録します。
      operationId: registerOrderedSim
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: string
      security:
      - api_key: []
      - api_token: []
      summary: Register subscribers for operator.
      tags:
      - Order
      x-soracom-cli:
      - orders register-subscribers
  /payment_history/transactions/{payment_transaction_id}:
    get:
      consumes:
      - application/json
      description: 課金処理の結果を返します。
      operationId: getPaymentTransaction
      parameters:
      - description: 課金処理ID
        in: path
        name: payment_transaction_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentTransactionResult'
        "400":
          description: 無効な課金処理IDです。
        "404":
          description: 課金処理の結果が見つかりません。
      security:
      - api_key: []
      - api_token: []
      summary: Get payment transaction result.
      tags:
      - Payment
      x-soracom-cli:
      - payment-history get
  /payment_methods/current:
    get:
      consumes:
      - application/json
      description: 現在の支払い方法を返します。propertiesに詳細情報が入っています。
      operationId: getPaymentMethod
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentMethodResult'
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
      - api_token: []
      summary: Get payment method information.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods get-current
  /payment_methods/current/activate:
    post:
      consumes:
      - application/json
      description: エラーのある現在の支払い方法を有効化します。
      operationId: activatePaymentMethod
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            type: object
        "404":
          description: 支払い方法が見つかりません。
      security:
      - api_key: []
      - api_token: []
      summary: Activate payment method.
      tags:
      - Payment
      x-soracom-cli:
      - payment-methods reactivate-current
  /payment_statements:
    get:
      consumes:
      - application/json
      description: 課金明細の一覧を返します。
      operationId: listPaymentStatements
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListPaymentStatementResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List payment statements.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements list
  /payment_statements/{payment_statement_id}/export:
    post:
      consumes:
      - application/json
      description: 課金明細を出力します。
      operationId: exportPaymentStatement
      parameters:
      - description: 課金明細ID
        in: path
        name: payment_statement_id
        required: true
        type: string
      - description: 出力モード (非同期, 同期)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FileExportResponse'
        "400":
          description: 無効な課金明細IDです。
      security:
      - api_key: []
      - api_token: []
      summary: Export payment statement.
      tags:
      - Payment
      x-soracom-cli:
      - payment-statements export
  /payment_statements/payer_information:
    get:
      consumes:
      - application/json
      description: 課金明細に出力する支払い者情報を取得します。
      operationId: getPayerInformation
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RegisterPayerInformationModel'
        "400":
          description: 支払い者情報が見つかりません。
      security:
      - api_key: []
      - api_token: []
      summary: Export payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information get
    post:
      consumes:
      - application/json
      description: 課金明細に出力する支払い者情報を設定します。
      operationId: registerPayerInformation
      parameters:
      - description: 課金明細に登録する支払い者情報
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/RegisterPayerInformationModel'
      produces:
      - application/json;charset=UTF-8
      responses:
        "201":
          description: Created.
        "400":
          description: 無効な支払い者情報です。
      security:
      - api_key: []
      - api_token: []
      summary: Register payer information.
      tags:
      - Payment
      x-soracom-cli:
      - payer-information register
  /port_mappings:
    get:
      description: Returns a list of port mappings.
      operationId: listPortMappings
      parameters:
      - description: Maximum number of results per response page.
        in: query
        name: limit
        required: false
        type: integer
      - description: The last Port Mapping ID retrieved on the current page. By specifying
          this parameter, you can continue to retrieve the list from the next group
          onward.
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of port mappings.
          schema:
            items:
              $ref: '#/definitions/PortMapping'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Port Mapping Entries.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: Create a new port mapping.
      operationId: createPortMapping
      parameters:
      - description: Port mapping to be created.
        in: body
        name: Port mapping
        required: true
        schema:
          $ref: '#/definitions/CreatePortMappingRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/PortMapping'
      security:
      - api_key: []
      - api_token: []
      summary: Create Port Mapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings create
  /port_mappings/{ip_address}/{port}:
    delete:
      description: Deletes the specified port mapping entry
      operationId: deletePortMapping
      parameters:
      - description: IP address of the target port mapping entry
        in: path
        name: ip_address
        required: true
        type: string
      - description: Port of the target port mapping entry
        in: path
        name: port
        required: true
        type: string
      responses:
        204:
          description: Deletion of specified port mapping entry complete.
        404:
          description: The specified port mapping entry does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Delete PortMapping.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings delete
  /port_mappings/subscribers/{imsi}:
    get:
      description: Returns the port mapping entries for a subscriber.
      operationId: listPortMappingsForSubscriber
      parameters:
      - description: Target subscriber IMSI.
        in: path
        name: imsi
        required: true
        type: string
      responses:
        200:
          description: List of port mapping entries for the subscriber.
          schema:
            $ref: '#/definitions/PortMapping'
        404:
          description: The specified subscriber does not exist.
      security:
      - api_key: []
      - api_token: []
      summary: Get Port Mapping entries for a subscriber.
      tags:
      - PortMapping
      x-soracom-cli:
      - port-mappings get
  /products:
    get:
      consumes:
      - application/json
      description: 商品一覧を返します。
      operationId: listProducts
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListProductResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List products
      tags:
      - Order
      x-soracom-cli:
      - products list
  /query/sigfox_devices:
    get:
      consumes:
      - application/json
      description: Sigfox デバイスをクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        Sigfox デバイスに対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSigfoxDevices
      parameters:
      - collectionFormat: multi
        description: 検索したい Sigfox デバイスの名前
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したいグループの名前
        in: query
        items:
          type: string
        name: group
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したい Sigfox デバイスの ID
        in: query
        items:
          type: string
        name: deviceId
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したいタグの値の文字列
        in: query
        items:
          type: string
        name: tag
        required: false
        type: array
      - default: and
        description: 検索したい Sigfox デバイスの状態
        enum:
        - active
        - inactive
        - suspended
        - terminated
        - shipped
        - ready
        - inStock
        - banned
        - standby
        in: query
        name: status
        required: false
        type: string
      - default: and
        description: 検索したい Sigfox デバイスの登録状態
        enum:
        - notStarted
        - pending
        - success
        - failed
        in: query
        name: registration
        required: false
        type: string
      - default: 10
        description: 取得する結果の上限数
        format: int32
        in: query
        maximum: 100
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後の Sigfox デバイスの ID。このパラメータを指定することで次の Sigfox デバイス以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: and
        description: 検索の種別 (AND 検索もしくは OR 検索)
        enum:
        - and
        - or
        in: query
        name: search_type
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: 正常に検索結果を返却
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
      - api_token: []
      summary: Sigfox デバイスをクエリに応じて検索します。
      tags:
      - Query
      x-soracom-cli:
      - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      consumes:
      - application/json
      description: Subscriber をクエリに応じて検索します。部分一致したものを返却します。この API 権限が付与された場合、すべての
        SIM に対して group も含めた検索/一覧取得を行える権限が与えられます。
      operationId: searchSubscribers
      parameters:
      - collectionFormat: multi
        description: 検索したい Subscriber の名前
        in: query
        items:
          type: string
        name: name
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したいグループの名前
        in: query
        items:
          type: string
        name: group
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したい IMSI
        in: query
        items:
          type: string
        name: imsi
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したい MSISDN
        in: query
        items:
          type: string
        name: msisdn
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したい ICCID
        in: query
        items:
          type: string
        name: iccid
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したい製造番号
        in: query
        items:
          type: string
        name: serial_number
        required: false
        type: array
      - collectionFormat: multi
        description: 検索したいタグの値の文字列
        in: query
        items:
          type: string
        name: tag
        required: false
        type: array
      - default: 10
        description: 取得する結果の上限数
        format: int32
        in: query
        maximum: 100
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後の Subscriber の IMSI。このパラメータを指定することで次の Subscriber 以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      - default: and
        description: 検索の種別 (AND 検索もしくは OR 検索)
        enum:
        - and
        - or
        in: query
        name: search_type
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: 正常に検索結果を返却
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
        "400":
          description: 不正な検索クエリ
      security:
      - api_key: []
      - api_token: []
      summary: Subscriber をクエリに応じて検索します。
      tags:
      - Query
      x-soracom-cli:
      - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      consumes:
      - application/json
      description: 指定された期間のSubscriberの通信量ランキングを検索して返却します。
      operationId: searchSubscriberTrafficVolumeRanking
      parameters:
      - description: 検索期間の始点 (unixtime ミリ秒単位)
        format: int64
        in: query
        name: from
        required: true
        type: integer
      - description: 検索期間の終点 (unixtime ミリ秒単位)
        format: int64
        in: query
        name: to
        required: true
        type: integer
      - default: 10
        description: 取得する結果の上限数
        format: int32
        in: query
        maximum: 500
        name: limit
        required: false
        type: integer
      - default: desc
        description: ランキングの順序
        enum:
        - asc
        - desc
        in: query
        name: order
        required: false
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TrafficVolumeRanking'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Subscriberの通信量ランキングを返却します。
      tags:
      - Query
      x-soracom-cli:
      - query subscribers traffic-volume-ranking
      - query traffic-ranking
  /sigfox_devices:
    get:
      description: 条件にマッチするSigfox deviceのリストを返す。Sigfox deviceの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listSigfoxDevices
      parameters:
      - description: 検索対象にするタグの名前(完全一致)
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: 取得するSigfox deviceの上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のSigfox deviceのDevice ID。このパラメータを指定することで次のSigfox device以降のリストを取得できる
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: 条件にマッチするSigfox deviceのリスト
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Sigfox devices
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /sigfox_devices/{device_id}:
    get:
      description: 指定されたSigfox deviceの情報を返す。
      operationId: getSigfoxDevice
      parameters:
      - description: 対象のSigfox deviceのDevice ID
        in: path
        name: device_id
        required: true
        type: string
      responses:
        200:
          description: 指定されたSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get
  /sigfox_devices/{device_id}/data:
    get:
      description: 指定されたSigfoxデバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getDataFromSigfoxDevice
      parameters:
      - description: データ取得対象のSigfoxデバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 取得対象の期間の始まり (unixtime ミリ秒単位)
        in: query
        name: from
        required: false
        type: integer
      - description: 取得対象の期間の終わり (unixtime ミリ秒単位)
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データエントリのリスト
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      description: 指定したデバイスにデータを送信する。データはサーバに保持され、次に当該デバイスがデータ送信リクエストを行った際に送信される。未送信のデータがサーバにあった場合には、最新のデータで上書きされる。
      operationId: sendDataToSigfoxDevice
      parameters:
      - description: 送信先デバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 16進数でエンコードされたバイナリデータの文字列。バイナリデータのサイズは8 octets（16進数エンコードされた文字列で16文字）である必要がある。
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/SigfoxData'
      responses:
        204:
          description: データがサーバにセットされ、対象のデバイスによる取得待ち状態になったことを示す。
        404:
          description: 指定されたSigfoxデバイスが存在しない。
      security:
      - api_key: []
      - api_token: []
      summary: Send data to a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices send-data
  /sigfox_devices/{device_id}/disable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたSigfox deviceをTerminate不可能に設定する
      operationId: disableTerminationOnSigfoxDevice
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices disable-termination
  /sigfox_devices/{device_id}/enable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたSigfox deviceをTerminate可能に設定する
      operationId: enableTerminationOnSigfoxDevice
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices enable-termination
  /sigfox_devices/{device_id}/register:
    post:
      consumes:
      - application/json
      description: Sigfox デバイスを登録する
      operationId: registerSigfoxDevice
      parameters:
      - description: 登録対象のSigfoxデバイスのID
        in: path
        name: device_id
        required: true
        type: string
      - description: Sigfoxデバイスの登録リクエスト
        in: body
        name: registration_request
        required: true
        schema:
          $ref: '#/definitions/SigfoxRegistrationRequest'
      produces:
      - application/json
      responses:
        200:
          description: Sigfoxデバイスが正しく登録されました
          schema:
            $ref: '#/definitions/SigfoxDevice'
        400:
          description: PACが指定されていません
      security:
      - api_key: []
      - api_token: []
      summary: Register a Sigfox device.
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices register
  /sigfox_devices/{device_id}/set_group:
    post:
      consumes:
      - application/json
      description: 指定されたSigfox deviceの所属先Groupを指定あるいは上書き変更
      operationId: setSigfoxDeviceGroup
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: Group（IDのみを含めばよい）
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/Group'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Group to Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices set-group
  /sigfox_devices/{device_id}/tags:
    put:
      description: 指定されたSigfox deviceのタグを追加・更新
      operationId: putSigfoxDeviceTags
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update Sigfox device Tags
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices put-tags
  /sigfox_devices/{device_id}/tags/{tag_name}:
    delete:
      description: 指定されたSigfox deviceのタグを削除
      operationId: deleteSigfoxDeviceTag
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: 対象のタグの削除が完了
        404:
          description: 指定されたSigfox deviceあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Sigfox device Tag
      tags:
      - SigfoxDevice
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - sigfox-devices delete-tag
  /sigfox_devices/{device_id}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたSigfox deviceをTerminate
      operationId: terminateSigfoxDevice
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices terminate
  /sigfox_devices/{device_id}/unset_group:
    post:
      consumes:
      - text/plain
      description: 指定されたSigfox deviceのGroup指定を解除
      operationId: unsetSigfoxDeviceGroup
      parameters:
      - description: 対象のSigfox deviceのID
        in: path
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSigfox deviceの詳細情報
          schema:
            $ref: '#/definitions/SigfoxDevice'
        404:
          description: 指定されたSigfox deviceが存在しないか、Sigfox deviceはGroupに属していない
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group to Sigfox device
      tags:
      - SigfoxDevice
      x-soracom-cli:
      - sigfox-devices unset-group
  /stats/air/operators/{operator_id}/export:
    post:
      consumes:
      - application/json
      description: Operator が保有する全 Subscriber の通信量をファイルで取得する。取得対象の期間は from, to のunixtimeで指定する。履歴の詳細度は月単位。ファイルの出力先は
        AWS S3。ファイルの出力形式は CSV。
      operationId: exportAirStats
      parameters:
      - description: operator_id
        in: path
        name: operator_id
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      - description: 出力するデータの期間
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export Air Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats air export
  /stats/air/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: IMSI で指定した Subscriber の通信量履歴を取得する。
      operationId: getAirStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: 集計対象時刻の始まりをunixtimeで与える
        in: query
        name: from
        required: true
        type: integer
      - description: 集計対象時刻の終わりをunixtimeで与える
        in: query
        name: to
        required: true
        type: integer
      - description: 集計単位。minutesは基本的に5分間隔。
        enum:
        - month
        - day
        - minutes
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AirStatsResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Air Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats air get
  /stats/beam/operators/{operator_id}/export:
    post:
      consumes:
      - application/json
      description: Operator が保有する全 Subscriber の通信量をファイルで取得する。取得対象の期間は from, to のunixtimeで指定する。履歴の詳細度は月単位。ファイルの出力先は
        AWS S3。ファイルの出力形式は CSV。
      operationId: exportBeamStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: export_mode (async, sync)
        enum:
        - async
        - sync
        in: query
        name: export_mode
        required: false
        type: string
      - description: 出力するデータの期間
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Export Beam Usage Report of All Subscribers
      tags:
      - Stats
      x-soracom-cli:
      - stats beam export
  /stats/beam/subscribers/{imsi}:
    get:
      consumes:
      - application/json
      description: IMSI で指定した Subscriber のSoracom Beam利用量履歴を取得する。
      operationId: getBeamStats
      parameters:
      - description: imsi
        in: path
        name: imsi
        required: true
        type: string
      - description: 集計対象時刻の始まりをunixtimeで与える
        in: query
        name: from
        required: true
        type: integer
      - description: 集計対象時刻の終わりをunixtimeで与える
        in: query
        name: to
        required: true
        type: integer
      - description: 集計単位。minutesは基本的に5分間隔。
        enum:
        - month
        - day
        - minutes
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            items:
              $ref: '#/definitions/BeamStatsResponse'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get Beam Usage Report of Subscriber
      tags:
      - Stats
      x-soracom-cli:
      - stats beam get
  /stats/harvest/operators/{operator_id}:
    get:
      consumes:
      - application/json
      description: 指定された Operator の指定された年月における Harvest データの読み込みデータ通信量を byte 単位で取得します。
      operationId: getHarvestExportedDataStats
      parameters:
      - description: operator ID
        in: path
        name: operator_id
        required: true
        type: string
      - description: 年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/HarvestExportedDataStatsResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Harvest の利用統計情報を取得します。
      tags:
      - Stats
      x-soracom-cli:
      - stats harvest get
  /stats/napter/audit_logs:
    get:
      consumes:
      - application/json
      description: 指定された年月における Napter 監査ログの読み込みデータ通信量を byte 単位で取得する。
      operationId: getNapterAuditLogsExportedDataStats
      parameters:
      - description: 年月を YYYYMM 形式で指定します。
        in: query
        name: year_month
        required: false
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/NapterAuditLogsExportedDataStatsResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Napter 監査ログの月次読み込みデータ量を取得する。
      tags:
      - Stats
      x-soracom-cli:
      - stats napter audit-logs get
  /subscribers:
    get:
      description: 条件にマッチするSubscriberのリストを返す。Subscriberの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listSubscribers
      parameters:
      - description: 検索対象にするタグの名前(完全一致)。
        in: query
        name: tag_name
        required: false
        type: string
      - description: 検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件。
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: '検索対象にするstatus。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `active`,
          `inactive`, `ready`, `instock`, `shipped`, `suspended`, `terminated`'
        in: query
        name: status_filter
        required: false
        type: string
      - description: '検索対象にする速度クラス。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `s1.minimum`,
          `s1.slow`, `s1.standard`, `s1.fast`'
        in: query
        name: speed_class_filter
        required: false
        type: string
      - description: 検索対象にする製造番号。`|`で区切って複数指定することができる。指定された値で始まる製造番号を持つSubscriberの一覧を返す。
        in: query
        name: serial_number_filter
        required: false
        type: string
      - description: 取得するSubscriberの上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of subscibers
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Subscribers
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}:
    get:
      description: 指定されたSubscriberの情報を返す。
      operationId: getSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      responses:
        200:
          description: 指定されたSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers get
  /subscribers/{imsi}/activate:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberのステータスを有効化
      operationId: activateSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Activate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers activate
  /subscribers/{imsi}/data:
    get:
      description: 指定されたサブスクライバーから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: getDataFromSubscriber
      parameters:
      - description: データ取得対象のサブスクライバーのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: 取得対象の期間の始まり (unixtime ミリ秒単位)
        in: query
        name: from
        required: false
        type: integer
      - description: 取得対象の期間の終わり (unixtime ミリ秒単位)
        in: query
        name: to
        required: false
        type: integer
      - default: desc
        description: データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。
        enum:
        - desc
        - asc
        in: query
        name: sort
        required: false
        type: string
      - description: 取得するデータエントリ数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: データエントリのリスト
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: Get data sent from a subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - data get
      - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/deactivate:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberを無効化
      operationId: deactivateSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Deactivate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers deactivate
  /subscribers/{imsi}/delete_session:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberのセッションを切断します
      operationId: deleteSubscriberSession
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Session
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-session
  /subscribers/{imsi}/disable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberをTerminate不可能に設定する
      operationId: disableTermination
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Disable Termination of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers disable-termination
  /subscribers/{imsi}/enable_termination:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberをTerminate可能に設定する
      operationId: enableTermination
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Enable Termination of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers enable-termination
  /subscribers/{imsi}/events/sessions:
    get:
      description: 指定されたSubscriberのセッション作成・変更・削除のイベント履歴を返す。イベントの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。
      operationId: listSessionEvents
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: イベントの検索範囲時刻の始まり(unixtime)
        in: query
        name: from
        required: false
        type: integer
      - description: イベントの検索範囲時刻の終わり(unixtime)
        in: query
        name: to
        required: false
        type: integer
      - description: 取得するイベント数の上限
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のイベントのタイムスタンプ。このパラメータを指定することで次のイベント以降のリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      responses:
        200:
          description: A list of session events
          schema:
            items:
              $ref: '#/definitions/SessionEvent'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Session Events
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/{imsi}/register:
    post:
      consumes:
      - application/json
      description: Subscriberを登録
      operationId: registerSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: subscriber
        in: body
        name: subscriber
        required: true
        schema:
          $ref: '#/definitions/RegisterSubscribersRequest'
      produces:
      - application/json
      responses:
        201:
          description: Subscriber登録完了
          schema:
            $ref: '#/definitions/Subscriber'
      security:
      - api_key: []
      - api_token: []
      summary: Register Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers register
  /subscribers/{imsi}/report_local_info:
    post:
      consumes:
      - plain/text
      description: サブスクライバーに対し、SIMローカル情報をレポートするように指示する。
      operationId: reportLocalInfo
      parameters:
      - description: 対象のサブスクライバーのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        202:
          description: SIMローカル情報レポートの指示に成功。Subscriberの情報はSIMからのレポートが成功した時点で非同期に更新される
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: SubscriberがSIMローカル情報レポート機能に対応していない
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Triggers Subscriber to report SIM local info.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers report-local-info
  /subscribers/{imsi}/send_sms:
    post:
      consumes:
      - application/json
      description: 指定されたサブスクライバー宛にSMSを送信する。
      operationId: sendSms
      parameters:
      - description: SMS送信対象のサブスクライバーのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: メッセージ本体とエンコーディングタイプからなるSMS送信リクエスト
        in: body
        name: smsForwardingRequest
        required: true
        schema:
          $ref: '#/definitions/SmsForwardingRequest'
      produces:
      - application/json
      responses:
        202:
          description: SMS送信を受け付け完了。メッセージに割り振られたIDを返す
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        400:
          description: 指定されたサブスクライバーはSMS APIをサポートしていない
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Send SMS to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms
  /subscribers/{imsi}/set_expiry_time:
    post:
      consumes:
      - application/json
      description: 指定されたSubscriberの有効期限を更新
      operationId: setExpiryTime
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: 更新後の有効期限(unixtime:ミリ秒単位)
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ExpiryTime'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Update Expiry Time of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-expiry-time
  /subscribers/{imsi}/set_group:
    post:
      consumes:
      - application/json
      description: 指定されたSubscriberの所属先Groupを指定あるいは上書き変更
      operationId: setGroup
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: Group（IDのみを含めばよい）
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/SetGroupRequest'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Group to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-group
  /subscribers/{imsi}/set_imei_lock:
    post:
      consumes:
      - application/json
      description: 指定されたSubscriberのIMEIロック設定を指定
      operationId: setImeiLock
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: Subscriberに指定するIMEI lockの設定 （オンラインのSubscriberの現在のIMEIにロックするにはIMEIは指定しなくてもよい）
        in: body
        name: imeiLock
        required: false
        schema:
          $ref: '#/definitions/SetImeiLockRequest'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: IMEI文字列が無効か、オフラインのSubscriberにも関わらずIMEIが指定されていない.
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-imei-lock
  /subscribers/{imsi}/set_to_standby:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberをStandby（利用開始待ち）に設定する
      operationId: setSubscriberToStandby
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        400:
          description: 指定されたSubscriberはStandby（利用開始待ち）モードに対応していない
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Set Subscriber to standby mode.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers set-to-standby
  /subscribers/{imsi}/suspend:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberをSuspend
      operationId: suspendSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Suspend Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers suspend
  /subscribers/{imsi}/tags:
    put:
      description: 指定されたSubscriberのタグを追加・更新
      operationId: putSubscriberTags
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: 追加・更新対象のタグの配列
        in: body
        name: tags
        required: true
        schema:
          items:
            $ref: '#/definitions/TagUpdateRequest'
          type: array
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Bulk Insert or Update Subscriber Tags
      tags:
      - Subscriber
      x-sam-operationId: putTags
      x-soracom-cli:
      - subscribers put-tags
  /subscribers/{imsi}/tags/{tag_name}:
    delete:
      description: 指定されたSubscriberのタグを削除
      operationId: deleteSubscriberTag
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: 削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent()
          したものを指定する）
        in: path
        name: tag_name
        required: true
        type: string
      responses:
        204:
          description: 対象のタグの削除が完了
        404:
          description: 指定されたSubscriberあるいはタグが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Subscriber Tag
      tags:
      - Subscriber
      x-sam-operationId: deleteTag
      x-soracom-cli:
      - subscribers delete-tag
  /subscribers/{imsi}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberをTerminate
      operationId: terminateSubscriber
      parameters:
      - description: 対象のSubscriberのIMSI
        format: IMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers terminate
  /subscribers/{imsi}/unset_expiry_time:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberの有効期限を削除して無期限に変更
      operationId: unsetExpiryTime
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: 当該Subscriberの有効期限を無期限に変更完了
        404:
          description: 指定されたSubscriberが存在しないか、Subscriberに有効期限がない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Expiry Time of Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-expiry-time
  /subscribers/{imsi}/unset_group:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberのGroup指定を解除
      operationId: unsetGroup
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しないか、SubscriberはGroupに属していない
      security:
      - api_key: []
      - api_token: []
      summary: Unset Group to Subscriber
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-group
  /subscribers/{imsi}/unset_imei_lock:
    post:
      consumes:
      - text/plain
      description: 指定されたSubscriberのIMEIロック設定を解除
      operationId: unsetImeiLock
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Unset IMEI lock configuration for Subscriber.
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers unset-imei-lock
  /subscribers/{imsi}/update_speed_class:
    post:
      consumes:
      - application/json
      description: 指定されたSubscriberの速度クラスを変更します
      operationId: updateSpeedClass
      parameters:
      - description: 対象のSubscriberのIMSI
        in: path
        name: imsi
        required: true
        type: string
      - description: speed_class
        in: body
        name: speed_class
        required: true
        schema:
          $ref: '#/definitions/UpdateSpeedClassRequest'
      produces:
      - application/json
      responses:
        200:
          description: 更新後のSubscriberの詳細情報
          schema:
            $ref: '#/definitions/Subscriber'
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Update Subscriber speed class
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers update-speed-class
  /subscribers/msisdn/{msisdn}/send_sms:
    post:
      consumes:
      - application/json
      description: MSISDNで指定されたサブスクライバー宛にSMSを送信する。
      operationId: sendSmsByMsisdn
      parameters:
      - description: SMS送信対象のサブスクライバーのMSISDN
        in: path
        name: msisdn
        required: true
        type: string
      - description: メッセージ本体とエンコーディングタイプからなるSMS送信リクエスト
        in: body
        name: smsForwardingRequest
        required: true
        schema:
          $ref: '#/definitions/SmsForwardingRequest'
      produces:
      - application/json
      responses:
        202:
          description: SMS送信を受け付け完了。メッセージに割り振られたIDを返す
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        400:
          description: 指定されたサブスクライバーはSMS APIをサポートしていない
        404:
          description: 指定されたSubscriberが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Send SMS to Subscriber by MSISDN
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/{token}:
    delete:
      consumes:
      - application/json
      description: Subscriberのオペレーター間移管トークンを削除し、移管をキャンセルする。
      operationId: deleteSubscriberTransferToken
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: 削除を実行
        404:
          description: トークンが存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete Subscribers Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers delete-transfer-token
  /subscribers/transfer_token/issue:
    post:
      consumes:
      - application/json
      description: Subscriberのオペレーター間移管用トークンを、移管先オペレーターにメールで送付する。
      operationId: issueSubscriberTransferToken
      parameters:
      - description: 移管先オペレーターのメールアドレス、オペレーターID、移管対象のIMSI
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/IssueSubscriberTransferTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IssueSubscriberTransferTokenResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Issue Subscribers Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      consumes:
      - application/json
      description: Subscriber移管用のトークンを確認して、移管を実施する。このAPIは移管先のOperatorで呼び出しを行う。
      operationId: verifySubscriberTransferToken
      parameters:
      - description: 移管先に送付されたトークン
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/VerifySubscriberTransferTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/VerifySubscriberTransferTokenResponse'
      security:
      - api_key: []
      - api_token: []
      summary: Verify Subscriber Transfer Token
      tags:
      - Subscriber
      x-soracom-cli:
      - subscribers verify-transfer-token
  /virtual_private_gateways:
    get:
      description: VPGの一覧を返す
      operationId: listVirtualPrivateGateways
      parameters:
      - description: VPGについたTag名。完全一致するTag名が検索対象となる。tag_nameを指定した場合、tag_valueが必須。
        in: query
        name: tag_name
        required: false
        type: string
      - description: VPGについたTagの値。
        in: query
        name: tag_value
        required: false
        type: string
      - default: exact
        description: タグの検索条件。
        enum:
        - exact
        - prefix
        in: query
        name: tag_value_match_mode
        required: false
        type: string
      - description: レスポンス1ページあたりの最大数
        in: query
        name: limit
        required: false
        type: integer
      - description: 現ページで取得した最後のGroupのID。このパラメータを指定することで次のVPGから始まるリストを取得できる。
        in: query
        name: last_evaluated_key
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: VPGの一覧
          schema:
            items:
              $ref: '#/definitions/VirtualPrivateGateway'
            type: array
      security:
      - api_key: []
      - api_token: []
      summary: List Virtual Private Gateways
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
      - application/json
      description: VPGを新規作成する
      operationId: createVirtualPrivateGateway
      parameters:
      - description: 作成対象のVPGの情報を含むリクエスト
        in: body
        name: CreateVirtualPrivateGatewayRequest
        required: true
        schema:
          $ref: '#/definitions/CreateVirtualPrivateGatewayRequest'
      produces:
      - application/json
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/VirtualPrivateGateway'
      security:
      - api_key: []
      - api_token: []
      summary: Create Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create
  /virtual_private_gateways/{vpg_id}:
    get:
      description: 指定されたVPGの情報を取得する
      operationId: getVirtualPrivateGateway
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 指定されたVPG
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Get Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg get
  /virtual_private_gateways/{vpg_id}/gate/close:
    post:
      consumes:
      - text/plain
      description: 指定したVPGでSORACOM Gateを無効化し、Gateを閉じる
      operationId: closeGate
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: SORACOM Gateの無効化が完了
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Close SORACOM Gate.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg close-gate
  /virtual_private_gateways/{vpg_id}/gate/open:
    post:
      consumes:
      - application/json
      description: 指定したVPGでSORACOM Gateを有効化し、Gateを開く
      operationId: openGate
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: オプショナルなGateの設定パラメータ。
        in: body
        name: configuration_parameters
        required: false
        schema:
          $ref: '#/definitions/OpenGateRequest'
      produces:
      - application/json
      responses:
        200:
          description: SORACOM Gateの有効化が完了
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Open SORACOM Gate
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg open-gate
  /virtual_private_gateways/{vpg_id}/gate/peers:
    get:
      consumes:
      - text/plain
      description: VPGに登録されたGate Peerの一覧を取得する
      operationId: listGatePeers
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 正しくVPGに登録されたGate Peerのリストが取得出来た
          schema:
            items:
              $ref: '#/definitions/GatePeer'
            type: array
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: List VPG Gate peers
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-gate-peers
    post:
      consumes:
      - application/json
      description: VPGにGate Peerを登録する
      operationId: registerGatePeer
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - in: body
        name: gate_peer
        required: true
        schema:
          $ref: '#/definitions/RegisterGatePeerRequest'
      produces:
      - application/json
      responses:
        200:
          description: VPGにGate Peerの登録が完了した
          schema:
            $ref: '#/definitions/GatePeer'
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Register VPG Gate Peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg register-gate-peer
  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:
    delete:
      consumes:
      - text/plain
      description: Gate PeerをVPGから登録解除する
      operationId: unregisterGatePeer
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 対象のPeerのID
        in: path
        name: outer_ip_address
        required: true
        type: string
      produces:
      - application/json
      responses:
        204:
          description: Gate Peerの登録解除に成功
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGあるいはPeerは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Unregister VPG Gate Peer
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unregister-gate-peer
  /virtual_private_gateways/{vpg_id}/ip_address_map:
    get:
      consumes:
      - text/plain
      description: 指定されたVPGのIPアドレスマップのエントリーを取得する
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: IPアドレスのリスト取得に成功
          schema:
            items:
              $ref: '#/definitions/IpAddressMapEntry'
            type: array
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGあるいはPeerは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: List VPG IP address map entries
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg list-ip-address-map-entries
    post:
      consumes:
      - application/json
      description: VPGのIPアドレスマップのエントリーを追加する
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - in: body
        name: put_ip_address_map_entry_request
        required: true
        schema:
          $ref: '#/definitions/PutIpAddressMapEntryRequest'
      produces:
      - application/json
      responses:
        200:
          description: IPアドレスマップのエントリー追加に成功
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Put VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg put-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:
    delete:
      consumes:
      - text/plain
      description: VPGのIPアドレスマップからエントリーを削除する
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 対象のKey
        in: path
        name: key
        required: true
        type: string
      produces:
      - text/plainn
      responses:
        204:
          description: IPアドレスマップのエントリー削除に成功
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        400:
          description: リクエストに誤りがある
        404:
          description: 指定されたVPGあるいはPeerは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete VPG IP address map entry
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-ip-address-map-entry
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:
    post:
      description: Junction ミラーリング peer を追加します。
      operationId: createMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: ミラーリング peer に関する情報
        in: body
        name: mirroring peer
        required: true
        schema:
          $ref: '#/definitions/JunctionMirroringPeer'
      responses:
        "201":
          description: ミラーリング peer が作成または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction ミラーリング peer を追加します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:
    delete:
      consumes:
      - text/plain
      description: Junction ミラーリング peer を削除します。
      operationId: deleteMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 削除したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        type: string
      produces:
      - text/plainn
      responses:
        "204":
          description: ミラーリング peer が削除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction ミラーリング peer を削除します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-mirroring-peer
    put:
      description: Junction ミラーリング peer を更新します。
      operationId: updateMirroringPeer
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 更新したいミラーリング peer の IP アドレス
        in: path
        name: ipaddr
        required: true
        type: string
      - description: 更新する属性のリスト
        in: body
        name: updates
        required: true
        schema:
          items:
            $ref: '#/definitions/AttributeUpdate'
          type: array
      responses:
        "200":
          description: ミラーリング peer の情報が更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction ミラーリング peer を更新します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg update-mirroring-peer
  /virtual_private_gateways/{vpg_id}/junction/set_inspection:
    post:
      description: Junction インスペクション機能の設定を行います。
      operationId: setInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: インスペクション設定内容
        in: body
        name: inspection configuration
        required: true
        schema:
          $ref: '#/definitions/JunctionInspectionConfiguration'
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction インスペクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-inspection
  /virtual_private_gateways/{vpg_id}/junction/set_redirection:
    post:
      description: Junction リダイレクション機能の設定を行います。
      operationId: setRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: リダイレクション設定内容
        in: body
        name: redirection configuration
        required: true
        schema:
          $ref: '#/definitions/JunctionRedirectionConfiguration'
      responses:
        "200":
          description: 設定内容が追加または更新されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction リダイレクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-redirection
  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:
    post:
      description: Junction インスペクション機能の設定を解除します。
      operationId: unsetInspectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction インスペクション機能の設定を解除します。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-inspection
  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:
    post:
      description: Junction リダイレクション機能の設定を行います。
      operationId: unsetRedirectionConfiguration
      parameters:
      - description: VPG ID
        in: path
        name: vpg_id
        required: true
        type: string
      responses:
        "200":
          description: 設定が解除されました。
        "404":
          description: 指定された VPG が見つかりませんでした。
      security:
      - api_key: []
      - api_token: []
      summary: Junction リダイレクション機能の設定を行います。
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg unset-redirection
  /virtual_private_gateways/{vpg_id}/set_routing_filter:
    post:
      consumes:
      - application/json
      description: VPGのOutboundルーティングフィルタを設定する
      operationId: setRoutingFilter
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: ルーティングフィルタエントリのリスト
        in: body
        name: routing_filter_entries
        required: true
        schema:
          items:
            $ref: '#/definitions/RoutingFilterEntry'
          type: array
      produces:
      - application/json
      responses:
        200:
          description: ルーティングフィルタが正しく設定された
        400:
          description: 引数が不正
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Sets Virtual Private Gateway outbound routing filter.
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg set-routing-filter
  /virtual_private_gateways/{vpg_id}/terminate:
    post:
      consumes:
      - text/plain
      description: 指定されたVPGをTerminateする
      operationId: terminateVirtualPrivateGateway
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: 指定されたVPGのTerminate作業を開始
        400:
          description: 指定されたVPGのTerminate出来ない理由が存在
        404:
          description: 指定されたVPGは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Terminate Virtual Private Gateway
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg terminate
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:
    post:
      consumes:
      - application/json
      description: 指定されたVPGにVPC Peering Connectionを作成
      operationId: createVpcPeeringConnection
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 作成対象のVPC Peering Connection
        in: body
        name: vpc_peering_connection
        required: true
        schema:
          $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
      produces:
      - application/json
      responses:
        201:
          description: 作成されたVPC Peering Connection
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
        404:
          description: 指定されたVPC Peering Connectionは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Create VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg create-vpc-peering-connection
  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:
    delete:
      description: 指定されたVPC Peering Connectionを削除
      operationId: deleteVpcPeeringConnection
      parameters:
      - description: 対象のVPGのID
        in: path
        name: vpg_id
        required: true
        type: string
      - description: 削除対象のVPC Peering ConnectionのID
        in: path
        name: pcx_id
        required: true
        type: string
      responses:
        204:
          description: 指定されたVPC Peering Connectionの削除完了
        404:
          description: 指定されたVPC Peering Connectionは存在しない
      security:
      - api_key: []
      - api_token: []
      summary: Delete VPC Peering Connection
      tags:
      - VirtualPrivateGateway
      x-soracom-cli:
      - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      consumes:
      - application/json
      description: 契約済みの長期利用割引リストを返します。
      operationId: listVolumeDiscounts
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/ListVolumeDiscountResponse'
      security:
      - api_key: []
      - api_token: []
      summary: List long term discounts.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts list
  /volume_discounts/{contract_id}:
    get:
      consumes:
      - application/json
      description: 契約済みの長期利用割引を返します。
      operationId: getVolumeDiscount
      parameters:
      - description: contract_id
        in: path
        name: contract_id
        required: true
        type: string
      produces:
      - application/json;charset=UTF-8
      responses:
        "200":
          description: OK.
          schema:
            $ref: '#/definitions/GetVolumeDiscountResponse'
        "400":
          description: 長期利用割引が見つかりません。
      security:
      - api_key: []
      - api_token: []
      summary: Get long term discount.
      tags:
      - Payment
      x-soracom-cli:
      - volume-discounts get
produces:
- application/json
schemes:
- https
securityDefinitions:
  api_key:
    in: header
    name: X-Soracom-API-Key
    type: apiKey
  api_token:
    in: header
    name: X-Soracom-Token
    type: apiKey
swagger: "2.0"
